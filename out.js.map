{
  "version": 3,
  "sources": ["node_modules/@svgdotjs/svg.js/src/utils/methods.js", "node_modules/@svgdotjs/svg.js/src/utils/utils.js", "node_modules/@svgdotjs/svg.js/src/modules/core/namespaces.js", "node_modules/@svgdotjs/svg.js/src/utils/window.js", "node_modules/@svgdotjs/svg.js/src/types/Base.js", "node_modules/@svgdotjs/svg.js/src/utils/adopter.js", "node_modules/@svgdotjs/svg.js/src/modules/optional/arrange.js", "node_modules/@svgdotjs/svg.js/src/modules/core/regex.js", "node_modules/@svgdotjs/svg.js/src/modules/optional/class.js", "node_modules/@svgdotjs/svg.js/src/modules/optional/css.js", "node_modules/@svgdotjs/svg.js/src/modules/optional/data.js", "node_modules/@svgdotjs/svg.js/src/modules/optional/memory.js", "node_modules/@svgdotjs/svg.js/src/types/Color.js", "node_modules/@svgdotjs/svg.js/src/types/Point.js", "node_modules/@svgdotjs/svg.js/src/types/Matrix.js", "node_modules/@svgdotjs/svg.js/src/modules/core/parser.js", "node_modules/@svgdotjs/svg.js/src/types/Box.js", "node_modules/@svgdotjs/svg.js/src/types/List.js", "node_modules/@svgdotjs/svg.js/src/modules/core/selector.js", "node_modules/@svgdotjs/svg.js/src/modules/core/event.js", "node_modules/@svgdotjs/svg.js/src/types/EventTarget.js", "node_modules/@svgdotjs/svg.js/src/modules/core/defaults.js", "node_modules/@svgdotjs/svg.js/src/types/SVGArray.js", "node_modules/@svgdotjs/svg.js/src/types/SVGNumber.js", "node_modules/@svgdotjs/svg.js/src/modules/core/attr.js", "node_modules/@svgdotjs/svg.js/src/elements/Dom.js", "node_modules/@svgdotjs/svg.js/src/elements/Element.js", "node_modules/@svgdotjs/svg.js/src/modules/optional/sugar.js", "node_modules/@svgdotjs/svg.js/src/modules/optional/transform.js", "node_modules/@svgdotjs/svg.js/src/elements/Container.js", "node_modules/@svgdotjs/svg.js/src/elements/Defs.js", "node_modules/@svgdotjs/svg.js/src/elements/Shape.js", "node_modules/@svgdotjs/svg.js/src/modules/core/circled.js", "node_modules/@svgdotjs/svg.js/src/elements/Ellipse.js", "node_modules/@svgdotjs/svg.js/src/elements/Fragment.js", "node_modules/@svgdotjs/svg.js/src/modules/core/gradiented.js", "node_modules/@svgdotjs/svg.js/src/elements/Gradient.js", "node_modules/@svgdotjs/svg.js/src/elements/Pattern.js", "node_modules/@svgdotjs/svg.js/src/elements/Image.js", "node_modules/@svgdotjs/svg.js/src/types/PointArray.js", "node_modules/@svgdotjs/svg.js/src/modules/core/pointed.js", "node_modules/@svgdotjs/svg.js/src/elements/Line.js", "node_modules/@svgdotjs/svg.js/src/elements/Marker.js", "node_modules/@svgdotjs/svg.js/src/animation/Controller.js", "node_modules/@svgdotjs/svg.js/src/utils/pathParser.js", "node_modules/@svgdotjs/svg.js/src/types/PathArray.js", "node_modules/@svgdotjs/svg.js/src/animation/Morphable.js", "node_modules/@svgdotjs/svg.js/src/elements/Path.js", "node_modules/@svgdotjs/svg.js/src/modules/core/poly.js", "node_modules/@svgdotjs/svg.js/src/elements/Polygon.js", "node_modules/@svgdotjs/svg.js/src/elements/Polyline.js", "node_modules/@svgdotjs/svg.js/src/elements/Rect.js", "node_modules/@svgdotjs/svg.js/src/animation/Queue.js", "node_modules/@svgdotjs/svg.js/src/animation/Animator.js", "node_modules/@svgdotjs/svg.js/src/animation/Timeline.js", "node_modules/@svgdotjs/svg.js/src/animation/Runner.js", "node_modules/@svgdotjs/svg.js/src/elements/Svg.js", "node_modules/@svgdotjs/svg.js/src/elements/Symbol.js", "node_modules/@svgdotjs/svg.js/src/modules/core/textable.js", "node_modules/@svgdotjs/svg.js/src/elements/Text.js", "node_modules/@svgdotjs/svg.js/src/elements/Tspan.js", "node_modules/@svgdotjs/svg.js/src/elements/Circle.js", "node_modules/@svgdotjs/svg.js/src/elements/ClipPath.js", "node_modules/@svgdotjs/svg.js/src/elements/ForeignObject.js", "node_modules/@svgdotjs/svg.js/src/modules/core/containerGeometry.js", "node_modules/@svgdotjs/svg.js/src/elements/G.js", "node_modules/@svgdotjs/svg.js/src/elements/A.js", "node_modules/@svgdotjs/svg.js/src/elements/Mask.js", "node_modules/@svgdotjs/svg.js/src/elements/Stop.js", "node_modules/@svgdotjs/svg.js/src/elements/Style.js", "node_modules/@svgdotjs/svg.js/src/elements/TextPath.js", "node_modules/@svgdotjs/svg.js/src/elements/Use.js", "node_modules/@svgdotjs/svg.js/src/main.js", "index.ts"],
  "sourcesContent": ["const methods = {}\r\nconst names = []\r\n\r\nexport function registerMethods (name, m) {\r\n  if (Array.isArray(name)) {\r\n    for (const _name of name) {\r\n      registerMethods(_name, m)\r\n    }\r\n    return\r\n  }\r\n\r\n  if (typeof name === 'object') {\r\n    for (const _name in name) {\r\n      registerMethods(_name, name[_name])\r\n    }\r\n    return\r\n  }\r\n\r\n  addMethodNames(Object.getOwnPropertyNames(m))\r\n  methods[name] = Object.assign(methods[name] || {}, m)\r\n}\r\n\r\nexport function getMethodsFor (name) {\r\n  return methods[name] || {}\r\n}\r\n\r\nexport function getMethodNames () {\r\n  return [ ...new Set(names) ]\r\n}\r\n\r\nexport function addMethodNames (_names) {\r\n  names.push(..._names)\r\n}\r\n", "// Map function\r\nexport function map (array, block) {\r\n  let i\r\n  const il = array.length\r\n  const result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    result.push(block(array[i]))\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Filter function\r\nexport function filter (array, block) {\r\n  let i\r\n  const il = array.length\r\n  const result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    if (block(array[i])) {\r\n      result.push(array[i])\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Degrees to radians\r\nexport function radians (d) {\r\n  return d % 360 * Math.PI / 180\r\n}\r\n\r\n// Radians to degrees\r\nexport function degrees (r) {\r\n  return r * 180 / Math.PI % 360\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nexport function camelCase (s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function (m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Convert camel cased string to dash separated\r\nexport function unCamelCase (s) {\r\n  return s.replace(/([A-Z])/g, function (m, g) {\r\n    return '-' + g.toLowerCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nexport function capitalize (s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nexport function proportionalSize (element, width, height, box) {\r\n  if (width == null || height == null) {\r\n    box = box || element.bbox()\r\n\r\n    if (width == null) {\r\n      width = box.width / box.height * height\r\n    } else if (height == null) {\r\n      height = box.height / box.width * width\r\n    }\r\n  }\r\n\r\n  return {\r\n    width: width,\r\n    height: height\r\n  }\r\n}\r\n\r\n/**\r\n * This function adds support for string origins.\r\n * It searches for an origin in o.origin o.ox and o.originX.\r\n * This way, origin: {x: 'center', y: 50} can be passed as well as ox: 'center', oy: 50\r\n**/\r\nexport function getOrigin (o, element) {\r\n  const origin = o.origin\r\n  // First check if origin is in ox or originX\r\n  let ox = o.ox != null\n    ? o.ox\r\n    : o.originX != null\n      ? o.originX\r\n      : 'center'\r\n  let oy = o.oy != null\n    ? o.oy\r\n    : o.originY != null\n      ? o.originY\r\n      : 'center'\r\n\r\n  // Then check if origin was used and overwrite in that case\r\n  if (origin != null) {\r\n    [ ox, oy ] = Array.isArray(origin)\n      ? origin\r\n      : typeof origin === 'object'\n        ? [ origin.x, origin.y ]\r\n        : [ origin, origin ]\r\n  }\r\n\r\n  // Make sure to only call bbox when actually needed\r\n  const condX = typeof ox === 'string'\r\n  const condY = typeof oy === 'string'\r\n  if (condX || condY) {\r\n    const { height, width, x, y } = element.bbox()\r\n\r\n    // And only overwrite if string was passed for this specific axis\r\n    if (condX) {\r\n      ox = ox.includes('left')\n        ? x\r\n        : ox.includes('right')\n          ? x + width\r\n          : x + width / 2\r\n    }\r\n\r\n    if (condY) {\r\n      oy = oy.includes('top')\n        ? y\r\n        : oy.includes('bottom')\n          ? y + height\r\n          : y + height / 2\r\n    }\r\n  }\r\n\r\n  // Return the origin as it is if it wasn't a string\r\n  return [ ox, oy ]\r\n}\r\n", "// Default namespaces\nexport const svg = 'http://www.w3.org/2000/svg'\nexport const html = 'http://www.w3.org/1999/xhtml'\nexport const xmlns = 'http://www.w3.org/2000/xmlns/'\nexport const xlink = 'http://www.w3.org/1999/xlink'\nexport const svgjs = 'http://svgjs.dev/svgjs'\n", "export const globals = {\r\n  window: typeof window === 'undefined' ? null : window,\r\n  document: typeof document === 'undefined' ? null : document\r\n}\r\n\r\nexport function registerWindow (win = null, doc = null) {\r\n  globals.window = win\r\n  globals.document = doc\r\n}\r\n\r\nconst save = {}\r\n\r\nexport function saveWindow () {\r\n  save.window = globals.window\r\n  save.document = globals.document\r\n}\r\n\r\nexport function restoreWindow () {\r\n  globals.window = save.window\r\n  globals.document = save.document\r\n}\r\n\r\nexport function withWindow (win, fn) {\r\n  saveWindow()\r\n  registerWindow(win, win.document)\r\n  fn(win, win.document)\r\n  restoreWindow()\r\n}\r\n\r\nexport function getWindow () {\r\n  return globals.window\r\n}\r\n", "export default class Base {\r\n  // constructor (node/*, {extensions = []} */) {\r\n  //   // this.tags = []\r\n  //   //\r\n  //   // for (let extension of extensions) {\r\n  //   //   extension.setup.call(this, node)\r\n  //   //   this.tags.push(extension.name)\r\n  //   // }\r\n  // }\r\n}\r\n", "import { addMethodNames } from './methods.js'\nimport { capitalize } from './utils.js'\nimport { svg } from '../modules/core/namespaces.js'\nimport { globals } from '../utils/window.js'\nimport Base from '../types/Base.js'\n\nconst elements = {}\nexport const root = '___SYMBOL___ROOT___'\n\n// Method for element creation\nexport function create (name, ns = svg) {\n  // create element\n  return globals.document.createElementNS(ns, name)\n}\n\nexport function makeInstance (element, isHTML = false) {\n  if (element instanceof Base) return element\n\n  if (typeof element === 'object') {\n    return adopter(element)\n  }\n\n  if (element == null) {\n    return new elements[root]()\n  }\n\n  if (typeof element === 'string' && element.charAt(0) !== '<') {\n    return adopter(globals.document.querySelector(element))\n  }\n\n  // Make sure, that HTML elements are created with the correct namespace\n  const wrapper = isHTML ? globals.document.createElement('div') : create('svg')\n  wrapper.innerHTML = element\n\n  // We can use firstChild here because we know,\n  // that the first char is < and thus an element\n  element = adopter(wrapper.firstChild)\n\n  // make sure, that element doesnt have its wrapper attached\n  wrapper.removeChild(wrapper.firstChild)\n  return element\n}\n\nexport function nodeOrNew (name, node) {\n  return (node && node.ownerDocument && node instanceof node.ownerDocument.defaultView.Node) ? node : create(name)\n}\n\n// Adopt existing svg elements\nexport function adopt (node) {\n  // check for presence of node\n  if (!node) return null\n\n  // make sure a node isn't already adopted\n  if (node.instance instanceof Base) return node.instance\n\n  if (node.nodeName === '#document-fragment') {\n    return new elements.Fragment(node)\n  }\n\n  // initialize variables\n  let className = capitalize(node.nodeName || 'Dom')\n\n  // Make sure that gradients are adopted correctly\n  if (className === 'LinearGradient' || className === 'RadialGradient') {\n    className = 'Gradient'\n\n  // Fallback to Dom if element is not known\n  } else if (!elements[className]) {\n    className = 'Dom'\n  }\n\n  return new elements[className](node)\n}\n\nlet adopter = adopt\n\nexport function mockAdopt (mock = adopt) {\n  adopter = mock\n}\n\nexport function register (element, name = element.name, asRoot = false) {\n  elements[name] = element\n  if (asRoot) elements[root] = element\n\n  addMethodNames(Object.getOwnPropertyNames(element.prototype))\n\n  return element\n}\n\nexport function getClass (name) {\n  return elements[name]\n}\n\n// Element id sequence\nlet did = 1000\n\n// Get next named element id\nexport function eid (name) {\n  return 'Svgjs' + capitalize(name) + (did++)\n}\n\n// Deep new id assignment\nexport function assignNewId (node) {\n  // do the same for SVG child nodes as well\n  for (let i = node.children.length - 1; i >= 0; i--) {\n    assignNewId(node.children[i])\n  }\n\n  if (node.id) {\n    node.id = eid(node.nodeName)\n    return node\n  }\n\n  return node\n}\n\n// Method for extending objects\nexport function extend (modules, methods) {\n  let key, i\n\n  modules = Array.isArray(modules) ? modules : [ modules ]\n\n  for (i = modules.length - 1; i >= 0; i--) {\n    for (key in methods) {\n      modules[i].prototype[key] = methods[key]\n    }\n  }\n}\n\nexport function wrapWithAttrCheck (fn) {\n  return function (...args) {\n    const o = args[args.length - 1]\n\n    if (o && o.constructor === Object && !(o instanceof Array)) {\n      return fn.apply(this, args.slice(0, -1)).attr(o)\n    } else {\n      return fn.apply(this, args)\n    }\n  }\n}\n", "import { makeInstance } from '../../utils/adopter.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Get all siblings, including myself\r\nexport function siblings () {\r\n  return this.parent().children()\r\n}\r\n\r\n// Get the current position siblings\r\nexport function position () {\r\n  return this.parent().index(this)\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function next () {\r\n  return this.siblings()[this.position() + 1]\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function prev () {\r\n  return this.siblings()[this.position() - 1]\r\n}\r\n\r\n// Send given element one step forward\r\nexport function forward () {\r\n  const i = this.position()\r\n  const p = this.parent()\r\n\r\n  // move node one step forward\r\n  p.add(this.remove(), i + 1)\r\n\r\n  return this\r\n}\r\n\r\n// Send given element one step backward\r\nexport function backward () {\r\n  const i = this.position()\r\n  const p = this.parent()\r\n\r\n  p.add(this.remove(), i ? i - 1 : 0)\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the front\r\nexport function front () {\r\n  const p = this.parent()\r\n\r\n  // Move node forward\r\n  p.add(this.remove())\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the back\r\nexport function back () {\r\n  const p = this.parent()\r\n\r\n  // Move node back\r\n  p.add(this.remove(), 0)\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element before the targeted element\r\nexport function before (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  const i = this.position()\r\n\r\n  this.parent().add(element, i)\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element after the targeted element\r\nexport function after (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  const i = this.position()\r\n\r\n  this.parent().add(element, i + 1)\r\n\r\n  return this\r\n}\r\n\r\nexport function insertBefore (element) {\r\n  element = makeInstance(element)\r\n  element.before(this)\r\n  return this\r\n}\r\n\r\nexport function insertAfter (element) {\r\n  element = makeInstance(element)\r\n  element.after(this)\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  siblings,\r\n  position,\r\n  next,\r\n  prev,\r\n  forward,\r\n  backward,\r\n  front,\r\n  back,\r\n  before,\r\n  after,\r\n  insertBefore,\r\n  insertAfter\r\n})\r\n", "// Parse unit value\r\nexport const numberAndUnit = /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n// Parse hex value\r\nexport const hex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n// Parse rgb value\r\nexport const rgb = /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n// Parse reference id\r\nexport const reference = /(#[a-z_][a-z0-9\\-_]*)/i\r\n\r\n// splits a transformation chain\r\nexport const transforms = /\\)\\s*,?\\s*/\r\n\r\n// Whitespace\r\nexport const whitespace = /\\s/g\r\n\r\n// Test hex value\r\nexport const isHex = /^#[a-f0-9]{3}$|^#[a-f0-9]{6}$/i\r\n\r\n// Test rgb value\r\nexport const isRgb = /^rgb\\(/\r\n\r\n// Test for blank string\r\nexport const isBlank = /^(\\s+)?$/\r\n\r\n// Test for numeric string\r\nexport const isNumber = /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n// Test for image url\r\nexport const isImage = /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n// split at whitespace and comma\r\nexport const delimiter = /[\\s,]+/\r\n\r\n// Test for path letter\r\nexport const isPathLetter = /[MLHVCSQTAZ]/i\r\n", "import { delimiter } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Return array of classes on the node\r\nexport function classes () {\r\n  const attr = this.attr('class')\r\n  return attr == null ? [] : attr.trim().split(delimiter)\r\n}\r\n\r\n// Return true if class exists on the node, false otherwise\r\nexport function hasClass (name) {\r\n  return this.classes().indexOf(name) !== -1\r\n}\r\n\r\n// Add class to the node\r\nexport function addClass (name) {\r\n  if (!this.hasClass(name)) {\r\n    const array = this.classes()\r\n    array.push(name)\r\n    this.attr('class', array.join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Remove class from the node\r\nexport function removeClass (name) {\r\n  if (this.hasClass(name)) {\r\n    this.attr('class', this.classes().filter(function (c) {\r\n      return c !== name\r\n    }).join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Toggle the presence of a class on the node\r\nexport function toggleClass (name) {\r\n  return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  classes, hasClass, addClass, removeClass, toggleClass\r\n})\r\n", "import { camelCase } from '../../utils/utils.js'\r\nimport { isBlank } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Dynamic style generator\r\nexport function css (style, val) {\r\n  const ret = {}\r\n  if (arguments.length === 0) {\r\n    // get full style as object\r\n    this.node.style.cssText.split(/\\s*;\\s*/)\r\n      .filter(function (el) {\r\n        return !!el.length\r\n      })\r\n      .forEach(function (el) {\r\n        const t = el.split(/\\s*:\\s*/)\r\n        ret[t[0]] = t[1]\r\n      })\r\n    return ret\r\n  }\r\n\r\n  if (arguments.length < 2) {\r\n    // get style properties as array\r\n    if (Array.isArray(style)) {\r\n      for (const name of style) {\r\n        const cased = camelCase(name)\r\n        ret[name] = this.node.style[cased]\r\n      }\r\n      return ret\r\n    }\r\n\r\n    // get style for property\r\n    if (typeof style === 'string') {\r\n      return this.node.style[camelCase(style)]\r\n    }\r\n\r\n    // set styles in object\r\n    if (typeof style === 'object') {\r\n      for (const name in style) {\r\n        // set empty string if null/undefined/'' was given\r\n        this.node.style[camelCase(name)]\r\n          = (style[name] == null || isBlank.test(style[name])) ? '' : style[name]\r\n      }\r\n    }\r\n  }\r\n\r\n  // set style for property\r\n  if (arguments.length === 2) {\r\n    this.node.style[camelCase(style)]\r\n      = (val == null || isBlank.test(val)) ? '' : val\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Show element\r\nexport function show () {\r\n  return this.css('display', '')\r\n}\r\n\r\n// Hide element\r\nexport function hide () {\r\n  return this.css('display', 'none')\r\n}\r\n\r\n// Is element visible?\r\nexport function visible () {\r\n  return this.css('display') !== 'none'\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  css, show, hide, visible\r\n})\r\n", "import { registerMethods } from '../../utils/methods.js'\r\nimport { filter, map } from '../../utils/utils.js'\r\n\r\n// Store data values on svg nodes\r\nexport function data (a, v, r) {\r\n  if (a == null) {\r\n    // get an object of attributes\r\n    return this.data(map(filter(this.node.attributes, (el) => el.nodeName.indexOf('data-') === 0), (el) => el.nodeName.slice(5)))\r\n  } else if (a instanceof Array) {\r\n    const data = {}\r\n    for (const key of a) {\r\n      data[key] = this.data(key)\r\n    }\r\n    return data\r\n  } else if (typeof a === 'object') {\r\n    for (v in a) {\r\n      this.data(v, a[v])\r\n    }\r\n  } else if (arguments.length < 2) {\r\n    try {\r\n      return JSON.parse(this.attr('data-' + a))\r\n    } catch (e) {\r\n      return this.attr('data-' + a)\r\n    }\r\n  } else {\r\n    this.attr('data-' + a,\r\n      v === null\n        ? null\r\n        : r === true || typeof v === 'string' || typeof v === 'number'\n          ? v\r\n          : JSON.stringify(v)\r\n    )\r\n  }\r\n\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', { data })\r\n", "import { registerMethods } from '../../utils/methods.js'\r\n\r\n// Remember arbitrary data\r\nexport function remember (k, v) {\r\n  // remember every item in an object individually\r\n  if (typeof arguments[0] === 'object') {\r\n    for (const key in k) {\r\n      this.remember(key, k[key])\r\n    }\r\n  } else if (arguments.length === 1) {\r\n    // retrieve memory\r\n    return this.memory()[k]\r\n  } else {\r\n    // store memory\r\n    this.memory()[k] = v\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Erase a given memory\r\nexport function forget () {\r\n  if (arguments.length === 0) {\r\n    this._memory = {}\r\n  } else {\r\n    for (let i = arguments.length - 1; i >= 0; i--) {\r\n      delete this.memory()[arguments[i]]\r\n    }\r\n  }\r\n  return this\r\n}\r\n\r\n// This triggers creation of a new hidden class which is not performant\r\n// However, this function is not rarely used so it will not happen frequently\r\n// Return local memory object\r\nexport function memory () {\r\n  return (this._memory = this._memory || {})\r\n}\r\n\r\nregisterMethods('Dom', { remember, forget, memory })\r\n", "\r\nimport { hex, isHex, isRgb, rgb, whitespace } from '../modules/core/regex.js'\r\n\r\nfunction sixDigitHex (hex) {\r\n  return hex.length === 4\r\n    ? [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2),\r\n      hex.substring(2, 3), hex.substring(2, 3),\r\n      hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('')\r\n    : hex\r\n}\r\n\r\nfunction componentHex (component) {\r\n  const integer = Math.round(component)\r\n  const bounded = Math.max(0, Math.min(255, integer))\r\n  const hex = bounded.toString(16)\r\n  return hex.length === 1 ? '0' + hex : hex\r\n}\r\n\r\nfunction is (object, space) {\r\n  for (let i = space.length; i--;) {\r\n    if (object[space[i]] == null) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getParameters (a, b) {\r\n  const params = is(a, 'rgb')\n    ? { _a: a.r, _b: a.g, _c: a.b, _d: 0, space: 'rgb' }\r\n    : is(a, 'xyz')\n      ? { _a: a.x, _b: a.y, _c: a.z, _d: 0, space: 'xyz' }\r\n      : is(a, 'hsl')\n        ? { _a: a.h, _b: a.s, _c: a.l, _d: 0, space: 'hsl' }\r\n        : is(a, 'lab')\n          ? { _a: a.l, _b: a.a, _c: a.b, _d: 0, space: 'lab' }\r\n          : is(a, 'lch')\n            ? { _a: a.l, _b: a.c, _c: a.h, _d: 0, space: 'lch' }\r\n            : is(a, 'cmyk')\n              ? { _a: a.c, _b: a.m, _c: a.y, _d: a.k, space: 'cmyk' }\r\n              : { _a: 0, _b: 0, _c: 0, space: 'rgb' }\r\n\r\n  params.space = b || params.space\r\n  return params\r\n}\r\n\r\nfunction cieSpace (space) {\r\n  if (space === 'lab' || space === 'xyz' || space === 'lch') {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nfunction hueToRgb (p, q, t) {\r\n  if (t < 0) t += 1\r\n  if (t > 1) t -= 1\r\n  if (t < 1 / 6) return p + (q - p) * 6 * t\r\n  if (t < 1 / 2) return q\r\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\r\n  return p\r\n}\r\n\r\nexport default class Color {\r\n  constructor (...inputs) {\r\n    this.init(...inputs)\r\n  }\r\n\r\n  // Test if given value is a color\n  static isColor (color) {\r\n    return color && (\r\n      color instanceof Color\r\n      || this.isRgb(color)\r\n      || this.test(color)\r\n    )\r\n  }\n\n  // Test if given value is an rgb object\n  static isRgb (color) {\r\n    return color && typeof color.r === 'number'\r\n      && typeof color.g === 'number'\r\n      && typeof color.b === 'number'\r\n  }\n\n  /*\r\n  Generating random colors\r\n  */\n  static random (mode = 'vibrant', t, u) {\r\n\r\n    // Get the math modules\r\n    const { random, round, sin, PI: pi } = Math\r\n\r\n    // Run the correct generator\r\n    if (mode === 'vibrant') {\r\n\r\n      const l = (81 - 57) * random() + 57\r\n      const c = (83 - 45) * random() + 45\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'sine') {\r\n\r\n      t = t == null ? random() : t\r\n      const r = round(80 * sin(2 * pi * t / 0.5 + 0.01) + 150)\r\n      const g = round(50 * sin(2 * pi * t / 0.5 + 4.6) + 200)\r\n      const b = round(100 * sin(2 * pi * t / 0.5 + 2.3) + 150)\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'pastel') {\r\n\r\n      const l = (94 - 86) * random() + 86\r\n      const c = (26 - 9) * random() + 9\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'dark') {\r\n\r\n      const l = 10 + 10 * random()\r\n      const c = (125 - 75) * random() + 86\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'rgb') {\r\n\r\n      const r = 255 * random()\r\n      const g = 255 * random()\r\n      const b = 255 * random()\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'lab') {\r\n\r\n      const l = 100 * random()\r\n      const a = 256 * random() - 128\r\n      const b = 256 * random() - 128\r\n      const color = new Color(l, a, b, 'lab')\r\n      return color\r\n\r\n    } else if (mode === 'grey') {\r\n\r\n      const grey = 255 * random()\r\n      const color = new Color(grey, grey, grey)\r\n      return color\r\n\r\n    } else {\r\n\r\n      throw new Error('Unsupported random color mode')\r\n\r\n    }\r\n  }\n\n  // Test if given value is a color string\n  static test (color) {\r\n    return (typeof color === 'string')\r\n      && (isHex.test(color) || isRgb.test(color))\r\n  }\n\n  cmyk () {\r\n\r\n    // Get the rgb values for the current color\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Get the cmyk values in an unbounded format\r\n    const k = Math.min(1 - r, 1 - g, 1 - b)\r\n\r\n    if (k === 1) {\r\n      // Catch the black case\r\n      return new Color(0, 0, 0, 1, 'cmyk')\r\n    }\r\n\r\n    const c = (1 - r - k) / (1 - k)\r\n    const m = (1 - g - k) / (1 - k)\r\n    const y = (1 - b - k) / (1 - k)\r\n\r\n    // Construct the new color\r\n    const color = new Color(c, m, y, k, 'cmyk')\r\n    return color\r\n  }\n\n  hsl () {\r\n\r\n    // Get the rgb values\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Find the maximum and minimum values to get the lightness\r\n    const max = Math.max(r, g, b)\r\n    const min = Math.min(r, g, b)\r\n    const l = (max + min) / 2\r\n\r\n    // If the r, g, v values are identical then we are grey\r\n    const isGrey = max === min\r\n\r\n    // Calculate the hue and saturation\r\n    const delta = max - min\r\n    const s = isGrey\n      ? 0\r\n      : l > 0.5\n        ? delta / (2 - max - min)\r\n        : delta / (max + min)\r\n    const h = isGrey\n      ? 0\r\n      : max === r\n        ? ((g - b) / delta + (g < b ? 6 : 0)) / 6\r\n        : max === g\n          ? ((b - r) / delta + 2) / 6\r\n          : max === b\n            ? ((r - g) / delta + 4) / 6\r\n            : 0\r\n\r\n    // Construct and return the new color\r\n    const color = new Color(360 * h, 100 * s, 100 * l, 'hsl')\r\n    return color\r\n  }\n\n  init (a = 0, b = 0, c = 0, d = 0, space = 'rgb') {\r\n    // This catches the case when a falsy value is passed like ''\r\n    a = !a ? 0 : a\r\n\r\n    // Reset all values in case the init function is rerun with new color space\r\n    if (this.space) {\r\n      for (const component in this.space) {\r\n        delete this[this.space[component]]\r\n      }\r\n    }\r\n\r\n    if (typeof a === 'number') {\r\n      // Allow for the case that we don't need d...\r\n      space = typeof d === 'string' ? d : space\r\n      d = typeof d === 'string' ? 0 : d\r\n\r\n      // Assign the values straight to the color\r\n      Object.assign(this, { _a: a, _b: b, _c: c, _d: d, space })\r\n    // If the user gave us an array, make the color from it\r\n    } else if (a instanceof Array) {\r\n      this.space = b || (typeof a[3] === 'string' ? a[3] : a[4]) || 'rgb'\r\n      Object.assign(this, { _a: a[0], _b: a[1], _c: a[2], _d: a[3] || 0 })\r\n    } else if (a instanceof Object) {\r\n      // Set the object up and assign its values directly\r\n      const values = getParameters(a, b)\r\n      Object.assign(this, values)\r\n    } else if (typeof a === 'string') {\r\n      if (isRgb.test(a)) {\r\n        const noWhitespace = a.replace(whitespace, '')\r\n        const [ _a, _b, _c ] = rgb.exec(noWhitespace)\r\n          .slice(1, 4).map(v => parseInt(v))\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else if (isHex.test(a)) {\r\n        const hexParse = v => parseInt(v, 16)\r\n        const [ , _a, _b, _c ] = hex.exec(sixDigitHex(a)).map(hexParse)\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else throw Error('Unsupported string format, can\\'t construct Color')\r\n    }\r\n\r\n    // Now add the components as a convenience\r\n    const { _a, _b, _c, _d } = this\r\n    const components = this.space === 'rgb'\n      ? { r: _a, g: _b, b: _c }\r\n      : this.space === 'xyz'\n        ? { x: _a, y: _b, z: _c }\r\n        : this.space === 'hsl'\n          ? { h: _a, s: _b, l: _c }\r\n          : this.space === 'lab'\n            ? { l: _a, a: _b, b: _c }\r\n            : this.space === 'lch'\n              ? { l: _a, c: _b, h: _c }\r\n              : this.space === 'cmyk'\n                ? { c: _a, m: _b, y: _c, k: _d }\r\n                : {}\r\n    Object.assign(this, components)\r\n  }\r\n\r\n  lab () {\r\n    // Get the xyz color\r\n    const { x, y, z } = this.xyz()\r\n\r\n    // Get the lab components\r\n    const l = (116 * y) - 16\r\n    const a = 500 * (x - y)\r\n    const b = 200 * (y - z)\r\n\r\n    // Construct and return a new color\r\n    const color = new Color(l, a, b, 'lab')\r\n    return color\r\n  }\n\n  lch () {\r\n\r\n    // Get the lab color directly\r\n    const { l, a, b } = this.lab()\r\n\r\n    // Get the chromaticity and the hue using polar coordinates\r\n    const c = Math.sqrt(a ** 2 + b ** 2)\r\n    let h = 180 * Math.atan2(b, a) / Math.PI\r\n    if (h < 0) {\r\n      h *= -1\r\n      h = 360 - h\r\n    }\r\n\r\n    // Make a new color and return it\r\n    const color = new Color(l, c, h, 'lch')\r\n    return color\r\n  }\n  /*\r\n  Conversion Methods\r\n  */\r\n\r\n  rgb () {\r\n    if (this.space === 'rgb') {\r\n      return this\r\n    } else if (cieSpace(this.space)) {\r\n      // Convert to the xyz color space\r\n      let { x, y, z } = this\r\n      if (this.space === 'lab' || this.space === 'lch') {\r\n        // Get the values in the lab space\r\n        let { l, a, b } = this\r\n        if (this.space === 'lch') {\r\n          const { c, h } = this\r\n          const dToR = Math.PI / 180\r\n          a = c * Math.cos(dToR * h)\r\n          b = c * Math.sin(dToR * h)\r\n        }\r\n\r\n        // Undo the nonlinear function\r\n        const yL = (l + 16) / 116\r\n        const xL = a / 500 + yL\r\n        const zL = yL - b / 200\r\n\r\n        // Get the xyz values\r\n        const ct = 16 / 116\r\n        const mx = 0.008856\r\n        const nm = 7.787\r\n        x = 0.95047 * ((xL ** 3 > mx) ? xL ** 3 : (xL - ct) / nm)\r\n        y = 1.00000 * ((yL ** 3 > mx) ? yL ** 3 : (yL - ct) / nm)\r\n        z = 1.08883 * ((zL ** 3 > mx) ? zL ** 3 : (zL - ct) / nm)\r\n      }\r\n\r\n      // Convert xyz to unbounded rgb values\r\n      const rU = x * 3.2406 + y * -1.5372 + z * -0.4986\r\n      const gU = x * -0.9689 + y * 1.8758 + z * 0.0415\r\n      const bU = x * 0.0557 + y * -0.2040 + z * 1.0570\r\n\r\n      // Convert the values to true rgb values\r\n      const pow = Math.pow\r\n      const bd = 0.0031308\r\n      const r = (rU > bd) ? (1.055 * pow(rU, 1 / 2.4) - 0.055) : 12.92 * rU\r\n      const g = (gU > bd) ? (1.055 * pow(gU, 1 / 2.4) - 0.055) : 12.92 * gU\r\n      const b = (bU > bd) ? (1.055 * pow(bU, 1 / 2.4) - 0.055) : 12.92 * bU\r\n\r\n      // Make and return the color\r\n      const color = new Color(255 * r, 255 * g, 255 * b)\r\n      return color\r\n    } else if (this.space === 'hsl') {\r\n      // https://bgrins.github.io/TinyColor/docs/tinycolor.html\r\n      // Get the current hsl values\r\n      let { h, s, l } = this\r\n      h /= 360\r\n      s /= 100\r\n      l /= 100\r\n\r\n      // If we are grey, then just make the color directly\r\n      if (s === 0) {\r\n        l *= 255\r\n        const color = new Color(l, l, l)\r\n        return color\r\n      }\r\n\r\n      // TODO I have no idea what this does :D If you figure it out, tell me!\r\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s\r\n      const p = 2 * l - q\r\n\r\n      // Get the rgb values\r\n      const r = 255 * hueToRgb(p, q, h + 1 / 3)\r\n      const g = 255 * hueToRgb(p, q, h)\r\n      const b = 255 * hueToRgb(p, q, h - 1 / 3)\r\n\r\n      // Make a new color\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else if (this.space === 'cmyk') {\r\n      // https://gist.github.com/felipesabino/5066336\r\n      // Get the normalised cmyk values\r\n      const { c, m, y, k } = this\r\n\r\n      // Get the rgb values\r\n      const r = 255 * (1 - Math.min(1, c * (1 - k) + k))\r\n      const g = 255 * (1 - Math.min(1, m * (1 - k) + k))\r\n      const b = 255 * (1 - Math.min(1, y * (1 - k) + k))\r\n\r\n      // Form the color and return it\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else {\r\n      return this\r\n    }\r\n  }\r\n\n  toArray () {\r\n    const { _a, _b, _c, _d, space } = this\r\n    return [ _a, _b, _c, _d, space ]\r\n  }\n\n  toHex () {\r\n    const [ r, g, b ] = this._clamped().map(componentHex)\r\n    return `#${r}${g}${b}`\r\n  }\n\n  toRgb () {\r\n    const [ rV, gV, bV ] = this._clamped()\r\n    const string = `rgb(${rV},${gV},${bV})`\r\n    return string\r\n  }\n\n  toString () {\r\n    return this.toHex()\r\n  }\n\n  xyz () {\r\n\r\n    // Normalise the red, green and blue values\r\n    const { _a: r255, _b: g255, _c: b255 } = this.rgb()\r\n    const [ r, g, b ] = [ r255, g255, b255 ].map(v => v / 255)\r\n\r\n    // Convert to the lab rgb space\r\n    const rL = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\r\n    const gL = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\r\n    const bL = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\r\n\r\n    // Convert to the xyz color space without bounding the values\r\n    const xU = (rL * 0.4124 + gL * 0.3576 + bL * 0.1805) / 0.95047\r\n    const yU = (rL * 0.2126 + gL * 0.7152 + bL * 0.0722) / 1.00000\r\n    const zU = (rL * 0.0193 + gL * 0.1192 + bL * 0.9505) / 1.08883\r\n\r\n    // Get the proper xyz values by applying the bounding\r\n    const x = (xU > 0.008856) ? Math.pow(xU, 1 / 3) : (7.787 * xU) + 16 / 116\r\n    const y = (yU > 0.008856) ? Math.pow(yU, 1 / 3) : (7.787 * yU) + 16 / 116\r\n    const z = (zU > 0.008856) ? Math.pow(zU, 1 / 3) : (7.787 * zU) + 16 / 116\r\n\r\n    // Make and return the color\r\n    const color = new Color(x, y, z, 'xyz')\r\n    return color\r\n  }\r\n\n  /*\r\n  Input and Output methods\r\n  */\r\n\r\n  _clamped () {\r\n    const { _a, _b, _c } = this.rgb()\r\n    const { max, min, round } = Math\r\n    const format = v => max(0, min(round(v), 255))\r\n    return [ _a, _b, _c ].map(format)\r\n  }\r\n\r\n  /*\r\n  Constructing colors\r\n  */\r\n\r\n}\r\n", "import Matrix from './Matrix.js'\r\n\r\nexport default class Point {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  // Clone point\n  clone () {\r\n    return new Point(this)\r\n  }\n\n  init (x, y) {\r\n    const base = { x: 0, y: 0 }\r\n\r\n    // ensure source as object\r\n    const source = Array.isArray(x)\n      ? { x: x[0], y: x[1] }\r\n      : typeof x === 'object'\n        ? { x: x.x, y: x.y }\r\n        : { x: x, y: y }\r\n\r\n    // merge source\r\n    this.x = source.x == null ? base.x : source.x\r\n    this.y = source.y == null ? base.y : source.y\r\n\r\n    return this\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y ]\r\n  }\n\n  transform (m) {\r\n    return this.clone().transformO(m)\r\n  }\r\n\r\n  // Transform point with matrix\r\n  transformO (m) {\r\n    if (!Matrix.isMatrixLike(m)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    const { x, y } = this\r\n\r\n    // Perform the matrix multiplication\r\n    this.x = m.a * x + m.c * y + m.e\r\n    this.y = m.b * x + m.d * y + m.f\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nexport function point (x, y) {\r\n  return new Point(x, y).transform(this.screenCTM().inverse())\r\n}\r\n", "import { delimiter } from '../modules/core/regex.js'\r\nimport { radians } from '../utils/utils.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport Element from '../elements/Element.js'\r\nimport Point from './Point.js'\r\n\r\nfunction closeEnough (a, b, threshold) {\r\n  return Math.abs(b - a) < (threshold || 1e-6)\r\n}\r\n\r\nexport default class Matrix {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  static formatTransforms (o) {\r\n    // Get all of the parameters required to form the matrix\r\n    const flipBoth = o.flip === 'both' || o.flip === true\r\n    const flipX = o.flip && (flipBoth || o.flip === 'x') ? -1 : 1\r\n    const flipY = o.flip && (flipBoth || o.flip === 'y') ? -1 : 1\r\n    const skewX = o.skew && o.skew.length\n      ? o.skew[0]\r\n      : isFinite(o.skew)\n        ? o.skew\r\n        : isFinite(o.skewX)\n          ? o.skewX\r\n          : 0\r\n    const skewY = o.skew && o.skew.length\n      ? o.skew[1]\r\n      : isFinite(o.skew)\n        ? o.skew\r\n        : isFinite(o.skewY)\n          ? o.skewY\r\n          : 0\r\n    const scaleX = o.scale && o.scale.length\n      ? o.scale[0] * flipX\r\n      : isFinite(o.scale)\n        ? o.scale * flipX\r\n        : isFinite(o.scaleX)\n          ? o.scaleX * flipX\r\n          : flipX\r\n    const scaleY = o.scale && o.scale.length\n      ? o.scale[1] * flipY\r\n      : isFinite(o.scale)\n        ? o.scale * flipY\r\n        : isFinite(o.scaleY)\n          ? o.scaleY * flipY\r\n          : flipY\r\n    const shear = o.shear || 0\r\n    const theta = o.rotate || o.theta || 0\r\n    const origin = new Point(o.origin || o.around || o.ox || o.originX, o.oy || o.originY)\r\n    const ox = origin.x\r\n    const oy = origin.y\r\n    // We need Point to be invalid if nothing was passed because we cannot default to 0 here. Thats why NaN\r\n    const position = new Point(o.position || o.px || o.positionX || NaN, o.py || o.positionY || NaN)\r\n    const px = position.x\r\n    const py = position.y\r\n    const translate = new Point(o.translate || o.tx || o.translateX, o.ty || o.translateY)\r\n    const tx = translate.x\r\n    const ty = translate.y\r\n    const relative = new Point(o.relative || o.rx || o.relativeX, o.ry || o.relativeY)\r\n    const rx = relative.x\r\n    const ry = relative.y\r\n\r\n    // Populate all of the values\r\n    return {\r\n      scaleX, scaleY, skewX, skewY, shear, theta, rx, ry, tx, ty, ox, oy, px, py\r\n    }\r\n  }\n\n  static fromArray (a) {\r\n    return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n  }\n\n  static isMatrixLike (o) {\r\n    return (\r\n      o.a != null\r\n      || o.b != null\r\n      || o.c != null\r\n      || o.d != null\r\n      || o.e != null\r\n      || o.f != null\r\n    )\r\n  }\n\n  // left matrix, right matrix, target matrix which is overwritten\n  static matrixMultiply (l, r, o) {\r\n    // Work out the product directly\r\n    const a = l.a * r.a + l.c * r.b\r\n    const b = l.b * r.a + l.d * r.b\r\n    const c = l.a * r.c + l.c * r.d\r\n    const d = l.b * r.c + l.d * r.d\r\n    const e = l.e + l.a * r.e + l.c * r.f\r\n    const f = l.f + l.b * r.e + l.d * r.f\r\n\r\n    // make sure to use local variables because l/r and o could be the same\r\n    o.a = a\r\n    o.b = b\r\n    o.c = c\r\n    o.d = d\r\n    o.e = e\r\n    o.f = f\r\n\r\n    return o\r\n  }\n\n  around (cx, cy, matrix) {\r\n    return this.clone().aroundO(cx, cy, matrix)\r\n  }\n\n  // Transform around a center point\n  aroundO (cx, cy, matrix) {\r\n    const dx = cx || 0\r\n    const dy = cy || 0\r\n    return this.translateO(-dx, -dy).lmultiplyO(matrix).translateO(dx, dy)\r\n  }\n\n  // Clones this matrix\n  clone () {\r\n    return new Matrix(this)\r\n  }\n\n  // Decomposes this matrix into its affine parameters\n  decompose (cx = 0, cy = 0) {\r\n    // Get the parameters from the matrix\r\n    const a = this.a\r\n    const b = this.b\r\n    const c = this.c\r\n    const d = this.d\r\n    const e = this.e\r\n    const f = this.f\r\n\r\n    // Figure out if the winding direction is clockwise or counterclockwise\r\n    const determinant = a * d - b * c\r\n    const ccw = determinant > 0 ? 1 : -1\r\n\r\n    // Since we only shear in x, we can use the x basis to get the x scale\r\n    // and the rotation of the resulting matrix\r\n    const sx = ccw * Math.sqrt(a * a + b * b)\r\n    const thetaRad = Math.atan2(ccw * b, ccw * a)\r\n    const theta = 180 / Math.PI * thetaRad\r\n    const ct = Math.cos(thetaRad)\r\n    const st = Math.sin(thetaRad)\r\n\r\n    // We can then solve the y basis vector simultaneously to get the other\r\n    // two affine parameters directly from these parameters\r\n    const lam = (a * c + b * d) / determinant\r\n    const sy = ((c * sx) / (lam * a - b)) || ((d * sx) / (lam * b + a))\r\n\r\n    // Use the translations\r\n    const tx = e - cx + cx * ct * sx + cy * (lam * ct * sx - st * sy)\r\n    const ty = f - cy + cx * st * sx + cy * (lam * st * sx + ct * sy)\r\n\r\n    // Construct the decomposition and return it\r\n    return {\r\n      // Return the affine parameters\r\n      scaleX: sx,\r\n      scaleY: sy,\r\n      shear: lam,\r\n      rotate: theta,\r\n      translateX: tx,\r\n      translateY: ty,\r\n      originX: cx,\r\n      originY: cy,\r\n\r\n      // Return the matrix parameters\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\n\n  // Check if two matrices are equal\n  equals (other) {\r\n    if (other === this) return true\r\n    const comp = new Matrix(other)\r\n    return closeEnough(this.a, comp.a) && closeEnough(this.b, comp.b)\r\n      && closeEnough(this.c, comp.c) && closeEnough(this.d, comp.d)\r\n      && closeEnough(this.e, comp.e) && closeEnough(this.f, comp.f)\r\n  }\n\n  // Flip matrix on x or y, at a given offset\n  flip (axis, around) {\r\n    return this.clone().flipO(axis, around)\r\n  }\n\n  flipO (axis, around) {\r\n    return axis === 'x'\n      ? this.scaleO(-1, 1, around, 0)\r\n      : axis === 'y'\n        ? this.scaleO(1, -1, 0, around)\r\n        : this.scaleO(-1, -1, axis, around || axis) // Define an x, y flip point\r\n  }\n\n  // Initialize\r\n  init (source) {\r\n    const base = Matrix.fromArray([ 1, 0, 0, 1, 0, 0 ])\r\n\r\n    // ensure source as object\r\n    source = source instanceof Element\n      ? source.matrixify()\r\n      : typeof source === 'string'\n        ? Matrix.fromArray(source.split(delimiter).map(parseFloat))\r\n        : Array.isArray(source)\n          ? Matrix.fromArray(source)\r\n          : (typeof source === 'object' && Matrix.isMatrixLike(source))\n            ? source\r\n            : (typeof source === 'object')\n              ? new Matrix().transform(source)\r\n              : arguments.length === 6\n                ? Matrix.fromArray([].slice.call(arguments))\r\n                : base\r\n\r\n    // Merge the source matrix with the base matrix\r\n    this.a = source.a != null ? source.a : base.a\r\n    this.b = source.b != null ? source.b : base.b\r\n    this.c = source.c != null ? source.c : base.c\r\n    this.d = source.d != null ? source.d : base.d\r\n    this.e = source.e != null ? source.e : base.e\r\n    this.f = source.f != null ? source.f : base.f\r\n\r\n    return this\r\n  }\r\n\n  inverse () {\r\n    return this.clone().inverseO()\r\n  }\n\n  // Inverses matrix\n  inverseO () {\r\n    // Get the current parameters out of the matrix\r\n    const a = this.a\r\n    const b = this.b\r\n    const c = this.c\r\n    const d = this.d\r\n    const e = this.e\r\n    const f = this.f\r\n\r\n    // Invert the 2x2 matrix in the top left\r\n    const det = a * d - b * c\r\n    if (!det) throw new Error('Cannot invert ' + this)\r\n\r\n    // Calculate the top 2x2 matrix\r\n    const na = d / det\r\n    const nb = -b / det\r\n    const nc = -c / det\r\n    const nd = a / det\r\n\r\n    // Apply the inverted matrix to the top right\r\n    const ne = -(na * e + nc * f)\r\n    const nf = -(nb * e + nd * f)\r\n\r\n    // Construct the inverted matrix\r\n    this.a = na\r\n    this.b = nb\r\n    this.c = nc\r\n    this.d = nd\r\n    this.e = ne\r\n    this.f = nf\r\n\r\n    return this\r\n  }\n\n  lmultiply (matrix) {\r\n    return this.clone().lmultiplyO(matrix)\r\n  }\n\n  lmultiplyO (matrix) {\r\n    const r = this\r\n    const l = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\n\n  // Left multiplies by the given matrix\n  multiply (matrix) {\r\n    return this.clone().multiplyO(matrix)\r\n  }\n\n  multiplyO (matrix) {\r\n    // Get the matrices\r\n    const l = this\r\n    const r = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\n\n  // Rotate matrix\n  rotate (r, cx, cy) {\r\n    return this.clone().rotateO(r, cx, cy)\r\n  }\n\n  rotateO (r, cx = 0, cy = 0) {\r\n    // Convert degrees to radians\r\n    r = radians(r)\r\n\r\n    const cos = Math.cos(r)\r\n    const sin = Math.sin(r)\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * cos - b * sin\r\n    this.b = b * cos + a * sin\r\n    this.c = c * cos - d * sin\r\n    this.d = d * cos + c * sin\r\n    this.e = e * cos - f * sin + cy * sin - cx * cos + cx\r\n    this.f = f * cos + e * sin - cx * sin - cy * cos + cy\r\n\r\n    return this\r\n  }\n\n  // Scale matrix\n  scale (x, y, cx, cy) {\r\n    return this.clone().scaleO(...arguments)\r\n  }\n\n  scaleO (x, y = x, cx = 0, cy = 0) {\r\n    // Support uniform scaling\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * x\r\n    this.b = b * y\r\n    this.c = c * x\r\n    this.d = d * y\r\n    this.e = e * x - cx * x + cx\r\n    this.f = f * y - cy * y + cy\r\n\r\n    return this\r\n  }\n\n  // Shear matrix\n  shear (a, cx, cy) {\r\n    return this.clone().shearO(a, cx, cy)\r\n  }\n\n  shearO (lx, cx = 0, cy = 0) {\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.c = c + d * lx\r\n    this.e = e + f * lx - cy * lx\r\n\r\n    return this\r\n  }\n\n  // Skew Matrix\n  skew (x, y, cx, cy) {\r\n    return this.clone().skewO(...arguments)\r\n  }\n\n  skewO (x, y = x, cx = 0, cy = 0) {\r\n    // support uniformal skew\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    // Convert degrees to radians\r\n    x = radians(x)\r\n    y = radians(y)\r\n\r\n    const lx = Math.tan(x)\r\n    const ly = Math.tan(y)\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.b = b + a * ly\r\n    this.c = c + d * lx\r\n    this.d = d + c * ly\r\n    this.e = e + f * lx - cy * lx\r\n    this.f = f + e * ly - cx * ly\r\n\r\n    return this\r\n  }\n\n  // SkewX\n  skewX (x, cx, cy) {\r\n    return this.skew(x, 0, cx, cy)\r\n  }\n\n  // SkewY\n  skewY (y, cx, cy) {\r\n    return this.skew(0, y, cx, cy)\r\n  }\n\n  toArray () {\r\n    return [ this.a, this.b, this.c, this.d, this.e, this.f ]\r\n  }\n\n  // Convert matrix to string\n  toString () {\r\n    return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n  }\n\n  // Transform a matrix into another matrix by manipulating the space\r\n  transform (o) {\r\n    // Check if o is a matrix and then left multiply it directly\r\n    if (Matrix.isMatrixLike(o)) {\r\n      const matrix = new Matrix(o)\r\n      return matrix.multiplyO(this)\r\n    }\r\n\r\n    // Get the proposed transformations and the current transformations\r\n    const t = Matrix.formatTransforms(o)\r\n    const current = this\r\n    const { x: ox, y: oy } = new Point(t.ox, t.oy).transform(current)\r\n\r\n    // Construct the resulting matrix\r\n    const transformer = new Matrix()\r\n      .translateO(t.rx, t.ry)\r\n      .lmultiplyO(current)\r\n      .translateO(-ox, -oy)\r\n      .scaleO(t.scaleX, t.scaleY)\r\n      .skewO(t.skewX, t.skewY)\r\n      .shearO(t.shear)\r\n      .rotateO(t.theta)\r\n      .translateO(ox, oy)\r\n\r\n    // If we want the origin at a particular place, we force it there\r\n    if (isFinite(t.px) || isFinite(t.py)) {\r\n      const origin = new Point(ox, oy).transform(transformer)\r\n      // TODO: Replace t.px with isFinite(t.px)\r\n      // Doesnt work because t.px is also 0 if it wasnt passed\r\n      const dx = isFinite(t.px) ? t.px - origin.x : 0\r\n      const dy = isFinite(t.py) ? t.py - origin.y : 0\r\n      transformer.translateO(dx, dy)\r\n    }\r\n\r\n    // Translate now after positioning\r\n    transformer.translateO(t.tx, t.ty)\r\n    return transformer\r\n  }\r\n\n  // Translate matrix\r\n  translate (x, y) {\r\n    return this.clone().translateO(x, y)\r\n  }\r\n\n  translateO (x, y) {\r\n    this.e += x || 0\r\n    this.f += y || 0\r\n    return this\r\n  }\r\n\n  valueOf () {\r\n    return {\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function ctm () {\r\n  return new Matrix(this.node.getCTM())\r\n}\r\n\r\nexport function screenCTM () {\r\n  /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n     This is needed because FF does not return the transformation matrix\r\n     for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n     However all other Browsers do that */\r\n  if (typeof this.isRoot === 'function' && !this.isRoot()) {\r\n    const rect = this.rect(1, 1)\r\n    const m = rect.node.getScreenCTM()\r\n    rect.remove()\r\n    return new Matrix(m)\r\n  }\r\n  return new Matrix(this.node.getScreenCTM())\r\n}\r\n\r\nregister(Matrix, 'Matrix')\r\n", "import { globals } from '../../utils/window.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\n\r\nexport default function parser () {\r\n  // Reuse cached element if possible\r\n  if (!parser.nodes) {\r\n    const svg = makeInstance().size(2, 0)\r\n    svg.node.style.cssText = [\r\n      'opacity: 0',\r\n      'position: absolute',\r\n      'left: -100%',\r\n      'top: -100%',\r\n      'overflow: hidden'\r\n    ].join(';')\r\n\r\n    svg.attr('focusable', 'false')\r\n    svg.attr('aria-hidden', 'true')\r\n\r\n    const path = svg.path().node\r\n\r\n    parser.nodes = { svg, path }\r\n  }\r\n\r\n  if (!parser.nodes.svg.node.parentNode) {\r\n    const b = globals.document.body || globals.document.documentElement\r\n    parser.nodes.svg.addTo(b)\r\n  }\r\n\r\n  return parser.nodes\r\n}\r\n", "import { delimiter } from '../modules/core/regex.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Matrix from './Matrix.js'\r\nimport Point from './Point.js'\r\nimport parser from '../modules/core/parser.js'\r\n\r\nexport function isNulledBox (box) {\r\n  return !box.width && !box.height && !box.x && !box.y\r\n}\r\n\r\nexport function domContains (node) {\r\n  return node === globals.document\r\n    || (globals.document.documentElement.contains || function (node) {\r\n      // This is IE - it does not support contains() for top-level SVGs\r\n      while (node.parentNode) {\r\n        node = node.parentNode\r\n      }\r\n      return node === globals.document\r\n    }).call(globals.document.documentElement, node)\r\n}\r\n\r\nexport default class Box {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  addOffset () {\r\n    // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n    this.x += globals.window.pageXOffset\r\n    this.y += globals.window.pageYOffset\r\n    return new Box(this)\r\n  }\r\n\r\n  init (source) {\r\n    const base = [ 0, 0, 0, 0 ]\r\n    source = typeof source === 'string'\n      ? source.split(delimiter).map(parseFloat)\r\n      : Array.isArray(source)\n        ? source\r\n        : typeof source === 'object'\n          ? [ source.left != null\n            ? source.left\r\n            : source.x, source.top != null ? source.top : source.y, source.width, source.height ]\r\n          : arguments.length === 4\n            ? [].slice.call(arguments)\r\n            : base\r\n\r\n    this.x = source[0] || 0\r\n    this.y = source[1] || 0\r\n    this.width = this.w = source[2] || 0\r\n    this.height = this.h = source[3] || 0\r\n\r\n    // Add more bounding box properties\r\n    this.x2 = this.x + this.w\r\n    this.y2 = this.y + this.h\r\n    this.cx = this.x + this.w / 2\r\n    this.cy = this.y + this.h / 2\r\n\r\n    return this\r\n  }\r\n\r\n  isNulled () {\r\n    return isNulledBox(this)\r\n  }\r\n\r\n  // Merge rect box with another, return a new instance\r\n  merge (box) {\r\n    const x = Math.min(this.x, box.x)\r\n    const y = Math.min(this.y, box.y)\r\n    const width = Math.max(this.x + this.width, box.x + box.width) - x\r\n    const height = Math.max(this.y + this.height, box.y + box.height) - y\r\n\r\n    return new Box(x, y, width, height)\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y, this.width, this.height ]\r\n  }\r\n\r\n  toString () {\r\n    return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n  }\r\n\r\n  transform (m) {\r\n    if (!(m instanceof Matrix)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    let xMin = Infinity\r\n    let xMax = -Infinity\r\n    let yMin = Infinity\r\n    let yMax = -Infinity\r\n\r\n    const pts = [\r\n      new Point(this.x, this.y),\r\n      new Point(this.x2, this.y),\r\n      new Point(this.x, this.y2),\r\n      new Point(this.x2, this.y2)\r\n    ]\r\n\r\n    pts.forEach(function (p) {\r\n      p = p.transform(m)\r\n      xMin = Math.min(xMin, p.x)\r\n      xMax = Math.max(xMax, p.x)\r\n      yMin = Math.min(yMin, p.y)\r\n      yMax = Math.max(yMax, p.y)\r\n    })\r\n\r\n    return new Box(\r\n      xMin, yMin,\r\n      xMax - xMin,\r\n      yMax - yMin\r\n    )\r\n  }\r\n\r\n}\r\n\r\nfunction getBox (el, getBBoxFn, retry) {\r\n  let box\r\n\r\n  try {\r\n    // Try to get the box with the provided function\r\n    box = getBBoxFn(el.node)\r\n\r\n    // If the box is worthless and not even in the dom, retry\r\n    // by throwing an error here...\r\n    if (isNulledBox(box) && !domContains(el.node)) {\r\n      throw new Error('Element not in the dom')\r\n    }\r\n  } catch (e) {\r\n    // ... and calling the retry handler here\r\n    box = retry(el)\r\n  }\r\n\r\n  return box\r\n}\r\n\r\nexport function bbox () {\r\n  // Function to get bbox is getBBox()\r\n  const getBBox = (node) => node.getBBox()\r\n\r\n  // Take all measures so that a stupid browser renders the element\r\n  // so we can get the bbox from it when we try again\r\n  const retry = (el) => {\r\n    try {\r\n      const clone = el.clone().addTo(parser().svg).show()\r\n      const box = clone.node.getBBox()\r\n      clone.remove()\r\n      return box\r\n    } catch (e) {\r\n      // We give up...\r\n      throw new Error(`Getting bbox of element \"${el.node.nodeName}\" is not possible: ${e.toString()}`)\r\n    }\r\n  }\r\n\r\n  const box = getBox(this, getBBox, retry)\r\n  const bbox = new Box(box)\r\n\r\n  return bbox\r\n}\r\n\r\nexport function rbox (el) {\r\n  const getRBox = (node) => node.getBoundingClientRect()\r\n  const retry = (el) => {\r\n    // There is no point in trying tricks here because if we insert the element into the dom ourselves\r\n    // it obviously will be at the wrong position\r\n    throw new Error(`Getting rbox of element \"${el.node.nodeName}\" is not possible`)\r\n  }\r\n\r\n  const box = getBox(this, getRBox, retry)\r\n  const rbox = new Box(box)\r\n\r\n  // If an element was passed, we want the bbox in the coordinate system of that element\r\n  if (el) {\r\n    return rbox.transform(el.screenCTM().inverseO())\r\n  }\r\n\r\n  // Else we want it in absolute screen coordinates\r\n  // Therefore we need to add the scrollOffset\r\n  return rbox.addOffset()\r\n}\r\n\r\n// Checks whether the given point is inside the bounding box\r\nexport function inside (x, y) {\r\n  const box = this.bbox()\r\n\r\n  return x > box.x\r\n    && y > box.y\r\n    && x < box.x + box.width\r\n    && y < box.y + box.height\r\n}\r\n\r\nregisterMethods({\r\n  viewbox: {\r\n    viewbox (x, y, width, height) {\r\n      // act as getter\r\n      if (x == null) return new Box(this.attr('viewBox'))\r\n\r\n      // act as setter\r\n      return this.attr('viewBox', new Box(x, y, width, height))\r\n    },\r\n\r\n    zoom (level, point) {\r\n      // Its best to rely on the attributes here and here is why:\r\n      // clientXYZ: Doesn't work on non-root svgs because they dont have a CSSBox (silly!)\r\n      // getBoundingClientRect: Doesn't work because Chrome just ignores width and height of nested svgs completely\r\n      //                        that means, their clientRect is always as big as the content.\r\n      //                        Furthermore this size is incorrect if the element is further transformed by its parents\r\n      // computedStyle: Only returns meaningful values if css was used with px. We dont go this route here!\r\n      // getBBox: returns the bounding box of its content - that doesnt help!\r\n      let { width, height } = this.attr([ 'width', 'height' ])\r\n\r\n      // Width and height is a string when a number with a unit is present which we can't use\r\n      // So we try clientXYZ\r\n      if ((!width && !height) || (typeof width === 'string' || typeof height === 'string')) {\r\n        width = this.node.clientWidth\r\n        height = this.node.clientHeight\r\n      }\r\n\r\n      // Giving up...\r\n      if (!width || !height) {\r\n        throw new Error('Impossible to get absolute width and height. Please provide an absolute width and height attribute on the zooming element')\r\n      }\r\n\r\n      const v = this.viewbox()\r\n\r\n      const zoomX = width / v.width\r\n      const zoomY = height / v.height\r\n      const zoom = Math.min(zoomX, zoomY)\r\n\r\n      if (level == null) {\r\n        return zoom\r\n      }\r\n\r\n      let zoomAmount = zoom / level\r\n\r\n      // Set the zoomAmount to the highest value which is safe to process and recover from\r\n      // The * 100 is a bit of wiggle room for the matrix transformation\r\n      if (zoomAmount === Infinity) zoomAmount = Number.MAX_SAFE_INTEGER / 100\r\n\r\n      point = point || new Point(width / 2 / zoomX + v.x, height / 2 / zoomY + v.y)\r\n\r\n      const box = new Box(v).transform(\r\n        new Matrix({ scale: zoomAmount, origin: point })\r\n      )\r\n\r\n      return this.viewbox(box)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Box, 'Box')\r\n", "import { extend } from '../utils/adopter.js'\r\n// import { subClassArray } from './ArrayPolyfill.js'\r\n\r\nclass List extends Array {\r\n  constructor (arr = [], ...args) {\r\n    super(arr, ...args)\r\n    if (typeof arr === 'number') return this\r\n    this.length = 0\r\n    this.push(...arr)\r\n  }\r\n}\r\n\r\n/* = subClassArray('List', Array, function (arr = []) {\r\n  // This catches the case, that native map tries to create an array with new Array(1)\r\n  if (typeof arr === 'number') return this\r\n  this.length = 0\r\n  this.push(...arr)\r\n}) */\r\n\r\nexport default List\r\n\r\nextend([ List ], {\r\n  each (fnOrMethodName, ...args) {\r\n    if (typeof fnOrMethodName === 'function') {\r\n      return this.map((el, i, arr) => {\r\n        return fnOrMethodName.call(el, el, i, arr)\r\n      })\r\n    } else {\r\n      return this.map(el => {\r\n        return el[fnOrMethodName](...args)\r\n      })\r\n    }\r\n  },\r\n\r\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  }\r\n})\r\n\r\nconst reserved = [ 'toArray', 'constructor', 'each' ]\r\n\r\nList.extend = function (methods) {\r\n  methods = methods.reduce((obj, name) => {\r\n    // Don't overwrite own methods\r\n    if (reserved.includes(name)) return obj\r\n\r\n    // Don't add private methods\r\n    if (name[0] === '_') return obj\r\n\r\n    // Relay every call to each()\r\n    obj[name] = function (...attrs) {\r\n      return this.each(name, ...attrs)\r\n    }\r\n    return obj\r\n  }, {})\r\n\r\n  extend([ List ], methods)\r\n}\r\n", "import { adopt } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\nimport { map } from '../../utils/utils.js'\r\nimport List from '../../types/List.js'\r\n\r\nexport default function baseFind (query, parent) {\r\n  return new List(map((parent || globals.document).querySelectorAll(query), function (node) {\r\n    return adopt(node)\r\n  }))\r\n}\r\n\r\n// Scoped find method\r\nexport function find (query) {\r\n  return baseFind(query, this.node)\r\n}\r\n\r\nexport function findOne (query) {\r\n  return adopt(this.node.querySelector(query))\r\n}\r\n", "import { delimiter } from './regex.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\n\r\nlet listenerId = 0\r\nexport const windowEvents = {}\r\n\r\nexport function getEvents (instance) {\r\n  let n = instance.getEventHolder()\r\n\r\n  // We dont want to save events in global space\r\n  if (n === globals.window) n = windowEvents\r\n  if (!n.events) n.events = {}\r\n  return n.events\r\n}\r\n\r\nexport function getEventTarget (instance) {\r\n  return instance.getEventTarget()\r\n}\r\n\r\nexport function clearEvents (instance) {\r\n  let n = instance.getEventHolder()\r\n  if (n === globals.window) n = windowEvents\r\n  if (n.events) n.events = {}\r\n}\r\n\r\n// Add event binder in the SVG namespace\r\nexport function on (node, events, listener, binding, options) {\r\n  const l = listener.bind(binding || node)\r\n  const instance = makeInstance(node)\r\n  const bag = getEvents(instance)\r\n  const n = getEventTarget(instance)\r\n\r\n  // events can be an array of events or a string of events\r\n  events = Array.isArray(events) ? events : events.split(delimiter)\r\n\r\n  // add id to listener\r\n  if (!listener._svgjsListenerId) {\r\n    listener._svgjsListenerId = ++listenerId\r\n  }\r\n\r\n  events.forEach(function (event) {\r\n    const ev = event.split('.')[0]\r\n    const ns = event.split('.')[1] || '*'\r\n\r\n    // ensure valid object\r\n    bag[ev] = bag[ev] || {}\r\n    bag[ev][ns] = bag[ev][ns] || {}\r\n\r\n    // reference listener\r\n    bag[ev][ns][listener._svgjsListenerId] = l\r\n\r\n    // add listener\r\n    n.addEventListener(ev, l, options || false)\r\n  })\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nexport function off (node, events, listener, options) {\r\n  const instance = makeInstance(node)\r\n  const bag = getEvents(instance)\r\n  const n = getEventTarget(instance)\r\n\r\n  // listener can be a function or a number\r\n  if (typeof listener === 'function') {\r\n    listener = listener._svgjsListenerId\r\n    if (!listener) return\r\n  }\r\n\r\n  // events can be an array of events or a string or undefined\r\n  events = Array.isArray(events) ? events : (events || '').split(delimiter)\r\n\r\n  events.forEach(function (event) {\r\n    const ev = event && event.split('.')[0]\r\n    const ns = event && event.split('.')[1]\r\n    let namespace, l\r\n\r\n    if (listener) {\r\n      // remove listener reference\r\n      if (bag[ev] && bag[ev][ns || '*']) {\r\n        // removeListener\r\n        n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false)\r\n\r\n        delete bag[ev][ns || '*'][listener]\r\n      }\r\n    } else if (ev && ns) {\r\n      // remove all listeners for a namespaced event\r\n      if (bag[ev] && bag[ev][ns]) {\r\n        for (l in bag[ev][ns]) {\r\n          off(n, [ ev, ns ].join('.'), l)\r\n        }\r\n\r\n        delete bag[ev][ns]\r\n      }\r\n    } else if (ns) {\r\n      // remove all listeners for a specific namespace\r\n      for (event in bag) {\r\n        for (namespace in bag[event]) {\r\n          if (ns === namespace) {\r\n            off(n, [ event, ns ].join('.'))\r\n          }\r\n        }\r\n      }\r\n    } else if (ev) {\r\n      // remove all listeners for the event\r\n      if (bag[ev]) {\r\n        for (namespace in bag[ev]) {\r\n          off(n, [ ev, namespace ].join('.'))\r\n        }\r\n\r\n        delete bag[ev]\r\n      }\r\n    } else {\r\n      // remove all listeners on a given node\r\n      for (event in bag) {\r\n        off(n, event)\r\n      }\r\n\r\n      clearEvents(instance)\r\n    }\r\n  })\r\n}\r\n\r\nexport function dispatch (node, event, data, options) {\r\n  const n = getEventTarget(node)\r\n\r\n  // Dispatch event\r\n  if (event instanceof globals.window.Event) {\r\n    n.dispatchEvent(event)\r\n  } else {\r\n    event = new globals.window.CustomEvent(event, { detail: data, cancelable: true, ...options })\r\n    n.dispatchEvent(event)\r\n  }\r\n  return event\r\n}\r\n", "import { dispatch, off, on } from '../modules/core/event.js'\nimport { register } from '../utils/adopter.js'\nimport Base from './Base.js'\n\nexport default class EventTarget extends Base {\n  addEventListener () {}\n\n  dispatch (event, data, options) {\n    return dispatch(this, event, data, options)\n  }\n\n  dispatchEvent (event) {\n    const bag = this.getEventHolder().events\n    if (!bag) return true\n\n    const events = bag[event.type]\n\n    for (const i in events) {\n      for (const j in events[i]) {\n        events[i][j](event)\n      }\n    }\n\n    return !event.defaultPrevented\n  }\n\n  // Fire given event\n  fire (event, data, options) {\n    this.dispatch(event, data, options)\n    return this\n  }\n\n  getEventHolder () {\n    return this\n  }\n\n  getEventTarget () {\n    return this\n  }\n\n  // Unbind event from listener\n  off (event, listener, options) {\n    off(this, event, listener, options)\n    return this\n  }\n\n  // Bind given event to listener\n  on (event, listener, binding, options) {\n    on(this, event, listener, binding, options)\n    return this\n  }\n\n  removeEventListener () {}\n}\n\nregister(EventTarget, 'EventTarget')\n", "\r\nexport function noop () {}\r\n\r\n// Default animation values\r\nexport const timeline = {\r\n  duration: 400,\r\n  ease: '>',\r\n  delay: 0\r\n}\r\n\r\n// Default attribute values\r\nexport const attrs = {\r\n\r\n  // fill and stroke\r\n  'fill-opacity': 1,\r\n  'stroke-opacity': 1,\r\n  'stroke-width': 0,\r\n  'stroke-linejoin': 'miter',\r\n  'stroke-linecap': 'butt',\r\n  fill: '#000000',\r\n  stroke: '#000000',\r\n  opacity: 1,\r\n\r\n  // position\r\n  x: 0,\r\n  y: 0,\r\n  cx: 0,\r\n  cy: 0,\r\n\r\n  // size\r\n  width: 0,\r\n  height: 0,\r\n\r\n  // radius\r\n  r: 0,\r\n  rx: 0,\r\n  ry: 0,\r\n\r\n  // gradient\r\n  offset: 0,\r\n  'stop-opacity': 1,\r\n  'stop-color': '#000000',\r\n\r\n  // text\r\n  'text-anchor': 'start'\r\n}\r\n", "import { delimiter } from '../modules/core/regex.js'\r\n\r\nexport default class SVGArray extends Array {\r\n  constructor (...args) {\r\n    super(...args)\r\n    this.init(...args)\r\n  }\r\n\r\n  clone () {\r\n    return new this.constructor(this)\r\n  }\n\n  init (arr) {\r\n    // This catches the case, that native map tries to create an array with new Array(1)\r\n    if (typeof arr === 'number') return this\r\n    this.length = 0\r\n    this.push(...this.parse(arr))\r\n    return this\r\n  }\r\n\r\n  // Parse whitespace separated string\n  parse (array = []) {\r\n    // If already is an array, no need to parse it\r\n    if (array instanceof Array) return array\r\n\r\n    return array.trim().split(delimiter).map(parseFloat)\r\n  }\n\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  }\r\n\r\n  toSet () {\r\n    return new Set(this)\r\n  }\n\n  toString () {\r\n    return this.join(' ')\r\n  }\r\n\r\n  // Flattens the array if needed\r\n  valueOf () {\r\n    const ret = []\r\n    ret.push(...this)\r\n    return ret\r\n  }\r\n\r\n}\r\n", "import { numberAndUnit } from '../modules/core/regex.js'\r\n\r\n// Module for unit conversions\r\nexport default class SVGNumber {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  convert (unit) {\r\n    return new SVGNumber(this.value, unit)\r\n  }\r\n\r\n  // Divide number\r\n  divide (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this / number, this.unit || number.unit)\r\n  }\r\n\r\n  init (value, unit) {\r\n    unit = Array.isArray(value) ? value[1] : unit\r\n    value = Array.isArray(value) ? value[0] : value\r\n\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] === '%') {\r\n          this.value /= 100\r\n        } else if (unit[5] === 's') {\r\n          this.value *= 1000\r\n        }\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n    } else {\r\n      if (value instanceof SVGNumber) {\r\n        this.value = value.valueOf()\r\n        this.unit = value.unit\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Subtract number\r\n  minus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this - number, this.unit || number.unit)\r\n  }\r\n\r\n  // Add number\r\n  plus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this + number, this.unit || number.unit)\r\n  }\r\n\r\n  // Multiply number\r\n  times (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this * number, this.unit || number.unit)\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.value, this.unit ]\r\n  }\r\n\r\n  toJSON () {\r\n    return this.toString()\r\n  }\r\n\r\n  toString () {\r\n    return (this.unit === '%'\n      ? ~~(this.value * 1e8) / 1e6\r\n      : this.unit === 's'\n        ? this.value / 1e3\r\n        : this.value\r\n    ) + this.unit\r\n  }\r\n\r\n  valueOf () {\r\n    return this.value\r\n  }\r\n\r\n}\r\n", "import { attrs as defaults } from './defaults.js'\r\nimport { isNumber } from './regex.js'\r\nimport Color from '../../types/Color.js'\r\nimport SVGArray from '../../types/SVGArray.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\nconst hooks = []\r\nexport function registerAttrHook (fn) {\r\n  hooks.push(fn)\r\n}\r\n\r\n// Set svg element attribute\r\nexport default function attr (attr, val, ns) {\r\n  // act as full getter\r\n  if (attr == null) {\r\n    // get an object of attributes\r\n    attr = {}\r\n    val = this.node.attributes\r\n\r\n    for (const node of val) {\r\n      attr[node.nodeName] = isNumber.test(node.nodeValue)\r\n        ? parseFloat(node.nodeValue)\r\n        : node.nodeValue\r\n    }\r\n\r\n    return attr\r\n  } else if (attr instanceof Array) {\r\n    // loop through array and get all values\r\n    return attr.reduce((last, curr) => {\r\n      last[curr] = this.attr(curr)\r\n      return last\r\n    }, {})\r\n  } else if (typeof attr === 'object' && attr.constructor === Object) {\r\n    // apply every attribute individually if an object is passed\r\n    for (val in attr) this.attr(val, attr[val])\r\n  } else if (val === null) {\r\n    // remove value\r\n    this.node.removeAttribute(attr)\r\n  } else if (val == null) {\r\n    // act as a getter if the first and only argument is not an object\r\n    val = this.node.getAttribute(attr)\r\n    return val == null\n      ? defaults[attr]\r\n      : isNumber.test(val)\n        ? parseFloat(val)\r\n        : val\r\n  } else {\r\n    // Loop through hooks and execute them to convert value\r\n    val = hooks.reduce((_val, hook) => {\r\n      return hook(attr, _val, this)\r\n    }, val)\r\n\r\n    // ensure correct numeric values (also accepts NaN and Infinity)\r\n    if (typeof val === 'number') {\r\n      val = new SVGNumber(val)\r\n    } else if (Color.isColor(val)) {\r\n      // ensure full hex color\r\n      val = new Color(val)\r\n    } else if (val.constructor === Array) {\r\n      // Check for plain arrays and parse array values\r\n      val = new SVGArray(val)\r\n    }\r\n\r\n    // if the passed attribute is leading...\r\n    if (attr === 'leading') {\r\n      // ... call the leading method instead\r\n      if (this.leading) {\r\n        this.leading(val)\r\n      }\r\n    } else {\r\n      // set given attribute on node\r\n      typeof ns === 'string'\n        ? this.node.setAttributeNS(ns, attr, val.toString())\r\n        : this.node.setAttribute(attr, val.toString())\r\n    }\r\n\r\n    // rebuild if required\r\n    if (this.rebuild && (attr === 'font-size' || attr === 'x')) {\r\n      this.rebuild()\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n", "import {\r\n  adopt,\r\n  assignNewId,\r\n  eid,\r\n  extend,\r\n  makeInstance,\r\n  create,\r\n  register\r\n} from '../utils/adopter.js'\r\nimport { find, findOne } from '../modules/core/selector.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { map } from '../utils/utils.js'\r\nimport { svg, html } from '../modules/core/namespaces.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport List from '../types/List.js'\r\nimport attr from '../modules/core/attr.js'\r\n\r\nexport default class Dom extends EventTarget {\r\n  constructor (node, attrs) {\r\n    super()\r\n    this.node = node\r\n    this.type = node.nodeName\r\n\r\n    if (attrs && node !== attrs) {\r\n      this.attr(attrs)\r\n    }\r\n  }\r\n\r\n  // Add given element at a position\r\n  add (element, i) {\r\n    element = makeInstance(element)\r\n\r\n    // If non-root svg nodes are added we have to remove their namespaces\r\n    if (element.removeNamespace && this.node instanceof globals.window.SVGElement) {\r\n      element.removeNamespace()\r\n    }\r\n\r\n    if (i == null) {\r\n      this.node.appendChild(element.node)\r\n    } else if (element.node !== this.node.childNodes[i]) {\r\n      this.node.insertBefore(element.node, this.node.childNodes[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Add element to given container and return self\r\n  addTo (parent, i) {\r\n    return makeInstance(parent).put(this, i)\r\n  }\r\n\r\n  // Returns all child elements\r\n  children () {\r\n    return new List(map(this.node.children, function (node) {\r\n      return adopt(node)\r\n    }))\r\n  }\r\n\r\n  // Remove all elements in this container\r\n  clear () {\r\n    // remove children\r\n    while (this.node.hasChildNodes()) {\r\n      this.node.removeChild(this.node.lastChild)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Clone element\r\n  clone (deep = true) {\r\n    // write dom data to the dom so the clone can pickup the data\r\n    this.writeDataToDom()\r\n\r\n    // clone element and assign new id\r\n    return new this.constructor(assignNewId(this.node.cloneNode(deep)))\r\n  }\r\n\r\n  // Iterates over all children and invokes a given block\r\n  each (block, deep) {\r\n    const children = this.children()\r\n    let i, il\r\n\r\n    for (i = 0, il = children.length; i < il; i++) {\r\n      block.apply(children[i], [ i, children ])\r\n\r\n      if (deep) {\r\n        children[i].each(block, deep)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  element (nodeName, attrs) {\r\n    return this.put(new Dom(create(nodeName), attrs))\r\n  }\r\n\r\n  // Get first child\r\n  first () {\r\n    return adopt(this.node.firstChild)\r\n  }\r\n\r\n  // Get a element at the given index\r\n  get (i) {\r\n    return adopt(this.node.childNodes[i])\r\n  }\r\n\r\n  getEventHolder () {\r\n    return this.node\r\n  }\r\n\r\n  getEventTarget () {\r\n    return this.node\r\n  }\r\n\r\n  // Checks if the given element is a child\r\n  has (element) {\r\n    return this.index(element) >= 0\r\n  }\r\n\r\n  html (htmlOrFn, outerHTML) {\r\n    return this.xml(htmlOrFn, outerHTML, html)\r\n  }\r\n\r\n  // Get / set id\r\n  id (id) {\r\n    // generate new id if no id set\r\n    if (typeof id === 'undefined' && !this.node.id) {\r\n      this.node.id = eid(this.type)\r\n    }\r\n\r\n    // don't set directly with this.node.id to make `null` work correctly\r\n    return this.attr('id', id)\r\n  }\r\n\r\n  // Gets index of given element\r\n  index (element) {\r\n    return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n  }\r\n\r\n  // Get the last child\r\n  last () {\r\n    return adopt(this.node.lastChild)\r\n  }\r\n\r\n  // matches the element vs a css selector\r\n  matches (selector) {\r\n    const el = this.node\r\n    const matcher = el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector || null\r\n    return matcher && matcher.call(el, selector)\r\n  }\r\n\r\n  // Returns the parent element instance\r\n  parent (type) {\r\n    let parent = this\r\n\r\n    // check for parent\r\n    if (!parent.node.parentNode) return null\r\n\r\n    // get parent element\r\n    parent = adopt(parent.node.parentNode)\r\n\r\n    if (!type) return parent\r\n\r\n    // loop trough ancestors if type is given\r\n    do {\r\n      if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n    } while ((parent = adopt(parent.node.parentNode)))\r\n\r\n    return parent\r\n  }\r\n\r\n  // Basically does the same as `add()` but returns the added element instead\r\n  put (element, i) {\r\n    element = makeInstance(element)\r\n    this.add(element, i)\r\n    return element\r\n  }\r\n\r\n  // Add element to given container and return container\r\n  putIn (parent, i) {\r\n    return makeInstance(parent).add(this, i)\r\n  }\r\n\r\n  // Remove element\r\n  remove () {\r\n    if (this.parent()) {\r\n      this.parent().removeElement(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Remove a given child\r\n  removeElement (element) {\r\n    this.node.removeChild(element.node)\r\n\r\n    return this\r\n  }\r\n\r\n  // Replace this with element\r\n  replace (element) {\r\n    element = makeInstance(element)\r\n\r\n    if (this.node.parentNode) {\r\n      this.node.parentNode.replaceChild(element.node, this.node)\r\n    }\r\n\r\n    return element\r\n  }\r\n\r\n  round (precision = 2, map = null) {\r\n    const factor = 10 ** precision\r\n    const attrs = this.attr(map)\r\n\r\n    for (const i in attrs) {\r\n      if (typeof attrs[i] === 'number') {\r\n        attrs[i] = Math.round(attrs[i] * factor) / factor\r\n      }\r\n    }\r\n\r\n    this.attr(attrs)\r\n    return this\r\n  }\r\n\r\n  // Import / Export raw svg\r\n  svg (svgOrFn, outerSVG) {\r\n    return this.xml(svgOrFn, outerSVG, svg)\r\n  }\r\n\r\n  // Return id on string conversion\r\n  toString () {\r\n    return this.id()\r\n  }\r\n\r\n  words (text) {\r\n    // This is faster than removing all children and adding a new one\r\n    this.node.textContent = text\r\n    return this\r\n  }\r\n\r\n  wrap (node) {\r\n    const parent = this.parent()\r\n\r\n    if (!parent) {\r\n      return this.addTo(node)\r\n    }\r\n\r\n    const position = parent.index(this)\r\n    return parent.put(node, position).put(this)\r\n  }\r\n\r\n  // write svgjs data to the dom\r\n  writeDataToDom () {\r\n    // dump variables recursively\r\n    this.each(function () {\r\n      this.writeDataToDom()\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  // Import / Export raw svg\r\n  xml (xmlOrFn, outerXML, ns) {\r\n    if (typeof xmlOrFn === 'boolean') {\r\n      ns = outerXML\r\n      outerXML = xmlOrFn\r\n      xmlOrFn = null\r\n    }\r\n\r\n    // act as getter if no svg string is given\r\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\r\n      // The default for exports is, that the outerNode is included\r\n      outerXML = outerXML == null ? true : outerXML\r\n\r\n      // write svgjs data to the dom\r\n      this.writeDataToDom()\r\n      let current = this\r\n\r\n      // An export modifier was passed\r\n      if (xmlOrFn != null) {\r\n        current = adopt(current.node.cloneNode(true))\r\n\r\n        // If the user wants outerHTML we need to process this node, too\r\n        if (outerXML) {\r\n          const result = xmlOrFn(current)\r\n          current = result || current\r\n\r\n          // The user does not want this node? Well, then he gets nothing\r\n          if (result === false) return ''\r\n        }\r\n\r\n        // Deep loop through all children and apply modifier\r\n        current.each(function () {\r\n          const result = xmlOrFn(this)\r\n          const _this = result || this\r\n\r\n          // If modifier returns false, discard node\r\n          if (result === false) {\r\n            this.remove()\r\n\r\n            // If modifier returns new node, use it\r\n          } else if (result && this !== _this) {\r\n            this.replace(_this)\r\n          }\r\n        }, true)\r\n      }\r\n\r\n      // Return outer or inner content\r\n      return outerXML\r\n        ? current.node.outerHTML\r\n        : current.node.innerHTML\r\n    }\r\n\r\n    // Act as setter if we got a string\r\n\r\n    // The default for import is, that the current node is not replaced\r\n    outerXML = outerXML == null ? false : outerXML\r\n\r\n    // Create temporary holder\r\n    const well = create('wrapper', ns)\r\n    const fragment = globals.document.createDocumentFragment()\r\n\r\n    // Dump raw svg\r\n    well.innerHTML = xmlOrFn\r\n\r\n    // Transplant nodes into the fragment\r\n    for (let len = well.children.length; len--;) {\r\n      fragment.appendChild(well.firstElementChild)\r\n    }\r\n\r\n    const parent = this.parent()\r\n\r\n    // Add the whole fragment at once\r\n    return outerXML\r\n      ? this.replace(fragment) && parent\r\n      : this.add(fragment)\r\n  }\r\n}\r\n\r\nextend(Dom, { attr, find, findOne })\r\nregister(Dom, 'Dom')\r\n", "import { bbox, rbox, inside } from '../types/Box.js'\nimport { ctm, screenCTM } from '../types/Matrix.js'\nimport {\n  extend,\n  getClass,\n  makeInstance,\n  register,\n  root\n} from '../utils/adopter.js'\nimport { globals } from '../utils/window.js'\nimport { point } from '../types/Point.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { reference } from '../modules/core/regex.js'\nimport Dom from './Dom.js'\nimport List from '../types/List.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nexport default class Element extends Dom {\n  constructor (node, attrs) {\n    super(node, attrs)\n\n    // initialize data object\n    this.dom = {}\n\n    // create circular reference\n    this.node.instance = this\n\n    if (node.hasAttribute('svgjs:data')) {\n      // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\n      this.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\n    }\n  }\n\n  // Move element by its center\n  center (x, y) {\n    return this.cx(x).cy(y)\n  }\n\n  // Move by center over x-axis\n  cx (x) {\n    return x == null\n      ? this.x() + this.width() / 2\n      : this.x(x - this.width() / 2)\n  }\n\n  // Move by center over y-axis\n  cy (y) {\n    return y == null\n      ? this.y() + this.height() / 2\n      : this.y(y - this.height() / 2)\n  }\n\n  // Get defs\n  defs () {\n    const root = this.root()\n    return root && root.defs()\n  }\n\n  // Relative move over x and y axes\n  dmove (x, y) {\n    return this.dx(x).dy(y)\n  }\n\n  // Relative move over x axis\n  dx (x = 0) {\n    return this.x(new SVGNumber(x).plus(this.x()))\n  }\n\n  // Relative move over y axis\n  dy (y = 0) {\n    return this.y(new SVGNumber(y).plus(this.y()))\n  }\n\n  getEventHolder () {\n    return this\n  }\n\n  // Set height of element\n  height (height) {\n    return this.attr('height', height)\n  }\n\n  // Move element to given x and y values\n  move (x, y) {\n    return this.x(x).y(y)\n  }\n\n  // return array of all ancestors of given type up to the root svg\n  parents (until = this.root()) {\n    const isSelector = typeof until === 'string'\n    if (!isSelector) {\n      until = makeInstance(until)\n    }\n    const parents = new List()\n    let parent = this\n\n    while (\n      (parent = parent.parent())\n      && parent.node !== globals.document\n      && parent.nodeName !== '#document-fragment') {\n\n      parents.push(parent)\n\n      if (!isSelector && (parent.node === until.node)) {\n        break\n      }\n      if (isSelector && parent.matches(until)) {\n        break\n      }\n      if (parent.node === this.root().node) {\n        // We worked our way to the root and didn't match `until`\n        return null\n      }\n    }\n\n    return parents\n  }\n\n  // Get referenced element form attribute value\n  reference (attr) {\n    attr = this.attr(attr)\n    if (!attr) return null\n\n    const m = (attr + '').match(reference)\n    return m ? makeInstance(m[1]) : null\n  }\n\n  // Get parent document\n  root () {\n    const p = this.parent(getClass(root))\n    return p && p.root()\n  }\n\n  // set given data to the elements data property\n  setData (o) {\n    this.dom = o\n    return this\n  }\n\n  // Set element size to given width and height\n  size (width, height) {\n    const p = proportionalSize(this, width, height)\n\n    return this\n      .width(new SVGNumber(p.width))\n      .height(new SVGNumber(p.height))\n  }\n\n  // Set width of element\n  width (width) {\n    return this.attr('width', width)\n  }\n\n  // write svgjs data to the dom\n  writeDataToDom () {\n    // remove previously set data\n    this.node.removeAttribute('svgjs:data')\n\n    if (Object.keys(this.dom).length) {\n      this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\n    }\n\n    return super.writeDataToDom()\n  }\n\n  // Move over x-axis\n  x (x) {\n    return this.attr('x', x)\n  }\n\n  // Move over y-axis\n  y (y) {\n    return this.attr('y', y)\n  }\n}\n\nextend(Element, {\n  bbox, rbox, inside, point, ctm, screenCTM\n})\n\nregister(Element, 'Element')\n", "import { registerMethods } from '../../utils/methods.js'\r\nimport Color from '../../types/Color.js'\r\nimport Element from '../../elements/Element.js'\r\nimport Matrix from '../../types/Matrix.js'\r\nimport Point from '../../types/Point.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Define list of available attributes for stroke and fill\r\nconst sugar = {\r\n  stroke: [ 'color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset' ],\r\n  fill: [ 'color', 'opacity', 'rule' ],\r\n  prefix: function (t, a) {\r\n    return a === 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;[ 'fill', 'stroke' ].forEach(function (m) {\r\n  const extension = {}\r\n  let i\r\n\r\n  extension[m] = function (o) {\r\n    if (typeof o === 'undefined') {\r\n      return this.attr(m)\r\n    }\r\n    if (typeof o === 'string' || o instanceof Color || Color.isRgb(o) || (o instanceof Element)) {\r\n      this.attr(m, o)\r\n    } else {\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--) {\r\n        if (o[sugar[m][i]] != null) {\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  registerMethods([ 'Element', 'Runner' ], extension)\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Let the user set the matrix directly\r\n  matrix: function (mat, b, c, d, e, f) {\r\n    // Act as a getter\r\n    if (mat == null) {\r\n      return new Matrix(this)\r\n    }\r\n\r\n    // Act as a setter, the user can pass a matrix or a set of numbers\r\n    return this.attr('transform', new Matrix(mat, b, c, d, e, f))\r\n  },\r\n\r\n  // Map rotation to transform\r\n  rotate: function (angle, cx, cy) {\r\n    return this.transform({ rotate: angle, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map skew to transform\r\n  skew: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ skew: x, ox: y, oy: cx }, true)\r\n      : this.transform({ skew: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  shear: function (lam, cx, cy) {\r\n    return this.transform({ shear: lam, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map scale to transform\r\n  scale: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ scale: x, ox: y, oy: cx }, true)\r\n      : this.transform({ scale: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map translate to transform\r\n  translate: function (x, y) {\r\n    return this.transform({ translate: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map relative translations to transform\r\n  relative: function (x, y) {\r\n    return this.transform({ relative: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map flip to transform\r\n  flip: function (direction = 'both', origin = 'center') {\r\n    if ('xybothtrue'.indexOf(direction) === -1) {\r\n      origin = direction\r\n      direction = 'both'\r\n    }\r\n\r\n    return this.transform({ flip: direction, origin: origin }, true)\r\n  },\r\n\r\n  // Opacity\r\n  opacity: function (value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n})\r\n\r\nregisterMethods('radius', {\r\n  // Add x and y radius\r\n  radius: function (x, y = x) {\r\n    const type = (this._element || this).type\r\n    return type === 'radialGradient'\r\n      ? this.attr('r', new SVGNumber(x))\r\n      : this.rx(x).ry(y)\r\n  }\r\n})\r\n\r\nregisterMethods('Path', {\r\n  // Get path length\r\n  length: function () {\r\n    return this.node.getTotalLength()\r\n  },\r\n  // Get point at length\r\n  pointAt: function (length) {\r\n    return new Point(this.node.getPointAtLength(length))\r\n  }\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Set font\r\n  font: function (a, v) {\r\n    if (typeof a === 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n      return this\r\n    }\r\n\r\n    return a === 'leading'\r\n      ? this.leading(v)\r\n      : a === 'anchor'\r\n        ? this.attr('text-anchor', v)\r\n        : a === 'size' || a === 'family' || a === 'weight' || a === 'stretch' || a === 'variant' || a === 'style'\r\n          ? this.attr('font-' + a, v)\r\n          : this.attr(a, v)\r\n  }\r\n})\r\n\r\n// Add events to elements\r\nconst methods = [ 'click',\r\n  'dblclick',\r\n  'mousedown',\r\n  'mouseup',\r\n  'mouseover',\r\n  'mouseout',\r\n  'mousemove',\r\n  'mouseenter',\r\n  'mouseleave',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchleave',\r\n  'touchend',\r\n  'touchcancel' ].reduce(function (last, event) {\r\n  // add event to Element\r\n  const fn = function (f) {\r\n    if (f === null) {\r\n      this.off(event)\r\n    } else {\r\n      this.on(event, f)\r\n    }\r\n    return this\r\n  }\r\n\r\n  last[event] = fn\r\n  return last\r\n}, {})\r\n\r\nregisterMethods('Element', methods)\r\n", "import { getOrigin } from '../../utils/utils.js'\r\nimport { delimiter, transforms } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\nimport Matrix from '../../types/Matrix.js'\r\n\r\n// Reset all transformations\r\nexport function untransform () {\r\n  return this.attr('transform', null)\r\n}\r\n\r\n// merge the whole transformation chain into one matrix and returns it\r\nexport function matrixify () {\r\n  const matrix = (this.attr('transform') || '')\r\n    // split transformations\r\n    .split(transforms).slice(0, -1).map(function (str) {\r\n      // generate key => value pairs\r\n      const kv = str.trim().split('(')\r\n      return [ kv[0],\r\n        kv[1].split(delimiter)\r\n          .map(function (str) {\r\n            return parseFloat(str)\r\n          })\r\n      ]\r\n    })\r\n    .reverse()\r\n    // merge every transformation into one matrix\r\n    .reduce(function (matrix, transform) {\r\n      if (transform[0] === 'matrix') {\r\n        return matrix.lmultiply(Matrix.fromArray(transform[1]))\r\n      }\r\n      return matrix[transform[0]].apply(matrix, transform[1])\r\n    }, new Matrix())\r\n\r\n  return matrix\r\n}\r\n\r\n// add an element to another parent without changing the visual representation on the screen\r\nexport function toParent (parent, i) {\r\n  if (this === parent) return this\r\n  const ctm = this.screenCTM()\r\n  const pCtm = parent.screenCTM().inverse()\r\n\r\n  this.addTo(parent, i).untransform().transform(pCtm.multiply(ctm))\r\n\r\n  return this\r\n}\r\n\r\n// same as above with parent equals root-svg\r\nexport function toRoot (i) {\r\n  return this.toParent(this.root(), i)\r\n}\r\n\r\n// Add transformations\r\nexport function transform (o, relative) {\r\n  // Act as a getter if no object was passed\r\n  if (o == null || typeof o === 'string') {\r\n    const decomposed = new Matrix(this).decompose()\r\n    return o == null ? decomposed : decomposed[o]\r\n  }\r\n\r\n  if (!Matrix.isMatrixLike(o)) {\r\n    // Set the origin according to the defined transform\r\n    o = { ...o, origin: getOrigin(o, this) }\r\n  }\r\n\r\n  // The user can pass a boolean, an Element or an Matrix or nothing\r\n  const cleanRelative = relative === true ? this : (relative || false)\r\n  const result = new Matrix(cleanRelative).transform(o)\r\n  return this.attr('transform', result)\r\n}\r\n\r\nregisterMethods('Element', {\r\n  untransform, matrixify, toParent, toRoot, transform\r\n})\r\n", "import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Container extends Element {\r\n  flatten (parent = this, index) {\r\n    this.each(function () {\r\n      if (this instanceof Container) {\r\n        return this.flatten().ungroup()\r\n      }\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  ungroup (parent = this.parent(), index = parent.index(this)) {\r\n    // when parent != this, we want append all elements to the end\r\n    index = index === -1 ? parent.children().length : index\r\n\r\n    this.each(function (i, children) {\r\n      // reverse each\r\n      return children[children.length - i - 1].toParent(parent, index)\r\n    })\r\n\r\n    return this.remove()\r\n  }\r\n}\r\n\r\nregister(Container, 'Container')\r\n", "import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Defs extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('defs', node), attrs)\r\n  }\r\n\r\n  flatten () {\r\n    return this\r\n  }\r\n\r\n  ungroup () {\r\n    return this\r\n  }\r\n}\r\n\r\nregister(Defs, 'Defs')\r\n", "import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Shape extends Element {}\r\n\r\nregister(Shape, 'Shape')\r\n", "import SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Radius x value\r\nexport function rx (rx) {\r\n  return this.attr('rx', rx)\r\n}\r\n\r\n// Radius y value\r\nexport function ry (ry) {\r\n  return this.attr('ry', ry)\r\n}\r\n\r\n// Move over x-axis\r\nexport function x (x) {\r\n  return x == null\r\n    ? this.cx() - this.rx()\r\n    : this.cx(x + this.rx())\r\n}\r\n\r\n// Move over y-axis\r\nexport function y (y) {\r\n  return y == null\r\n    ? this.cy() - this.ry()\r\n    : this.cy(y + this.ry())\r\n}\r\n\r\n// Move by center over x-axis\r\nexport function cx (x) {\r\n  return this.attr('cx', x)\r\n}\r\n\r\n// Move by center over y-axis\r\nexport function cy (y) {\r\n  return this.attr('cy', y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  return width == null\r\n    ? this.rx() * 2\r\n    : this.rx(new SVGNumber(width).divide(2))\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  return height == null\r\n    ? this.ry() * 2\r\n    : this.ry(new SVGNumber(height).divide(2))\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport * as circled from '../modules/core/circled.js'\r\n\r\nexport default class Ellipse extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('ellipse', node), attrs)\r\n  }\r\n\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n\r\n    return this\r\n      .rx(new SVGNumber(p.width).divide(2))\r\n      .ry(new SVGNumber(p.height).divide(2))\r\n  }\r\n}\r\n\r\nextend(Ellipse, circled)\r\n\r\nregisterMethods('Container', {\r\n  // Create an ellipse\r\n  ellipse: wrapWithAttrCheck(function (width = 0, height = width) {\r\n    return this.put(new Ellipse()).size(width, height).move(0, 0)\r\n  })\r\n})\r\n\r\nregister(Ellipse, 'Ellipse')\r\n", "import Dom from './Dom.js'\nimport { globals } from '../utils/window.js'\nimport { register, create } from '../utils/adopter.js'\n\nclass Fragment extends Dom {\n  constructor (node = globals.document.createDocumentFragment()) {\n    super(node)\n  }\n\n  // Import / Export raw xml\n  xml (xmlOrFn, outerXML, ns) {\n    if (typeof xmlOrFn === 'boolean') {\n      ns = outerXML\n      outerXML = xmlOrFn\n      xmlOrFn = null\n    }\n\n    // because this is a fragment we have to put all elements into a wrapper first\n    // before we can get the innerXML from it\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\n      const wrapper = new Dom(create('wrapper', ns))\n      wrapper.add(this.node.cloneNode(true))\n\n      return wrapper.xml(false, ns)\n    }\n\n    // Act as setter if we got a string\n    return super.xml(xmlOrFn, false, ns)\n  }\n\n}\n\nregister(Fragment, 'Fragment')\n\nexport default Fragment\n", "import SVGNumber from '../../types/SVGNumber.js'\r\n\r\nexport function from (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ fx: new SVGNumber(x), fy: new SVGNumber(y) })\r\n    : this.attr({ x1: new SVGNumber(x), y1: new SVGNumber(y) })\r\n}\r\n\r\nexport function to (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ cx: new SVGNumber(x), cy: new SVGNumber(y) })\r\n    : this.attr({ x2: new SVGNumber(x), y2: new SVGNumber(y) })\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\nimport * as gradiented from '../modules/core/gradiented.js'\r\n\r\nexport default class Gradient extends Container {\r\n  constructor (type, attrs) {\r\n    super(\r\n      nodeOrNew(type + 'Gradient', typeof type === 'string' ? null : type),\r\n      attrs\r\n    )\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'gradientTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  // Alias string conversion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // Update gradient\r\n  update (block) {\r\n    // remove all stops\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(\"#' + this.id() + '\")'\r\n  }\r\n}\r\n\r\nextend(Gradient, gradiented)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create gradient element in defs\r\n    gradient (...args) {\r\n      return this.defs().gradient(...args)\r\n    }\r\n  },\r\n  // define gradient\r\n  Defs: {\r\n    gradient: wrapWithAttrCheck(function (type, block) {\r\n      return this.put(new Gradient(type)).update(block)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Gradient, 'Gradient')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Pattern extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('pattern', node), attrs)\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'patternTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  // Alias string conversion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // Update pattern by rebuilding\r\n  update (block) {\r\n    // remove content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(\"#' + this.id() + '\")'\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create pattern element in defs\r\n    pattern (...args) {\r\n      return this.defs().pattern(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    pattern: wrapWithAttrCheck(function (width, height, block) {\r\n      return this.put(new Pattern()).update(block).attr({\r\n        x: 0,\r\n        y: 0,\r\n        width: width,\r\n        height: height,\r\n        patternUnits: 'userSpaceOnUse'\r\n      })\r\n    })\r\n  }\r\n})\r\n\r\nregister(Pattern, 'Pattern')\r\n", "import { isImage } from '../modules/core/regex.js'\r\nimport { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { off, on } from '../modules/core/event.js'\r\nimport { registerAttrHook } from '../modules/core/attr.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Pattern from './Pattern.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Image extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('image', node), attrs)\r\n  }\r\n\r\n  // (re)load image\r\n  load (url, callback) {\r\n    if (!url) return this\r\n\r\n    const img = new globals.window.Image()\r\n\r\n    on(img, 'load', function (e) {\r\n      const p = this.parent(Pattern)\r\n\r\n      // ensure image size\r\n      if (this.width() === 0 && this.height() === 0) {\r\n        this.size(img.width, img.height)\r\n      }\r\n\r\n      if (p instanceof Pattern) {\r\n        // ensure pattern size if not set\r\n        if (p.width() === 0 && p.height() === 0) {\r\n          p.size(this.width(), this.height())\r\n        }\r\n      }\r\n\r\n      if (typeof callback === 'function') {\r\n        callback.call(this, e)\r\n      }\r\n    }, this)\r\n\r\n    on(img, 'load error', function () {\r\n      // dont forget to unbind memory leaking events\r\n      off(img)\r\n    })\r\n\r\n    return this.attr('href', (img.src = url), xlink)\r\n  }\r\n}\r\n\r\nregisterAttrHook(function (attr, val, _this) {\r\n  // convert image fill and stroke to patterns\r\n  if (attr === 'fill' || attr === 'stroke') {\r\n    if (isImage.test(val)) {\r\n      val = _this.root().defs().image(val)\r\n    }\r\n  }\r\n\r\n  if (val instanceof Image) {\r\n    val = _this.root().defs().pattern(0, 0, (pattern) => {\r\n      pattern.add(val)\r\n    })\r\n  }\r\n\r\n  return val\r\n})\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // create image element, load image and set its size\r\n    image: wrapWithAttrCheck(function (source, callback) {\r\n      return this.put(new Image()).size(0, 0).load(source, callback)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Image, 'Image')\r\n", "import { delimiter } from '../modules/core/regex.js'\r\nimport SVGArray from './SVGArray.js'\r\nimport Box from './Box.js'\r\nimport Matrix from './Matrix.js'\r\n\r\nexport default class PointArray extends SVGArray {\r\n  // Get bounding box of points\r\n  bbox () {\r\n    let maxX = -Infinity\r\n    let maxY = -Infinity\r\n    let minX = Infinity\r\n    let minY = Infinity\r\n    this.forEach(function (el) {\r\n      maxX = Math.max(el[0], maxX)\r\n      maxY = Math.max(el[1], maxY)\r\n      minX = Math.min(el[0], minX)\r\n      minY = Math.min(el[1], minY)\r\n    })\r\n    return new Box(minX, minY, maxX - minX, maxY - minY)\r\n  }\r\n\r\n  // Move point string\r\n  move (x, y) {\r\n    const box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      for (let i = this.length - 1; i >= 0; i--) {\r\n        this[i] = [ this[i][0] + x, this[i][1] + y ]\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Parse point string and flat array\r\n  parse (array = [ 0, 0 ]) {\r\n    const points = []\r\n\r\n    // if it is an array, we flatten it and therefore clone it to 1 depths\r\n    if (array instanceof Array) {\r\n      array = Array.prototype.concat.apply([], array)\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples\r\n    for (let i = 0, len = array.length; i < len; i = i + 2) {\r\n      points.push([ array[i], array[i + 1] ])\r\n    }\r\n\r\n    return points\r\n  }\r\n\r\n  // Resize poly string\r\n  size (width, height) {\r\n    let i\r\n    const box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      if (box.width) this[i][0] = ((this[i][0] - box.x) * width) / box.width + box.x\r\n      if (box.height) this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Convert array to line object\r\n  toLine () {\r\n    return {\r\n      x1: this[0][0],\r\n      y1: this[0][1],\r\n      x2: this[1][0],\r\n      y2: this[1][1]\r\n    }\r\n  }\r\n\r\n  // Convert array to string\r\n  toString () {\r\n    const array = []\r\n    // convert to a poly point string\r\n    for (let i = 0, il = this.length; i < il; i++) {\r\n      array.push(this[i].join(','))\r\n    }\r\n\r\n    return array.join(' ')\r\n  }\r\n\r\n  transform (m) {\r\n    return this.clone().transformO(m)\r\n  }\r\n\r\n  // transform points with matrix (similar to Point.transform)\r\n  transformO (m) {\r\n    if (!Matrix.isMatrixLike(m)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    for (let i = this.length; i--;) {\r\n      // Perform the matrix multiplication\r\n      const [ x, y ] = this[i]\r\n      this[i][0] = m.a * x + m.c * y + m.e\r\n      this[i][1] = m.b * x + m.d * y + m.f\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n", "import PointArray from '../../types/PointArray.js'\r\n\r\nexport const MorphArray = PointArray\r\n\r\n// Move by left top corner over x-axis\r\nexport function x (x) {\r\n  return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n}\r\n\r\n// Move by left top corner over y-axis\r\nexport function y (y) {\r\n  return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  const b = this.bbox()\r\n  return width == null ? b.width : this.size(width, b.height)\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  const b = this.bbox()\r\n  return height == null ? b.height : this.size(b.width, height)\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\n\r\nexport default class Line extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('line', node), attrs)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return new PointArray([\r\n      [ this.attr('x1'), this.attr('y1') ],\r\n      [ this.attr('x2'), this.attr('y2') ]\r\n    ])\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr(this.array().move(x, y).toLine())\r\n  }\r\n\r\n  // Overwrite native plot() method\r\n  plot (x1, y1, x2, y2) {\r\n    if (x1 == null) {\r\n      return this.array()\r\n    } else if (typeof y1 !== 'undefined') {\r\n      x1 = { x1, y1, x2, y2 }\r\n    } else {\r\n      x1 = new PointArray(x1).toLine()\r\n    }\r\n\r\n    return this.attr(x1)\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n    return this.attr(this.array().size(p.width, p.height).toLine())\r\n  }\r\n}\r\n\r\nextend(Line, pointed)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a line element\r\n    line: wrapWithAttrCheck(function (...args) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a PointArray\r\n      return Line.prototype.plot.apply(\r\n        this.put(new Line())\r\n        , args[0] != null ? args : [ 0, 0, 0, 0 ]\r\n      )\r\n    })\r\n  }\r\n})\r\n\r\nregister(Line, 'Line')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Marker extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('marker', node), attrs)\r\n  }\r\n\r\n  // Set height of element\n  height (height) {\r\n    return this.attr('markerHeight', height)\r\n  }\n\n  orient (orient) {\r\n    return this.attr('orient', orient)\r\n  }\n\n  // Set marker refX and refY\n  ref (x, y) {\r\n    return this.attr('refX', x).attr('refY', y)\r\n  }\n\n  // Return the fill id\n  toString () {\r\n    return 'url(#' + this.id() + ')'\r\n  }\n\n  // Update marker\n  update (block) {\r\n    // remove all content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\n\n  // Set width of element\r\n  width (width) {\r\n    return this.attr('markerWidth', width)\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    marker (...args) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    // Create marker\r\n    marker: wrapWithAttrCheck(function (width, height, block) {\r\n      // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n      return this.put(new Marker())\r\n        .size(width, height)\r\n        .ref(width / 2, height / 2)\r\n        .viewbox(0, 0, width, height)\r\n        .attr('orient', 'auto')\r\n        .update(block)\r\n    })\r\n  },\r\n  marker: {\r\n    // Create and attach markers\r\n    marker (marker, width, height, block) {\r\n      let attr = [ 'marker' ]\r\n\r\n      // Build attribute name\r\n      if (marker !== 'all') attr.push(marker)\r\n      attr = attr.join('-')\r\n\r\n      // Set marker attribute\r\n      marker = arguments[1] instanceof Marker\r\n        ? arguments[1]\r\n        : this.defs().marker(width, height, block)\r\n\r\n      return this.attr(attr, marker)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Marker, 'Marker')\r\n", "import { timeline } from '../modules/core/defaults.js'\r\nimport { extend } from '../utils/adopter.js'\r\n\r\n/***\r\nBase Class\r\n==========\r\nThe base stepper class that will be\r\n***/\r\n\r\nfunction makeSetterGetter (k, f) {\r\n  return function (v) {\r\n    if (v == null) return this[k]\r\n    this[k] = v\r\n    if (f) f.call(this)\r\n    return this\r\n  }\r\n}\r\n\r\nexport const easing = {\r\n  '-': function (pos) {\r\n    return pos\r\n  },\r\n  '<>': function (pos) {\r\n    return -Math.cos(pos * Math.PI) / 2 + 0.5\r\n  },\r\n  '>': function (pos) {\r\n    return Math.sin(pos * Math.PI / 2)\r\n  },\r\n  '<': function (pos) {\r\n    return -Math.cos(pos * Math.PI / 2) + 1\r\n  },\r\n  bezier: function (x1, y1, x2, y2) {\r\n    // see https://www.w3.org/TR/css-easing-1/#cubic-bezier-algo\r\n    return function (t) {\r\n      if (t < 0) {\r\n        if (x1 > 0) {\r\n          return y1 / x1 * t\r\n        } else if (x2 > 0) {\r\n          return y2 / x2 * t\r\n        } else {\r\n          return 0\r\n        }\r\n      } else if (t > 1) {\r\n        if (x2 < 1) {\r\n          return (1 - y2) / (1 - x2) * t + (y2 - x2) / (1 - x2)\r\n        } else if (x1 < 1) {\r\n          return (1 - y1) / (1 - x1) * t + (y1 - x1) / (1 - x1)\r\n        } else {\r\n          return 1\r\n        }\r\n      } else {\r\n        return 3 * t * (1 - t) ** 2 * y1 + 3 * t ** 2 * (1 - t) * y2 + t ** 3\r\n      }\r\n    }\r\n  },\r\n  // see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo\r\n  steps: function (steps, stepPosition = 'end') {\r\n    // deal with \"jump-\" prefix\r\n    stepPosition = stepPosition.split('-').reverse()[0]\r\n\r\n    let jumps = steps\r\n    if (stepPosition === 'none') {\r\n      --jumps\r\n    } else if (stepPosition === 'both') {\r\n      ++jumps\r\n    }\r\n\r\n    // The beforeFlag is essentially useless\r\n    return (t, beforeFlag = false) => {\r\n      // Step is called currentStep in referenced url\r\n      let step = Math.floor(t * steps)\r\n      const jumping = (t * step) % 1 === 0\r\n\r\n      if (stepPosition === 'start' || stepPosition === 'both') {\r\n        ++step\r\n      }\r\n\r\n      if (beforeFlag && jumping) {\r\n        --step\r\n      }\r\n\r\n      if (t >= 0 && step < 0) {\r\n        step = 0\r\n      }\r\n\r\n      if (t <= 1 && step > jumps) {\r\n        step = jumps\r\n      }\r\n\r\n      return step / jumps\r\n    }\r\n  }\r\n}\r\n\r\nexport class Stepper {\r\n  done () {\r\n    return false\r\n  }\r\n}\r\n\r\n/***\r\nEasing Functions\r\n================\r\n***/\r\n\r\nexport class Ease extends Stepper {\r\n  constructor (fn = timeline.ease) {\r\n    super()\r\n    this.ease = easing[fn] || fn\r\n  }\r\n\r\n  step (from, to, pos) {\r\n    if (typeof from !== 'number') {\r\n      return pos < 1 ? from : to\r\n    }\r\n    return from + (to - from) * this.ease(pos)\r\n  }\r\n}\r\n\r\n/***\r\nController Types\r\n================\r\n***/\r\n\r\nexport class Controller extends Stepper {\r\n  constructor (fn) {\r\n    super()\r\n    this.stepper = fn\r\n  }\r\n\r\n  done (c) {\r\n    return c.done\r\n  }\n\n  step (current, target, dt, c) {\r\n    return this.stepper(current, target, dt, c)\r\n  }\r\n\r\n}\r\n\r\nfunction recalculate () {\r\n  // Apply the default parameters\r\n  const duration = (this._duration || 500) / 1000\r\n  const overshoot = this._overshoot || 0\r\n\r\n  // Calculate the PID natural response\r\n  const eps = 1e-10\r\n  const pi = Math.PI\r\n  const os = Math.log(overshoot / 100 + eps)\r\n  const zeta = -os / Math.sqrt(pi * pi + os * os)\r\n  const wn = 3.9 / (zeta * duration)\r\n\r\n  // Calculate the Spring values\r\n  this.d = 2 * zeta * wn\r\n  this.k = wn * wn\r\n}\r\n\r\nexport class Spring extends Controller {\r\n  constructor (duration = 500, overshoot = 0) {\r\n    super()\r\n    this.duration(duration)\r\n      .overshoot(overshoot)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    if (dt > 100) dt = 16\r\n\r\n    dt /= 1000\r\n\r\n    // Get the previous velocity\r\n    const velocity = c.velocity || 0\r\n\r\n    // Apply the control to get the new position and store it\r\n    const acceleration = -this.d * velocity - this.k * (current - target)\r\n    const newPosition = current\r\n      + velocity * dt\r\n      + acceleration * dt * dt / 2\r\n\r\n    // Store the velocity\r\n    c.velocity = velocity + acceleration * dt\r\n\r\n    // Figure out if we have converged, and if so, pass the value\r\n    c.done = Math.abs(target - newPosition) + Math.abs(velocity) < 0.002\r\n    return c.done ? target : newPosition\r\n  }\r\n}\r\n\r\nextend(Spring, {\r\n  duration: makeSetterGetter('_duration', recalculate),\r\n  overshoot: makeSetterGetter('_overshoot', recalculate)\r\n})\r\n\r\nexport class PID extends Controller {\r\n  constructor (p = 0.1, i = 0.01, d = 0, windup = 1000) {\r\n    super()\r\n    this.p(p).i(i).d(d).windup(windup)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    const p = target - current\r\n    let i = (c.integral || 0) + p * dt\r\n    const d = (p - (c.error || 0)) / dt\r\n    const windup = this._windup\r\n\r\n    // antiwindup\r\n    if (windup !== false) {\r\n      i = Math.max(-windup, Math.min(i, windup))\r\n    }\r\n\r\n    c.error = p\r\n    c.integral = i\r\n\r\n    c.done = Math.abs(p) < 0.001\r\n\r\n    return c.done ? target : current + (this.P * p + this.I * i + this.D * d)\r\n  }\r\n}\r\n\r\nextend(PID, {\r\n  windup: makeSetterGetter('_windup'),\r\n  p: makeSetterGetter('P'),\r\n  i: makeSetterGetter('I'),\r\n  d: makeSetterGetter('D')\r\n})\r\n", "import { isPathLetter } from '../modules/core/regex.js'\r\nimport Point from '../types/Point.js'\r\n\r\nconst segmentParameters = { M: 2, L: 2, H: 1, V: 1, C: 6, S: 4, Q: 4, T: 2, A: 7, Z: 0 }\r\n\r\nconst pathHandlers = {\r\n  M: function (c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return [ 'M', p.x, p.y ]\r\n  },\r\n  L: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'L', c[0], c[1] ]\r\n  },\r\n  H: function (c, p) {\r\n    p.x = c[0]\r\n    return [ 'H', c[0] ]\r\n  },\r\n  V: function (c, p) {\r\n    p.y = c[0]\r\n    return [ 'V', c[0] ]\r\n  },\r\n  C: function (c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return [ 'C', c[0], c[1], c[2], c[3], c[4], c[5] ]\r\n  },\r\n  S: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'S', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  Q: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'Q', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  T: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'T', c[0], c[1] ]\r\n  },\r\n  Z: function (c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return [ 'Z' ]\r\n  },\r\n  A: function (c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return [ 'A', c[0], c[1], c[2], c[3], c[4], c[5], c[6] ]\r\n  }\r\n}\r\n\r\nconst mlhvqtcsaz = 'mlhvqtcsaz'.split('')\r\n\r\nfor (let i = 0, il = mlhvqtcsaz.length; i < il; ++i) {\r\n  pathHandlers[mlhvqtcsaz[i]] = (function (i) {\r\n    return function (c, p, p0) {\r\n      if (i === 'H') c[0] = c[0] + p.x\r\n      else if (i === 'V') c[0] = c[0] + p.y\r\n      else if (i === 'A') {\r\n        c[5] = c[5] + p.x\r\n        c[6] = c[6] + p.y\r\n      } else {\r\n        for (let j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j % 2 ? p.y : p.x)\r\n        }\r\n      }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsaz[i].toUpperCase())\r\n}\r\n\r\nfunction makeAbsolut (parser) {\r\n  const command = parser.segment[0]\r\n  return pathHandlers[command](parser.segment.slice(1), parser.p, parser.p0)\r\n}\r\n\r\nfunction segmentComplete (parser) {\r\n  return parser.segment.length && parser.segment.length - 1 === segmentParameters[parser.segment[0].toUpperCase()]\r\n}\r\n\r\nfunction startNewSegment (parser, token) {\r\n  parser.inNumber && finalizeNumber(parser, false)\r\n  const pathLetter = isPathLetter.test(token)\r\n\r\n  if (pathLetter) {\r\n    parser.segment = [ token ]\r\n  } else {\r\n    const lastCommand = parser.lastCommand\r\n    const small = lastCommand.toLowerCase()\r\n    const isSmall = lastCommand === small\r\n    parser.segment = [ small === 'm' ? (isSmall ? 'l' : 'L') : lastCommand ]\r\n  }\r\n\r\n  parser.inSegment = true\r\n  parser.lastCommand = parser.segment[0]\r\n\r\n  return pathLetter\r\n}\r\n\r\nfunction finalizeNumber (parser, inNumber) {\r\n  if (!parser.inNumber) throw new Error('Parser Error')\r\n  parser.number && parser.segment.push(parseFloat(parser.number))\r\n  parser.inNumber = inNumber\r\n  parser.number = ''\r\n  parser.pointSeen = false\r\n  parser.hasExponent = false\r\n\r\n  if (segmentComplete(parser)) {\r\n    finalizeSegment(parser)\r\n  }\r\n}\r\n\r\nfunction finalizeSegment (parser) {\r\n  parser.inSegment = false\r\n  if (parser.absolute) {\r\n    parser.segment = makeAbsolut(parser)\r\n  }\r\n  parser.segments.push(parser.segment)\r\n}\r\n\r\nfunction isArcFlag (parser) {\r\n  if (!parser.segment.length) return false\r\n  const isArc = parser.segment[0].toUpperCase() === 'A'\r\n  const length = parser.segment.length\r\n\r\n  return isArc && (length === 4 || length === 5)\r\n}\r\n\r\nfunction isExponential (parser) {\r\n  return parser.lastToken.toUpperCase() === 'E'\r\n}\r\n\r\nexport function pathParser (d, toAbsolute = true) {\r\n\r\n  let index = 0\r\n  let token = ''\r\n  const parser = {\r\n    segment: [],\r\n    inNumber: false,\r\n    number: '',\r\n    lastToken: '',\r\n    inSegment: false,\r\n    segments: [],\r\n    pointSeen: false,\r\n    hasExponent: false,\r\n    absolute: toAbsolute,\r\n    p0: new Point(),\r\n    p: new Point()\r\n  }\r\n\r\n  while ((parser.lastToken = token, token = d.charAt(index++))) {\r\n    if (!parser.inSegment) {\r\n      if (startNewSegment(parser, token)) {\r\n        continue\r\n      }\r\n    }\r\n\r\n    if (token === '.') {\r\n      if (parser.pointSeen || parser.hasExponent) {\r\n        finalizeNumber(parser, false)\r\n        --index\r\n        continue\r\n      }\r\n      parser.inNumber = true\r\n      parser.pointSeen = true\r\n      parser.number += token\r\n      continue\r\n    }\r\n\r\n    if (!isNaN(parseInt(token))) {\r\n\r\n      if (parser.number === '0' || isArcFlag(parser)) {\r\n        parser.inNumber = true\r\n        parser.number = token\r\n        finalizeNumber(parser, true)\r\n        continue\r\n      }\r\n\r\n      parser.inNumber = true\r\n      parser.number += token\r\n      continue\r\n    }\r\n\r\n    if (token === ' ' || token === ',') {\r\n      if (parser.inNumber) {\r\n        finalizeNumber(parser, false)\r\n      }\r\n      continue\r\n    }\r\n\r\n    if (token === '-') {\r\n      if (parser.inNumber && !isExponential(parser)) {\r\n        finalizeNumber(parser, false)\r\n        --index\r\n        continue\r\n      }\r\n      parser.number += token\r\n      parser.inNumber = true\r\n      continue\r\n    }\r\n\r\n    if (token.toUpperCase() === 'E') {\r\n      parser.number += token\r\n      parser.hasExponent = true\r\n      continue\r\n    }\r\n\r\n    if (isPathLetter.test(token)) {\r\n      if (parser.inNumber) {\r\n        finalizeNumber(parser, false)\r\n      } else if (!segmentComplete(parser)) {\r\n        throw new Error('parser Error')\r\n      } else {\r\n        finalizeSegment(parser)\r\n      }\r\n      --index\r\n    }\r\n  }\r\n\r\n  if (parser.inNumber) {\r\n    finalizeNumber(parser, false)\r\n  }\r\n\r\n  if (parser.inSegment && segmentComplete(parser)) {\r\n    finalizeSegment(parser)\r\n  }\r\n\r\n  return parser.segments\r\n\r\n}\r\n", "import SVGArray from './SVGArray.js'\r\nimport parser from '../modules/core/parser.js'\r\nimport Box from './Box.js'\r\nimport { pathParser } from '../utils/pathParser.js'\r\n\r\nfunction arrayToString (a) {\r\n  let s = ''\r\n  for (let i = 0, il = a.length; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\nexport default class PathArray extends SVGArray {\r\n  // Get bounding box of path\r\n  bbox () {\r\n    parser().path.setAttribute('d', this.toString())\r\n    return new Box(parser.nodes.path.getBBox())\r\n  }\r\n\r\n  // Move path string\r\n  move (x, y) {\r\n    // get bounding box of current situation\r\n    const box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (let l, i = this.length - 1; i >= 0; i--) {\r\n        l = this[i][0]\r\n\r\n        if (l === 'M' || l === 'L' || l === 'T') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n        } else if (l === 'H') {\r\n          this[i][1] += x\r\n        } else if (l === 'V') {\r\n          this[i][1] += y\r\n        } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n          this[i][3] += x\r\n          this[i][4] += y\r\n\r\n          if (l === 'C') {\r\n            this[i][5] += x\r\n            this[i][6] += y\r\n          }\r\n        } else if (l === 'A') {\r\n          this[i][6] += x\r\n          this[i][7] += y\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Absolutize and parse path to array\r\n  parse (d = 'M0 0') {\r\n    if (Array.isArray(d)) {\r\n      d = Array.prototype.concat.apply([], d).toString()\r\n    }\r\n\r\n    return pathParser(d)\r\n  }\r\n\r\n  // Resize path string\r\n  size (width, height) {\r\n    // get bounding box of current situation\r\n    const box = this.bbox()\r\n    let i, l\r\n\r\n    // If the box width or height is 0 then we ignore\r\n    // transformations on the respective axis\r\n    box.width = box.width === 0 ? 1 : box.width\r\n    box.height = box.height === 0 ? 1 : box.height\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      l = this[i][0]\r\n\r\n      if (l === 'M' || l === 'L' || l === 'T') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'H') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n      } else if (l === 'V') {\r\n        this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n        this[i][3] = ((this[i][3] - box.x) * width) / box.width + box.x\r\n        this[i][4] = ((this[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l === 'C') {\r\n          this[i][5] = ((this[i][5] - box.x) * width) / box.width + box.x\r\n          this[i][6] = ((this[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n      } else if (l === 'A') {\r\n        // resize radii\r\n        this[i][1] = (this[i][1] * width) / box.width\r\n        this[i][2] = (this[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this[i][6] = ((this[i][6] - box.x) * width) / box.width + box.x\r\n        this[i][7] = ((this[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Convert array to string\r\n  toString () {\r\n    return arrayToString(this)\r\n  }\r\n\r\n}\r\n", "import { Ease } from './Controller.js'\nimport {\n  delimiter,\n  numberAndUnit,\n  isPathLetter\n} from '../modules/core/regex.js'\nimport { extend } from '../utils/adopter.js'\nimport Color from '../types/Color.js'\nimport PathArray from '../types/PathArray.js'\nimport SVGArray from '../types/SVGArray.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nconst getClassForType = (value) => {\n  const type = typeof value\n\n  if (type === 'number') {\n    return SVGNumber\n  } else if (type === 'string') {\n    if (Color.isColor(value)) {\n      return Color\n    } else if (delimiter.test(value)) {\n      return isPathLetter.test(value)\n        ? PathArray\n        : SVGArray\n    } else if (numberAndUnit.test(value)) {\n      return SVGNumber\n    } else {\n      return NonMorphable\n    }\n  } else if (morphableTypes.indexOf(value.constructor) > -1) {\n    return value.constructor\n  } else if (Array.isArray(value)) {\n    return SVGArray\n  } else if (type === 'object') {\n    return ObjectBag\n  } else {\n    return NonMorphable\n  }\n}\n\nexport default class Morphable {\n  constructor (stepper) {\n    this._stepper = stepper || new Ease('-')\n\n    this._from = null\n    this._to = null\n    this._type = null\n    this._context = null\n    this._morphObj = null\n  }\n\n  at (pos) {\n    return this._morphObj.morph(this._from, this._to, pos, this._stepper, this._context)\n\n  }\n\n  done () {\n    const complete = this._context\n      .map(this._stepper.done)\n      .reduce(function (last, curr) {\n        return last && curr\n      }, true)\n    return complete\n  }\n\n  from (val) {\n    if (val == null) {\n      return this._from\n    }\n\n    this._from = this._set(val)\n    return this\n  }\n\n  stepper (stepper) {\n    if (stepper == null) return this._stepper\n    this._stepper = stepper\n    return this\n  }\n\n  to (val) {\n    if (val == null) {\n      return this._to\n    }\n\n    this._to = this._set(val)\n    return this\n  }\n\n  type (type) {\n    // getter\n    if (type == null) {\n      return this._type\n    }\n\n    // setter\n    this._type = type\n    return this\n  }\n\n  _set (value) {\n    if (!this._type) {\n      this.type(getClassForType(value))\n    }\n\n    let result = (new this._type(value))\n    if (this._type === Color) {\n      result = this._to\n        ? result[this._to[4]]()\n        : this._from\n          ? result[this._from[4]]()\n          : result\n    }\n\n    if (this._type === ObjectBag) {\n      result = this._to\n        ? result.align(this._to)\n        : this._from\n          ? result.align(this._from)\n          : result\n    }\n\n    result = result.toConsumable()\n\n    this._morphObj = this._morphObj || new this._type()\n    this._context = this._context\n      || Array.apply(null, Array(result.length))\n        .map(Object)\n        .map(function (o) {\n          o.done = true\n          return o\n        })\n    return result\n  }\n\n}\n\nexport class NonMorphable {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  init (val) {\n    val = Array.isArray(val) ? val[0] : val\n    this.value = val\n    return this\n  }\n\n  toArray () {\n    return [ this.value ]\n  }\n\n  valueOf () {\n    return this.value\n  }\n\n}\n\nexport class TransformBag {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  init (obj) {\n    if (Array.isArray(obj)) {\n      obj = {\n        scaleX: obj[0],\n        scaleY: obj[1],\n        shear: obj[2],\n        rotate: obj[3],\n        translateX: obj[4],\n        translateY: obj[5],\n        originX: obj[6],\n        originY: obj[7]\n      }\n    }\n\n    Object.assign(this, TransformBag.defaults, obj)\n    return this\n  }\n\n  toArray () {\n    const v = this\n\n    return [\n      v.scaleX,\n      v.scaleY,\n      v.shear,\n      v.rotate,\n      v.translateX,\n      v.translateY,\n      v.originX,\n      v.originY\n    ]\n  }\n}\n\nTransformBag.defaults = {\n  scaleX: 1,\n  scaleY: 1,\n  shear: 0,\n  rotate: 0,\n  translateX: 0,\n  translateY: 0,\n  originX: 0,\n  originY: 0\n}\n\nconst sortByKey = (a, b) => {\n  return (a[0] < b[0] ? -1 : (a[0] > b[0] ? 1 : 0))\n}\n\nexport class ObjectBag {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  align (other) {\n    const values = this.values\n    for (let i = 0, il = values.length; i < il; ++i) {\n\n      // If the type is the same we only need to check if the color is in the correct format\n      if (values[i + 1] === other[i + 1]) {\n        if (values[i + 1] === Color && other[i + 7] !== values[i + 7]) {\n          const space = other[i + 7]\n          const color = new Color(this.values.splice(i + 3, 5))[space]().toArray()\n          this.values.splice(i + 3, 0, ...color)\n        }\n\n        i += values[i + 2] + 2\n        continue\n      }\n\n      if (!other[i + 1]) {\n        return this\n      }\n\n      // The types differ, so we overwrite the new type with the old one\n      // And initialize it with the types default (e.g. black for color or 0 for number)\n      const defaultObject = new (other[i + 1])().toArray()\n\n      // Than we fix the values array\n      const toDelete = (values[i + 2]) + 3\n\n      values.splice(i, toDelete, other[i], other[i + 1], other[i + 2], ...defaultObject)\n\n      i += values[i + 2] + 2\n    }\n    return this\n  }\n\n  init (objOrArr) {\n    this.values = []\n\n    if (Array.isArray(objOrArr)) {\n      this.values = objOrArr.slice()\n      return\n    }\n\n    objOrArr = objOrArr || {}\n    const entries = []\n\n    for (const i in objOrArr) {\n      const Type = getClassForType(objOrArr[i])\n      const val = new Type(objOrArr[i]).toArray()\n      entries.push([ i, Type, val.length, ...val ])\n    }\n\n    entries.sort(sortByKey)\n\n    this.values = entries.reduce((last, curr) => last.concat(curr), [])\n    return this\n  }\n\n  toArray () {\n    return this.values\n  }\n\n  valueOf () {\n    const obj = {}\n    const arr = this.values\n\n    // for (var i = 0, len = arr.length; i < len; i += 2) {\n    while (arr.length) {\n      const key = arr.shift()\n      const Type = arr.shift()\n      const num = arr.shift()\n      const values = arr.splice(0, num)\n      obj[key] = new Type(values)// .valueOf()\n    }\n\n    return obj\n  }\n\n}\n\nconst morphableTypes = [\n  NonMorphable,\n  TransformBag,\n  ObjectBag\n]\n\nexport function registerMorphableType (type = []) {\n  morphableTypes.push(...[].concat(type))\n}\n\nexport function makeMorphable () {\n  extend(morphableTypes, {\n    to (val) {\n      return new Morphable()\n        .type(this.constructor)\n        .from(this.toArray())// this.valueOf())\n        .to(val)\n    },\n    fromArray (arr) {\n      this.init(arr)\n      return this\n    },\n    toConsumable () {\n      return this.toArray()\n    },\n    morph (from, to, pos, stepper, context) {\n      const mapper = function (i, index) {\n        return stepper.step(i, to[index], pos, context[index], context)\n      }\n\n      return this.fromArray(from.map(mapper))\n    }\n  })\n}\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Path extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('path', node), attrs)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return this._array || (this._array = new PathArray(this.attr('d')))\r\n  }\r\n\r\n  // Clear array cache\r\n  clear () {\r\n    delete this._array\r\n    return this\r\n  }\r\n\r\n  // Set height of element\r\n  height (height) {\r\n    return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr('d', this.array().move(x, y))\r\n  }\r\n\r\n  // Plot new path\r\n  plot (d) {\r\n    return (d == null)\n      ? this.array()\r\n      : this.clear().attr('d', typeof d === 'string' ? d : (this._array = new PathArray(d)))\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n    return this.attr('d', this.array().size(p.width, p.height))\r\n  }\r\n\r\n  // Set width of element\r\n  width (width) {\r\n    return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n  }\r\n\r\n  // Move by left top corner over x-axis\r\n  x (x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n\r\n  // Move by left top corner over y-axis\r\n  y (y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n\r\n}\r\n\r\n// Define morphable array\r\nPath.prototype.MorphArray = PathArray\r\n\r\n// Add parent method\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped path element\r\n    path: wrapWithAttrCheck(function (d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Path()).plot(d || new PathArray())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Path, 'Path')\r\n", "import { proportionalSize } from '../../utils/utils.js'\r\nimport PointArray from '../../types/PointArray.js'\r\n\r\n// Get array\r\nexport function array () {\r\n  return this._array || (this._array = new PointArray(this.attr('points')))\r\n}\r\n\r\n// Clear array cache\r\nexport function clear () {\r\n  delete this._array\r\n  return this\r\n}\r\n\r\n// Move by left top corner\r\nexport function move (x, y) {\r\n  return this.attr('points', this.array().move(x, y))\r\n}\r\n\r\n// Plot new path\r\nexport function plot (p) {\r\n  return (p == null)\n    ? this.array()\r\n    : this.clear().attr('points', typeof p === 'string'\n      ? p\r\n      : (this._array = new PointArray(p)))\r\n}\r\n\r\n// Set element size to given width and height\r\nexport function size (width, height) {\r\n  const p = proportionalSize(this, width, height)\r\n  return this.attr('points', this.array().size(p.width, p.height))\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polygon extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('polygon', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polygon: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polygon()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polygon, pointed)\r\nextend(Polygon, poly)\r\nregister(Polygon, 'Polygon')\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polyline extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('polyline', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polyline: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polyline()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polyline, pointed)\r\nextend(Polyline, poly)\r\nregister(Polyline, 'Polyline')\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Rect extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('rect', node), attrs)\r\n  }\r\n}\r\n\r\nextend(Rect, { rx, ry })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a rect element\r\n    rect: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new Rect()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Rect, 'Rect')\r\n", "export default class Queue {\r\n  constructor () {\r\n    this._first = null\r\n    this._last = null\r\n  }\r\n\r\n  // Shows us the first item in the list\n  first () {\r\n    return this._first && this._first.value\r\n  }\n\n  // Shows us the last item in the list\n  last () {\r\n    return this._last && this._last.value\r\n  }\n\n  push (value) {\r\n    // An item stores an id and the provided value\r\n    const item = typeof value.next !== 'undefined' ? value : { value: value, next: null, prev: null }\r\n\r\n    // Deal with the queue being empty or populated\r\n    if (this._last) {\r\n      item.prev = this._last\r\n      this._last.next = item\r\n      this._last = item\r\n    } else {\r\n      this._last = item\r\n      this._first = item\r\n    }\r\n\r\n    // Return the current item\r\n    return item\r\n  }\r\n\n  // Removes the item that was returned from the push\n  remove (item) {\r\n    // Relink the previous item\r\n    if (item.prev) item.prev.next = item.next\r\n    if (item.next) item.next.prev = item.prev\r\n    if (item === this._last) this._last = item.prev\r\n    if (item === this._first) this._first = item.next\r\n\r\n    // Invalidate item\r\n    item.prev = null\r\n    item.next = null\r\n  }\n\n  shift () {\r\n    // Check if we have a value\r\n    const remove = this._first\r\n    if (!remove) return null\r\n\r\n    // If we do, remove it and relink things\r\n    this._first = remove.next\r\n    if (this._first) this._first.prev = null\r\n    this._last = this._first ? this._last : null\r\n    return remove.value\r\n  }\r\n\r\n}\r\n", "import { globals } from '../utils/window.js'\r\nimport Queue from './Queue.js'\r\n\r\nconst Animator = {\r\n  nextDraw: null,\r\n  frames: new Queue(),\r\n  timeouts: new Queue(),\r\n  immediates: new Queue(),\r\n  timer: () => globals.window.performance || globals.window.Date,\r\n  transforms: [],\r\n\r\n  frame (fn) {\r\n    // Store the node\r\n    const node = Animator.frames.push({ run: fn })\r\n\r\n    // Request an animation frame if we don't have one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    // Return the node so we can remove it easily\r\n    return node\r\n  },\r\n\r\n  timeout (fn, delay) {\r\n    delay = delay || 0\r\n\r\n    // Work out when the event should fire\r\n    const time = Animator.timer().now() + delay\r\n\r\n    // Add the timeout to the end of the queue\r\n    const node = Animator.timeouts.push({ run: fn, time: time })\r\n\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  immediate (fn) {\r\n    // Add the immediate fn to the end of the queue\r\n    const node = Animator.immediates.push(fn)\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  cancelFrame (node) {\r\n    node != null && Animator.frames.remove(node)\r\n  },\r\n\r\n  clearTimeout (node) {\r\n    node != null && Animator.timeouts.remove(node)\r\n  },\r\n\r\n  cancelImmediate (node) {\r\n    node != null && Animator.immediates.remove(node)\r\n  },\r\n\r\n  _draw (now) {\r\n    // Run all the timeouts we can run, if they are not ready yet, add them\r\n    // to the end of the queue immediately! (bad timeouts!!! [sarcasm])\r\n    let nextTimeout = null\r\n    const lastTimeout = Animator.timeouts.last()\r\n    while ((nextTimeout = Animator.timeouts.shift())) {\r\n      // Run the timeout if its time, or push it to the end\r\n      if (now >= nextTimeout.time) {\r\n        nextTimeout.run()\r\n      } else {\r\n        Animator.timeouts.push(nextTimeout)\r\n      }\r\n\r\n      // If we hit the last item, we should stop shifting out more items\r\n      if (nextTimeout === lastTimeout) break\r\n    }\r\n\r\n    // Run all of the animation frames\r\n    let nextFrame = null\r\n    const lastFrame = Animator.frames.last()\r\n    while ((nextFrame !== lastFrame) && (nextFrame = Animator.frames.shift())) {\r\n      nextFrame.run(now)\r\n    }\r\n\r\n    let nextImmediate = null\r\n    while ((nextImmediate = Animator.immediates.shift())) {\r\n      nextImmediate()\r\n    }\r\n\r\n    // If we have remaining timeouts or frames, draw until we don't anymore\r\n    Animator.nextDraw = Animator.timeouts.first() || Animator.frames.first()\r\n      ? globals.window.requestAnimationFrame(Animator._draw)\r\n      : null\r\n  }\r\n}\r\n\r\nexport default Animator\r\n", "import { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Animator from './Animator.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\n\r\nconst makeSchedule = function (runnerInfo) {\r\n  const start = runnerInfo.start\r\n  const duration = runnerInfo.runner.duration()\r\n  const end = start + duration\r\n  return { start: start, duration: duration, end: end, runner: runnerInfo.runner }\r\n}\r\n\r\nconst defaultSource = function () {\r\n  const w = globals.window\r\n  return (w.performance || w.Date).now()\r\n}\r\n\r\nexport default class Timeline extends EventTarget {\r\n  // Construct a new timeline on the given element\r\n  constructor (timeSource = defaultSource) {\r\n    super()\r\n\r\n    this._timeSource = timeSource\r\n\r\n    // Store the timing variables\r\n    this._startTime = 0\r\n    this._speed = 1.0\r\n\r\n    // Determines how long a runner is hold in memory. Can be a dt or true/false\r\n    this._persist = 0\r\n\r\n    // Keep track of the running animations and their starting parameters\r\n    this._nextFrame = null\r\n    this._paused = true\r\n    this._runners = []\r\n    this._runnerIds = []\r\n    this._lastRunnerId = -1\r\n    this._time = 0\r\n    this._lastSourceTime = 0\r\n    this._lastStepTime = 0\r\n\r\n    // Make sure that step is always called in class context\r\n    this._step = this._stepFn.bind(this, false)\r\n    this._stepImmediate = this._stepFn.bind(this, true)\r\n  }\r\n\r\n  active () {\r\n    return !!this._nextFrame\r\n  }\r\n\r\n  finish () {\r\n    // Go to end and pause\r\n    this.time(this.getEndTimeOfTimeline() + 1)\r\n    return this.pause()\r\n  }\r\n\r\n  // Calculates the end of the timeline\r\n  getEndTime () {\r\n    const lastRunnerInfo = this.getLastRunnerInfo()\r\n    const lastDuration = lastRunnerInfo ? lastRunnerInfo.runner.duration() : 0\r\n    const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\r\n    return lastStartTime + lastDuration\r\n  }\r\n\r\n  getEndTimeOfTimeline () {\r\n    const endTimes = this._runners.map((i) => i.start + i.runner.duration())\r\n    return Math.max(0, ...endTimes)\r\n  }\r\n\r\n  getLastRunnerInfo () {\r\n    return this.getRunnerInfoById(this._lastRunnerId)\r\n  }\r\n\r\n  getRunnerInfoById (id) {\r\n    return this._runners[this._runnerIds.indexOf(id)] || null\r\n  }\r\n\r\n  pause () {\r\n    this._paused = true\r\n    return this._continue()\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  play () {\r\n    // Now make sure we are not paused and continue the animation\r\n    this._paused = false\r\n    return this.updateTime()._continue()\r\n  }\r\n\r\n  reverse (yes) {\r\n    const currentSpeed = this.speed()\r\n    if (yes == null) return this.speed(-currentSpeed)\r\n\r\n    const positive = Math.abs(currentSpeed)\r\n    return this.speed(yes ? -positive : positive)\r\n  }\r\n\r\n  // schedules a runner on the timeline\r\n  schedule (runner, delay, when) {\r\n    if (runner == null) {\r\n      return this._runners.map(makeSchedule)\r\n    }\r\n\r\n    // The start time for the next animation can either be given explicitly,\r\n    // derived from the current timeline time or it can be relative to the\r\n    // last start time to chain animations directly\r\n\r\n    let absoluteStartTime = 0\r\n    const endTime = this.getEndTime()\r\n    delay = delay || 0\r\n\r\n    // Work out when to start the animation\r\n    if (when == null || when === 'last' || when === 'after') {\r\n      // Take the last time and increment\r\n      absoluteStartTime = endTime\r\n    } else if (when === 'absolute' || when === 'start') {\r\n      absoluteStartTime = delay\r\n      delay = 0\r\n    } else if (when === 'now') {\r\n      absoluteStartTime = this._time\r\n    } else if (when === 'relative') {\r\n      const runnerInfo = this.getRunnerInfoById(runner.id)\r\n      if (runnerInfo) {\r\n        absoluteStartTime = runnerInfo.start + delay\r\n        delay = 0\r\n      }\r\n    } else if (when === 'with-last') {\r\n      const lastRunnerInfo = this.getLastRunnerInfo()\r\n      const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\r\n      absoluteStartTime = lastStartTime\r\n    } else {\r\n      throw new Error('Invalid value for the \"when\" parameter')\r\n    }\r\n\r\n    // Manage runner\r\n    runner.unschedule()\r\n    runner.timeline(this)\r\n\r\n    const persist = runner.persist()\r\n    const runnerInfo = {\r\n      persist: persist === null ? this._persist : persist,\r\n      start: absoluteStartTime + delay,\r\n      runner\r\n    }\r\n\r\n    this._lastRunnerId = runner.id\r\n\r\n    this._runners.push(runnerInfo)\r\n    this._runners.sort((a, b) => a.start - b.start)\r\n    this._runnerIds = this._runners.map(info => info.runner.id)\r\n\r\n    this.updateTime()._continue()\r\n    return this\r\n  }\r\n\r\n  seek (dt) {\r\n    return this.time(this._time + dt)\r\n  }\r\n\r\n  source (fn) {\r\n    if (fn == null) return this._timeSource\r\n    this._timeSource = fn\r\n    return this\r\n  }\r\n\r\n  speed (speed) {\r\n    if (speed == null) return this._speed\r\n    this._speed = speed\r\n    return this\r\n  }\r\n\r\n  stop () {\r\n    // Go to start and pause\r\n    this.time(0)\r\n    return this.pause()\r\n  }\r\n\r\n  time (time) {\r\n    if (time == null) return this._time\r\n    this._time = time\r\n    return this._continue(true)\r\n  }\r\n\r\n  // Remove the runner from this timeline\r\n  unschedule (runner) {\r\n    const index = this._runnerIds.indexOf(runner.id)\r\n    if (index < 0) return this\r\n\r\n    this._runners.splice(index, 1)\r\n    this._runnerIds.splice(index, 1)\r\n\r\n    runner.timeline(null)\r\n    return this\r\n  }\r\n\r\n  // Makes sure, that after pausing the time doesn't jump\r\n  updateTime () {\r\n    if (!this.active()) {\r\n      this._lastSourceTime = this._timeSource()\r\n    }\r\n    return this\r\n  }\r\n\r\n  // Checks if we are running and continues the animation\r\n  _continue (immediateStep = false) {\r\n    Animator.cancelFrame(this._nextFrame)\r\n    this._nextFrame = null\r\n\r\n    if (immediateStep) return this._stepImmediate()\r\n    if (this._paused) return this\r\n\r\n    this._nextFrame = Animator.frame(this._step)\r\n    return this\r\n  }\r\n\r\n  _stepFn (immediateStep = false) {\r\n    // Get the time delta from the last time and update the time\r\n    const time = this._timeSource()\r\n    let dtSource = time - this._lastSourceTime\r\n\r\n    if (immediateStep) dtSource = 0\r\n\r\n    const dtTime = this._speed * dtSource + (this._time - this._lastStepTime)\r\n    this._lastSourceTime = time\r\n\r\n    // Only update the time if we use the timeSource.\r\n    // Otherwise use the current time\r\n    if (!immediateStep) {\r\n      // Update the time\r\n      this._time += dtTime\r\n      this._time = this._time < 0 ? 0 : this._time\r\n    }\r\n    this._lastStepTime = this._time\r\n    this.fire('time', this._time)\r\n\r\n    // This is for the case that the timeline was seeked so that the time\r\n    // is now before the startTime of the runner. Thats why we need to set\r\n    // the runner to position 0\r\n\r\n    // FIXME:\r\n    // However, reseting in insertion order leads to bugs. Considering the case,\r\n    // where 2 runners change the same attribute but in different times,\r\n    // reseting both of them will lead to the case where the later defined\r\n    // runner always wins the reset even if the other runner started earlier\r\n    // and therefore should win the attribute battle\r\n    // this can be solved by reseting them backwards\r\n    for (let k = this._runners.length; k--;) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      const runnerInfo = this._runners[k]\r\n      const runner = runnerInfo.runner\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      const dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      // and try to reset it\r\n      if (dtToStart <= 0) {\r\n        runner.reset()\r\n      }\r\n    }\r\n\r\n    // Run all of the runners directly\r\n    let runnersLeft = false\r\n    for (let i = 0, len = this._runners.length; i < len; i++) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      const runnerInfo = this._runners[i]\r\n      const runner = runnerInfo.runner\r\n      let dt = dtTime\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      const dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      if (dtToStart <= 0) {\r\n        runnersLeft = true\r\n        continue\r\n      } else if (dtToStart < dt) {\r\n        // Adjust dt to make sure that animation is on point\r\n        dt = dtToStart\r\n      }\r\n\r\n      if (!runner.active()) continue\r\n\r\n      // If this runner is still going, signal that we need another animation\r\n      // frame, otherwise, remove the completed runner\r\n      const finished = runner.step(dt).done\r\n      if (!finished) {\r\n        runnersLeft = true\r\n        // continue\r\n      } else if (runnerInfo.persist !== true) {\r\n        // runner is finished. And runner might get removed\r\n        const endTime = runner.duration() - runner.time() + this._time\r\n\r\n        if (endTime + runnerInfo.persist < this._time) {\r\n          // Delete runner and correct index\r\n          runner.unschedule()\r\n          --i\r\n          --len\r\n        }\r\n      }\r\n    }\r\n\r\n    // Basically: we continue when there are runners right from us in time\r\n    // when -->, and when runners are left from us when <--\r\n    if ((runnersLeft && !(this._speed < 0 && this._time === 0)) || (this._runnerIds.length && this._speed < 0 && this._time > 0)) {\r\n      this._continue()\r\n    } else {\r\n      this.pause()\r\n      this.fire('finished')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    timeline: function (timeline) {\r\n      if (timeline == null) {\r\n        this._timeline = (this._timeline || new Timeline())\r\n        return this._timeline\r\n      } else {\r\n        this._timeline = timeline\r\n        return this\r\n      }\r\n    }\r\n  }\r\n})\r\n", "import { Controller, Ease, Stepper } from './Controller.js'\r\nimport { extend, register } from '../utils/adopter.js'\r\nimport { from, to } from '../modules/core/gradiented.js'\r\nimport { getOrigin } from '../utils/utils.js'\r\nimport { noop, timeline } from '../modules/core/defaults.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Animator from './Animator.js'\r\nimport Box from '../types/Box.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport Matrix from '../types/Matrix.js'\r\nimport Morphable, { TransformBag, ObjectBag } from './Morphable.js'\r\nimport Point from '../types/Point.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Timeline from './Timeline.js'\r\n\r\nexport default class Runner extends EventTarget {\r\n  constructor (options) {\r\n    super()\r\n\r\n    // Store a unique id on the runner, so that we can identify it later\r\n    this.id = Runner.id++\r\n\r\n    // Ensure a default value\r\n    options = options == null\r\n      ? timeline.duration\r\n      : options\r\n\r\n    // Ensure that we get a controller\r\n    options = typeof options === 'function'\r\n      ? new Controller(options)\r\n      : options\r\n\r\n    // Declare all of the variables\r\n    this._element = null\r\n    this._timeline = null\r\n    this.done = false\r\n    this._queue = []\r\n\r\n    // Work out the stepper and the duration\r\n    this._duration = typeof options === 'number' && options\r\n    this._isDeclarative = options instanceof Controller\r\n    this._stepper = this._isDeclarative ? options : new Ease()\r\n\r\n    // We copy the current values from the timeline because they can change\r\n    this._history = {}\r\n\r\n    // Store the state of the runner\r\n    this.enabled = true\r\n    this._time = 0\r\n    this._lastTime = 0\r\n\r\n    // At creation, the runner is in reseted state\r\n    this._reseted = true\r\n\r\n    // Save transforms applied to this runner\r\n    this.transforms = new Matrix()\r\n    this.transformId = 1\r\n\r\n    // Looping variables\r\n    this._haveReversed = false\r\n    this._reverse = false\r\n    this._loopsDone = 0\r\n    this._swing = false\r\n    this._wait = 0\r\n    this._times = 1\r\n\r\n    this._frameId = null\r\n\r\n    // Stores how long a runner is stored after beeing done\r\n    this._persist = this._isDeclarative ? true : null\r\n  }\r\n\r\n  static sanitise (duration, delay, when) {\r\n    // Initialise the default parameters\r\n    let times = 1\r\n    let swing = false\r\n    let wait = 0\r\n    duration = duration || timeline.duration\r\n    delay = delay || timeline.delay\r\n    when = when || 'last'\r\n\r\n    // If we have an object, unpack the values\r\n    if (typeof duration === 'object' && !(duration instanceof Stepper)) {\r\n      delay = duration.delay || delay\r\n      when = duration.when || when\r\n      swing = duration.swing || swing\r\n      times = duration.times || times\r\n      wait = duration.wait || wait\r\n      duration = duration.duration || timeline.duration\r\n    }\r\n\r\n    return {\r\n      duration: duration,\r\n      delay: delay,\r\n      swing: swing,\r\n      times: times,\r\n      wait: wait,\r\n      when: when\r\n    }\r\n  }\r\n\r\n  active (enabled) {\r\n    if (enabled == null) return this.enabled\r\n    this.enabled = enabled\r\n    return this\r\n  }\r\n\r\n  /*\r\n  Private Methods\r\n  ===============\r\n  Methods that shouldn't be used externally\r\n  */\r\n  addTransform (transform, index) {\r\n    this.transforms.lmultiplyO(transform)\r\n    return this\r\n  }\r\n\r\n  after (fn) {\r\n    return this.on('finished', fn)\r\n  }\r\n\r\n  animate (duration, delay, when) {\r\n    const o = Runner.sanitise(duration, delay, when)\r\n    const runner = new Runner(o.duration)\r\n    if (this._timeline) runner.timeline(this._timeline)\r\n    if (this._element) runner.element(this._element)\r\n    return runner.loop(o).schedule(o.delay, o.when)\r\n  }\r\n\r\n  clearTransform () {\r\n    this.transforms = new Matrix()\r\n    return this\r\n  }\r\n\r\n  // TODO: Keep track of all transformations so that deletion is faster\r\n  clearTransformsFromQueue () {\r\n    if (!this.done || !this._timeline || !this._timeline._runnerIds.includes(this.id)) {\r\n      this._queue = this._queue.filter((item) => {\r\n        return !item.isTransform\r\n      })\r\n    }\r\n  }\r\n\r\n  delay (delay) {\r\n    return this.animate(0, delay)\r\n  }\r\n\r\n  duration () {\r\n    return this._times * (this._wait + this._duration) - this._wait\r\n  }\r\n\r\n  during (fn) {\r\n    return this.queue(null, fn)\r\n  }\r\n\r\n  ease (fn) {\r\n    this._stepper = new Ease(fn)\r\n    return this\r\n  }\r\n  /*\r\n  Runner Definitions\r\n  ==================\r\n  These methods help us define the runtime behaviour of the Runner or they\r\n  help us make new runners from the current runner\r\n  */\r\n\r\n  element (element) {\r\n    if (element == null) return this._element\r\n    this._element = element\r\n    element._prepareRunner()\r\n    return this\r\n  }\r\n\r\n  finish () {\r\n    return this.step(Infinity)\r\n  }\r\n\r\n  loop (times, swing, wait) {\r\n    // Deal with the user passing in an object\r\n    if (typeof times === 'object') {\r\n      swing = times.swing\r\n      wait = times.wait\r\n      times = times.times\r\n    }\r\n\r\n    // Sanitise the values and store them\r\n    this._times = times || Infinity\r\n    this._swing = swing || false\r\n    this._wait = wait || 0\r\n\r\n    // Allow true to be passed\r\n    if (this._times === true) { this._times = Infinity }\r\n\r\n    return this\r\n  }\r\n\r\n  loops (p) {\r\n    const loopDuration = this._duration + this._wait\r\n    if (p == null) {\r\n      const loopsDone = Math.floor(this._time / loopDuration)\r\n      const relativeTime = (this._time - loopsDone * loopDuration)\r\n      const position = relativeTime / this._duration\r\n      return Math.min(loopsDone + position, this._times)\r\n    }\r\n    const whole = Math.floor(p)\r\n    const partial = p % 1\r\n    const time = loopDuration * whole + this._duration * partial\r\n    return this.time(time)\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  position (p) {\r\n    // Get all of the variables we need\r\n    const x = this._time\r\n    const d = this._duration\r\n    const w = this._wait\r\n    const t = this._times\r\n    const s = this._swing\r\n    const r = this._reverse\r\n    let position\r\n\r\n    if (p == null) {\r\n      /*\r\n      This function converts a time to a position in the range [0, 1]\r\n      The full explanation can be found in this desmos demonstration\r\n        https://www.desmos.com/calculator/u4fbavgche\r\n      The logic is slightly simplified here because we can use booleans\r\n      */\r\n\r\n      // Figure out the value without thinking about the start or end time\r\n      const f = function (x) {\r\n        const swinging = s * Math.floor(x % (2 * (w + d)) / (w + d))\r\n        const backwards = (swinging && !r) || (!swinging && r)\r\n        const uncliped = Math.pow(-1, backwards) * (x % (w + d)) / d + backwards\r\n        const clipped = Math.max(Math.min(uncliped, 1), 0)\r\n        return clipped\r\n      }\r\n\r\n      // Figure out the value by incorporating the start time\r\n      const endTime = t * (w + d) - w\r\n      position = x <= 0\r\n        ? Math.round(f(1e-5))\r\n        : x < endTime\r\n          ? f(x)\r\n          : Math.round(f(endTime - 1e-5))\r\n      return position\r\n    }\r\n\r\n    // Work out the loops done and add the position to the loops done\r\n    const loopsDone = Math.floor(this.loops())\r\n    const swingForward = s && (loopsDone % 2 === 0)\r\n    const forwards = (swingForward && !r) || (r && swingForward)\r\n    position = loopsDone + (forwards ? p : 1 - p)\r\n    return this.loops(position)\r\n  }\r\n\r\n  progress (p) {\r\n    if (p == null) {\r\n      return Math.min(1, this._time / this.duration())\r\n    }\r\n    return this.time(p * this.duration())\r\n  }\r\n\r\n  /*\r\n  Basic Functionality\r\n  ===================\r\n  These methods allow us to attach basic functions to the runner directly\r\n  */\r\n  queue (initFn, runFn, retargetFn, isTransform) {\r\n    this._queue.push({\r\n      initialiser: initFn || noop,\r\n      runner: runFn || noop,\r\n      retarget: retargetFn,\r\n      isTransform: isTransform,\r\n      initialised: false,\r\n      finished: false\r\n    })\r\n    const timeline = this.timeline()\r\n    timeline && this.timeline()._continue()\r\n    return this\r\n  }\r\n\r\n  reset () {\r\n    if (this._reseted) return this\r\n    this.time(0)\r\n    this._reseted = true\r\n    return this\r\n  }\r\n\r\n  reverse (reverse) {\r\n    this._reverse = reverse == null ? !this._reverse : reverse\r\n    return this\r\n  }\r\n\r\n  schedule (timeline, delay, when) {\r\n    // The user doesn't need to pass a timeline if we already have one\r\n    if (!(timeline instanceof Timeline)) {\r\n      when = delay\r\n      delay = timeline\r\n      timeline = this.timeline()\r\n    }\r\n\r\n    // If there is no timeline, yell at the user...\r\n    if (!timeline) {\r\n      throw Error('Runner cannot be scheduled without timeline')\r\n    }\r\n\r\n    // Schedule the runner on the timeline provided\r\n    timeline.schedule(this, delay, when)\r\n    return this\r\n  }\r\n\r\n  step (dt) {\r\n    // If we are inactive, this stepper just gets skipped\r\n    if (!this.enabled) return this\r\n\r\n    // Update the time and get the new position\r\n    dt = dt == null ? 16 : dt\r\n    this._time += dt\r\n    const position = this.position()\r\n\r\n    // Figure out if we need to run the stepper in this frame\r\n    const running = this._lastPosition !== position && this._time >= 0\r\n    this._lastPosition = position\r\n\r\n    // Figure out if we just started\r\n    const duration = this.duration()\r\n    const justStarted = this._lastTime <= 0 && this._time > 0\r\n    const justFinished = this._lastTime < duration && this._time >= duration\r\n\r\n    this._lastTime = this._time\r\n    if (justStarted) {\r\n      this.fire('start', this)\r\n    }\r\n\r\n    // Work out if the runner is finished set the done flag here so animations\r\n    // know, that they are running in the last step (this is good for\r\n    // transformations which can be merged)\r\n    const declarative = this._isDeclarative\r\n    this.done = !declarative && !justFinished && this._time >= duration\r\n\r\n    // Runner is running. So its not in reseted state anymore\r\n    this._reseted = false\r\n\r\n    let converged = false\r\n    // Call initialise and the run function\r\n    if (running || declarative) {\r\n      this._initialise(running)\r\n\r\n      // clear the transforms on this runner so they dont get added again and again\r\n      this.transforms = new Matrix()\r\n      converged = this._run(declarative ? dt : position)\r\n\r\n      this.fire('step', this)\r\n    }\r\n    // correct the done flag here\r\n    // declaritive animations itself know when they converged\r\n    this.done = this.done || (converged && declarative)\r\n    if (justFinished) {\r\n      this.fire('finished', this)\r\n    }\r\n    return this\r\n  }\r\n\r\n  /*\r\n  Runner animation methods\r\n  ========================\r\n  Control how the animation plays\r\n  */\r\n  time (time) {\r\n    if (time == null) {\r\n      return this._time\r\n    }\r\n    const dt = time - this._time\r\n    this.step(dt)\r\n    return this\r\n  }\r\n\r\n  timeline (timeline) {\r\n    // check explicitly for undefined so we can set the timeline to null\r\n    if (typeof timeline === 'undefined') return this._timeline\r\n    this._timeline = timeline\r\n    return this\r\n  }\r\n\r\n  unschedule () {\r\n    const timeline = this.timeline()\r\n    timeline && timeline.unschedule(this)\r\n    return this\r\n  }\r\n\r\n  // Run each initialise function in the runner if required\r\n  _initialise (running) {\r\n    // If we aren't running, we shouldn't initialise when not declarative\r\n    if (!running && !this._isDeclarative) return\r\n\r\n    // Loop through all of the initialisers\r\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current initialiser\r\n      const current = this._queue[i]\r\n\r\n      // Determine whether we need to initialise\r\n      const needsIt = this._isDeclarative || (!current.initialised && running)\r\n      running = !current.finished\r\n\r\n      // Call the initialiser if we need to\r\n      if (needsIt && running) {\r\n        current.initialiser.call(this)\r\n        current.initialised = true\r\n      }\r\n    }\r\n  }\r\n\r\n  // Save a morpher to the morpher list so that we can retarget it later\r\n  _rememberMorpher (method, morpher) {\r\n    this._history[method] = {\r\n      morpher: morpher,\r\n      caller: this._queue[this._queue.length - 1]\r\n    }\r\n\r\n    // We have to resume the timeline in case a controller\r\n    // is already done without being ever run\r\n    // This can happen when e.g. this is done:\r\n    //    anim = el.animate(new SVG.Spring)\r\n    // and later\r\n    //    anim.move(...)\r\n    if (this._isDeclarative) {\r\n      const timeline = this.timeline()\r\n      timeline && timeline.play()\r\n    }\r\n  }\r\n\r\n  // Try to set the target for a morpher if the morpher exists, otherwise\r\n  // Run each run function for the position or dt given\r\n  _run (positionOrDt) {\r\n    // Run all of the _queue directly\r\n    let allfinished = true\r\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current function to run\r\n      const current = this._queue[i]\r\n\r\n      // Run the function if its not finished, we keep track of the finished\r\n      // flag for the sake of declarative _queue\r\n      const converged = current.runner.call(this, positionOrDt)\r\n      current.finished = current.finished || (converged === true)\r\n      allfinished = allfinished && current.finished\r\n    }\r\n\r\n    // We report when all of the constructors are finished\r\n    return allfinished\r\n  }\r\n\r\n  // do nothing and return false\r\n  _tryRetarget (method, target, extra) {\r\n    if (this._history[method]) {\r\n      // if the last method wasnt even initialised, throw it away\r\n      if (!this._history[method].caller.initialised) {\r\n        const index = this._queue.indexOf(this._history[method].caller)\r\n        this._queue.splice(index, 1)\r\n        return false\r\n      }\r\n\r\n      // for the case of transformations, we use the special retarget function\r\n      // which has access to the outer scope\r\n      if (this._history[method].caller.retarget) {\r\n        this._history[method].caller.retarget.call(this, target, extra)\r\n        // for everything else a simple morpher change is sufficient\r\n      } else {\r\n        this._history[method].morpher.to(target)\r\n      }\r\n\r\n      this._history[method].caller.finished = false\r\n      const timeline = this.timeline()\r\n      timeline && timeline.play()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n}\r\n\r\nRunner.id = 0\r\n\r\nexport class FakeRunner {\r\n  constructor (transforms = new Matrix(), id = -1, done = true) {\r\n    this.transforms = transforms\r\n    this.id = id\r\n    this.done = done\r\n  }\r\n\r\n  clearTransformsFromQueue () { }\r\n}\r\n\r\nextend([ Runner, FakeRunner ], {\r\n  mergeWith (runner) {\r\n    return new FakeRunner(\r\n      runner.transforms.lmultiply(this.transforms),\r\n      runner.id\r\n    )\r\n  }\r\n})\r\n\r\n// FakeRunner.emptyRunner = new FakeRunner()\r\n\r\nconst lmultiply = (last, curr) => last.lmultiplyO(curr)\r\nconst getRunnerTransform = (runner) => runner.transforms\r\n\r\nfunction mergeTransforms () {\r\n  // Find the matrix to apply to the element and apply it\r\n  const runners = this._transformationRunners.runners\r\n  const netTransform = runners\r\n    .map(getRunnerTransform)\r\n    .reduce(lmultiply, new Matrix())\r\n\r\n  this.transform(netTransform)\r\n\r\n  this._transformationRunners.merge()\r\n\r\n  if (this._transformationRunners.length() === 1) {\r\n    this._frameId = null\r\n  }\r\n}\r\n\r\nexport class RunnerArray {\r\n  constructor () {\r\n    this.runners = []\r\n    this.ids = []\r\n  }\r\n\r\n  add (runner) {\r\n    if (this.runners.includes(runner)) return\r\n    const id = runner.id + 1\r\n\r\n    this.runners.push(runner)\r\n    this.ids.push(id)\r\n\r\n    return this\r\n  }\r\n\r\n  clearBefore (id) {\r\n    const deleteCnt = this.ids.indexOf(id + 1) || 1\r\n    this.ids.splice(0, deleteCnt, 0)\r\n    this.runners.splice(0, deleteCnt, new FakeRunner())\r\n      .forEach((r) => r.clearTransformsFromQueue())\r\n    return this\r\n  }\r\n\r\n  edit (id, newRunner) {\r\n    const index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1, id + 1)\r\n    this.runners.splice(index, 1, newRunner)\r\n    return this\r\n  }\r\n\r\n  getByID (id) {\r\n    return this.runners[this.ids.indexOf(id + 1)]\r\n  }\r\n\r\n  length () {\r\n    return this.ids.length\r\n  }\r\n\r\n  merge () {\r\n    let lastRunner = null\r\n    for (let i = 0; i < this.runners.length; ++i) {\r\n      const runner = this.runners[i]\r\n\r\n      const condition = lastRunner\r\n        && runner.done && lastRunner.done\r\n        // don't merge runner when persisted on timeline\r\n        && (!runner._timeline || !runner._timeline._runnerIds.includes(runner.id))\r\n        && (!lastRunner._timeline || !lastRunner._timeline._runnerIds.includes(lastRunner.id))\r\n\r\n      if (condition) {\r\n        // the +1 happens in the function\r\n        this.remove(runner.id)\r\n        const newRunner = runner.mergeWith(lastRunner)\r\n        this.edit(lastRunner.id, newRunner)\r\n        lastRunner = newRunner\r\n        --i\r\n      } else {\r\n        lastRunner = runner\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  remove (id) {\r\n    const index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1)\r\n    this.runners.splice(index, 1)\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    animate (duration, delay, when) {\r\n      const o = Runner.sanitise(duration, delay, when)\r\n      const timeline = this.timeline()\r\n      return new Runner(o.duration)\r\n        .loop(o)\r\n        .element(this)\r\n        .timeline(timeline.play())\r\n        .schedule(o.delay, o.when)\r\n    },\r\n\r\n    delay (by, when) {\r\n      return this.animate(0, by, when)\r\n    },\r\n\r\n    // this function searches for all runners on the element and deletes the ones\r\n    // which run before the current one. This is because absolute transformations\r\n    // overwfrite anything anyway so there is no need to waste time computing\r\n    // other runners\r\n    _clearTransformRunnersBefore (currentRunner) {\r\n      this._transformationRunners.clearBefore(currentRunner.id)\r\n    },\r\n\r\n    _currentTransform (current) {\r\n      return this._transformationRunners.runners\r\n        // we need the equal sign here to make sure, that also transformations\r\n        // on the same runner which execute before the current transformation are\r\n        // taken into account\r\n        .filter((runner) => runner.id <= current.id)\r\n        .map(getRunnerTransform)\r\n        .reduce(lmultiply, new Matrix())\r\n    },\r\n\r\n    _addRunner (runner) {\r\n      this._transformationRunners.add(runner)\r\n\r\n      // Make sure that the runner merge is executed at the very end of\r\n      // all Animator functions. Thats why we use immediate here to execute\r\n      // the merge right after all frames are run\r\n      Animator.cancelImmediate(this._frameId)\r\n      this._frameId = Animator.immediate(mergeTransforms.bind(this))\r\n    },\r\n\r\n    _prepareRunner () {\r\n      if (this._frameId == null) {\r\n        this._transformationRunners = new RunnerArray()\r\n          .add(new FakeRunner(new Matrix(this)))\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\n// Will output the elements from array A that are not in the array B\r\nconst difference = (a, b) => a.filter(x => !b.includes(x))\r\n\r\nextend(Runner, {\r\n  attr (a, v) {\r\n    return this.styleAttr('attr', a, v)\r\n  },\r\n\r\n  // Add animatable styles\r\n  css (s, v) {\r\n    return this.styleAttr('css', s, v)\r\n  },\r\n\r\n  styleAttr (type, nameOrAttrs, val) {\r\n    if (typeof nameOrAttrs === 'string') {\r\n      return this.styleAttr(type, { [nameOrAttrs]: val })\r\n    }\r\n\r\n    let attrs = nameOrAttrs\r\n    if (this._tryRetarget(type, attrs)) return this\r\n\r\n    let morpher = new Morphable(this._stepper).to(attrs)\r\n    let keys = Object.keys(attrs)\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element()[type](keys))\r\n    }, function (pos) {\r\n      this.element()[type](morpher.at(pos).valueOf())\r\n      return morpher.done()\r\n    }, function (newToAttrs) {\r\n\r\n      // Check if any new keys were added\r\n      const newKeys = Object.keys(newToAttrs)\r\n      const differences = difference(newKeys, keys)\r\n\r\n      // If their are new keys, initialize them and add them to morpher\r\n      if (differences.length) {\r\n        // Get the values\r\n        const addedFromAttrs = this.element()[type](differences)\r\n\r\n        // Get the already initialized values\r\n        const oldFromAttrs = new ObjectBag(morpher.from()).valueOf()\r\n\r\n        // Merge old and new\r\n        Object.assign(oldFromAttrs, addedFromAttrs)\r\n        morpher.from(oldFromAttrs)\r\n      }\r\n\r\n      // Get the object from the morpher\r\n      const oldToAttrs = new ObjectBag(morpher.to()).valueOf()\r\n\r\n      // Merge in new attributes\r\n      Object.assign(oldToAttrs, newToAttrs)\r\n\r\n      // Change morpher target\r\n      morpher.to(oldToAttrs)\r\n\r\n      // Make sure that we save the work we did so we don't need it to do again\r\n      keys = newKeys\r\n      attrs = newToAttrs\r\n    })\r\n\r\n    this._rememberMorpher(type, morpher)\r\n    return this\r\n  },\r\n\r\n  zoom (level, point) {\r\n    if (this._tryRetarget('zoom', level, point)) return this\r\n\r\n    let morpher = new Morphable(this._stepper).to(new SVGNumber(level))\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element().zoom())\r\n    }, function (pos) {\r\n      this.element().zoom(morpher.at(pos), point)\r\n      return morpher.done()\r\n    }, function (newLevel, newPoint) {\r\n      point = newPoint\r\n      morpher.to(newLevel)\r\n    })\r\n\r\n    this._rememberMorpher('zoom', morpher)\r\n    return this\r\n  },\r\n\r\n  /**\r\n   ** absolute transformations\r\n   **/\r\n\r\n  //\r\n  // M v -----|-----(D M v = F v)------|----->  T v\r\n  //\r\n  // 1. define the final state (T) and decompose it (once)\r\n  //    t = [tx, ty, the, lam, sy, sx]\r\n  // 2. on every frame: pull the current state of all previous transforms\r\n  //    (M - m can change)\r\n  //   and then write this as m = [tx0, ty0, the0, lam0, sy0, sx0]\r\n  // 3. Find the interpolated matrix F(pos) = m + pos * (t - m)\r\n  //   - Note F(0) = M\r\n  //   - Note F(1) = T\r\n  // 4. Now you get the delta matrix as a result: D = F * inv(M)\r\n\r\n  transform (transforms, relative, affine) {\r\n    // If we have a declarative function, we should retarget it if possible\r\n    relative = transforms.relative || relative\r\n    if (this._isDeclarative && !relative && this._tryRetarget('transform', transforms)) {\r\n      return this\r\n    }\r\n\r\n    // Parse the parameters\r\n    const isMatrix = Matrix.isMatrixLike(transforms)\r\n    affine = transforms.affine != null\r\n      ? transforms.affine\r\n      : (affine != null ? affine : !isMatrix)\r\n\r\n    // Create a morepher and set its type\r\n    const morpher = new Morphable(this._stepper)\r\n      .type(affine ? TransformBag : Matrix)\r\n\r\n    let origin\r\n    let element\r\n    let current\r\n    let currentAngle\r\n    let startTransform\r\n\r\n    function setup () {\r\n      // make sure element and origin is defined\r\n      element = element || this.element()\r\n      origin = origin || getOrigin(transforms, element)\r\n\r\n      startTransform = new Matrix(relative ? undefined : element)\r\n\r\n      // add the runner to the element so it can merge transformations\r\n      element._addRunner(this)\r\n\r\n      // Deactivate all transforms that have run so far if we are absolute\r\n      if (!relative) {\r\n        element._clearTransformRunnersBefore(this)\r\n      }\r\n    }\r\n\r\n    function run (pos) {\r\n      // clear all other transforms before this in case something is saved\r\n      // on this runner. We are absolute. We dont need these!\r\n      if (!relative) this.clearTransform()\r\n\r\n      const { x, y } = new Point(origin).transform(element._currentTransform(this))\r\n\r\n      let target = new Matrix({ ...transforms, origin: [ x, y ] })\r\n      let start = this._isDeclarative && current\r\n        ? current\r\n        : startTransform\r\n\r\n      if (affine) {\r\n        target = target.decompose(x, y)\r\n        start = start.decompose(x, y)\r\n\r\n        // Get the current and target angle as it was set\r\n        const rTarget = target.rotate\r\n        const rCurrent = start.rotate\r\n\r\n        // Figure out the shortest path to rotate directly\r\n        const possibilities = [ rTarget - 360, rTarget, rTarget + 360 ]\r\n        const distances = possibilities.map(a => Math.abs(a - rCurrent))\r\n        const shortest = Math.min(...distances)\r\n        const index = distances.indexOf(shortest)\r\n        target.rotate = possibilities[index]\r\n      }\r\n\r\n      if (relative) {\r\n        // we have to be careful here not to overwrite the rotation\r\n        // with the rotate method of Matrix\r\n        if (!isMatrix) {\r\n          target.rotate = transforms.rotate || 0\r\n        }\r\n        if (this._isDeclarative && currentAngle) {\r\n          start.rotate = currentAngle\r\n        }\r\n      }\r\n\r\n      morpher.from(start)\r\n      morpher.to(target)\r\n\r\n      const affineParameters = morpher.at(pos)\r\n      currentAngle = affineParameters.rotate\r\n      current = new Matrix(affineParameters)\r\n\r\n      this.addTransform(current)\r\n      element._addRunner(this)\r\n      return morpher.done()\r\n    }\r\n\r\n    function retarget (newTransforms) {\r\n      // only get a new origin if it changed since the last call\r\n      if (\r\n        (newTransforms.origin || 'center').toString()\r\n        !== (transforms.origin || 'center').toString()\r\n      ) {\r\n        origin = getOrigin(newTransforms, element)\r\n      }\r\n\r\n      // overwrite the old transformations with the new ones\r\n      transforms = { ...newTransforms, origin }\r\n    }\r\n\r\n    this.queue(setup, run, retarget, true)\r\n    this._isDeclarative && this._rememberMorpher('transform', morpher)\r\n    return this\r\n  },\r\n\r\n  // Animatable x-axis\r\n  x (x, relative) {\r\n    return this._queueNumber('x', x)\r\n  },\r\n\r\n  // Animatable y-axis\r\n  y (y) {\r\n    return this._queueNumber('y', y)\r\n  },\r\n\r\n  dx (x = 0) {\r\n    return this._queueNumberDelta('x', x)\r\n  },\r\n\r\n  dy (y = 0) {\r\n    return this._queueNumberDelta('y', y)\r\n  },\r\n\r\n  dmove (x, y) {\r\n    return this.dx(x).dy(y)\r\n  },\r\n\r\n  _queueNumberDelta (method, to) {\r\n    to = new SVGNumber(to)\r\n\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    const morpher = new Morphable(this._stepper).to(to)\r\n    let from = null\r\n    this.queue(function () {\r\n      from = this.element()[method]()\r\n      morpher.from(from)\r\n      morpher.to(from + to)\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    }, function (newTo) {\r\n      morpher.to(from + new SVGNumber(newTo))\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueObject (method, to) {\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    const morpher = new Morphable(this._stepper).to(to)\r\n    this.queue(function () {\r\n      morpher.from(this.element()[method]())\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueNumber (method, value) {\r\n    return this._queueObject(method, new SVGNumber(value))\r\n  },\r\n\r\n  // Animatable center x-axis\r\n  cx (x) {\r\n    return this._queueNumber('cx', x)\r\n  },\r\n\r\n  // Animatable center y-axis\r\n  cy (y) {\r\n    return this._queueNumber('cy', y)\r\n  },\r\n\r\n  // Add animatable move\r\n  move (x, y) {\r\n    return this.x(x).y(y)\r\n  },\r\n\r\n  // Add animatable center\r\n  center (x, y) {\r\n    return this.cx(x).cy(y)\r\n  },\r\n\r\n  // Add animatable size\r\n  size (width, height) {\r\n    // animate bbox based size for all other elements\r\n    let box\r\n\r\n    if (!width || !height) {\r\n      box = this._element.bbox()\r\n    }\r\n\r\n    if (!width) {\r\n      width = box.width / box.height * height\r\n    }\r\n\r\n    if (!height) {\r\n      height = box.height / box.width * width\r\n    }\r\n\r\n    return this\r\n      .width(width)\r\n      .height(height)\r\n  },\r\n\r\n  // Add animatable width\r\n  width (width) {\r\n    return this._queueNumber('width', width)\r\n  },\r\n\r\n  // Add animatable height\r\n  height (height) {\r\n    return this._queueNumber('height', height)\r\n  },\r\n\r\n  // Add animatable plot\r\n  plot (a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if (arguments.length === 4) {\r\n      return this.plot([ a, b, c, d ])\r\n    }\r\n\r\n    if (this._tryRetarget('plot', a)) return this\r\n\r\n    const morpher = new Morphable(this._stepper)\r\n      .type(this._element.MorphArray).to(a)\r\n\r\n    this.queue(function () {\r\n      morpher.from(this._element.array())\r\n    }, function (pos) {\r\n      this._element.plot(morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    this._rememberMorpher('plot', morpher)\r\n    return this\r\n  },\r\n\r\n  // Add leading method\r\n  leading (value) {\r\n    return this._queueNumber('leading', value)\r\n  },\r\n\r\n  // Add animatable viewbox\r\n  viewbox (x, y, width, height) {\r\n    return this._queueObject('viewbox', new Box(x, y, width, height))\r\n  },\r\n\r\n  update (o) {\r\n    if (typeof o !== 'object') {\r\n      return this.update({\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      })\r\n    }\r\n\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', o.offset)\r\n\r\n    return this\r\n  }\r\n})\r\n\r\nextend(Runner, { rx, ry, from, to })\r\nregister(Runner, 'Runner')\r\n", "import {\r\n  adopt,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { svg, svgjs, xlink, xmlns } from '../modules/core/namespaces.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport Defs from './Defs.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Svg extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('svg', node), attrs)\r\n    this.namespace()\r\n  }\r\n\r\n  // Creates and returns defs element\r\n  defs () {\r\n    if (!this.isRoot()) return this.root().defs()\r\n\r\n    return adopt(this.node.querySelector('defs'))\r\n      || this.put(new Defs())\r\n  }\r\n\r\n  isRoot () {\r\n    return !this.node.parentNode\r\n      || (!(this.node.parentNode instanceof globals.window.SVGElement) && this.node.parentNode.nodeName !== '#document-fragment')\r\n  }\r\n\r\n  // Add namespaces\r\n  namespace () {\r\n    if (!this.isRoot()) return this.root().namespace()\r\n    return this\r\n      .attr({ xmlns: svg, version: '1.1' })\r\n      .attr('xmlns:xlink', xlink, xmlns)\r\n      .attr('xmlns:svgjs', svgjs, xmlns)\r\n  }\r\n\r\n  removeNamespace () {\r\n    return this.attr({ xmlns: null, version: null })\r\n      .attr('xmlns:xlink', null, xmlns)\r\n      .attr('xmlns:svgjs', null, xmlns)\r\n  }\r\n\r\n  // Check if this is a root svg\r\n  // If not, call root() from this element\r\n  root () {\r\n    if (this.isRoot()) return this\r\n    return super.root()\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create nested svg document\r\n    nested: wrapWithAttrCheck(function () {\r\n      return this.put(new Svg())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Svg, 'Svg', true)\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Symbol extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('symbol', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    symbol: wrapWithAttrCheck(function () {\r\n      return this.put(new Symbol())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Symbol, 'Symbol')\r\n", "import { globals } from '../../utils/window.js'\r\n\r\n// Create plain text node\r\nexport function plain (text) {\r\n  // clear if build mode is disabled\r\n  if (this._build === false) {\r\n    this.clear()\r\n  }\r\n\r\n  // create text node\r\n  this.node.appendChild(globals.document.createTextNode(text))\r\n\r\n  return this\r\n}\r\n\r\n// Get length of text element\r\nexport function length () {\r\n  return this.node.getComputedTextLength()\r\n}\r\n\r\n// Move over x-axis\r\n// Text is moved by its bounding box\r\n// text-anchor does NOT matter\r\nexport function x (x, box = this.bbox()) {\r\n  if (x == null) {\r\n    return box.x\r\n  }\r\n\r\n  return this.attr('x', this.attr('x') + x - box.x)\r\n}\r\n\r\n// Move over y-axis\r\nexport function y (y, box = this.bbox()) {\r\n  if (y == null) {\r\n    return box.y\r\n  }\r\n\r\n  return this.attr('y', this.attr('y') + y - box.y)\r\n}\r\n\r\nexport function move (x, y, box = this.bbox()) {\r\n  return this.x(x, box).y(y, box)\r\n}\r\n\r\n// Move center over x-axis\r\nexport function cx (x, box = this.bbox()) {\r\n  if (x == null) {\r\n    return box.cx\r\n  }\r\n\r\n  return this.attr('x', this.attr('x') + x - box.cx)\r\n}\r\n\r\n// Move center over y-axis\r\nexport function cy (y, box = this.bbox()) {\r\n  if (y == null) {\r\n    return box.cy\r\n  }\r\n\r\n  return this.attr('y', this.attr('y') + y - box.cy)\r\n}\r\n\r\nexport function center (x, y, box = this.bbox()) {\r\n  return this.cx(x, box).cy(y, box)\r\n}\r\n\r\nexport function ax (x) {\r\n  return this.attr('x', x)\r\n}\r\n\r\nexport function ay (y) {\r\n  return this.attr('y', y)\r\n}\r\n\r\nexport function amove (x, y) {\r\n  return this.ax(x).ay(y)\r\n}\r\n\r\n// Enable / disable build mode\r\nexport function build (build) {\r\n  this._build = !!build\r\n  return this\r\n}\r\n", "import {\r\n  adopt,\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Text extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('text', node), attrs)\r\n\r\n    this.dom.leading = new SVGNumber(1.3) // store leading value for rebuilding\r\n    this._rebuild = true // enable automatic updating of dy values\r\n    this._build = false // disable build mode for adding multiple lines\r\n  }\r\n\r\n  // Set / get leading\n  leading (value) {\r\n    // act as getter\r\n    if (value == null) {\r\n      return this.dom.leading\r\n    }\r\n\r\n    // act as setter\r\n    this.dom.leading = new SVGNumber(value)\r\n\r\n    return this.rebuild()\r\n  }\n\n  // Rebuild appearance type\n  rebuild (rebuild) {\r\n    // store new rebuild flag if given\r\n    if (typeof rebuild === 'boolean') {\r\n      this._rebuild = rebuild\r\n    }\r\n\r\n    // define position of all lines\r\n    if (this._rebuild) {\r\n      const self = this\r\n      let blankLineOffset = 0\r\n      const leading = this.dom.leading\r\n\r\n      this.each(function (i) {\r\n        const fontSize = globals.window.getComputedStyle(this.node)\r\n          .getPropertyValue('font-size')\r\n\r\n        const dy = leading * new SVGNumber(fontSize)\r\n\r\n        if (this.dom.newLined) {\r\n          this.attr('x', self.attr('x'))\r\n\r\n          if (this.text() === '\\n') {\r\n            blankLineOffset += dy\r\n          } else {\r\n            this.attr('dy', i ? dy + blankLineOffset : 0)\r\n            blankLineOffset = 0\r\n          }\r\n        }\r\n      })\r\n\r\n      this.fire('rebuild')\r\n    }\r\n\r\n    return this\r\n  }\n\n  // overwrite method from parent to set data properly\n  setData (o) {\r\n    this.dom = o\r\n    this.dom.leading = new SVGNumber(o.leading || 1.3)\r\n    return this\r\n  }\n\n  // Set the text content\r\n  text (text) {\r\n    // act as getter\r\n    if (text === undefined) {\r\n      const children = this.node.childNodes\r\n      let firstLine = 0\r\n      text = ''\r\n\r\n      for (let i = 0, len = children.length; i < len; ++i) {\r\n        // skip textPaths - they are no lines\r\n        if (children[i].nodeName === 'textPath') {\r\n          if (i === 0) firstLine = 1\r\n          continue\r\n        }\r\n\r\n        // add newline if its not the first child and newLined is set to true\r\n        if (i !== firstLine && children[i].nodeType !== 3 && adopt(children[i]).dom.newLined === true) {\r\n          text += '\\n'\r\n        }\r\n\r\n        // add content of this node\r\n        text += children[i].textContent\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    // remove existing content\r\n    this.clear().build(true)\r\n\r\n    if (typeof text === 'function') {\r\n      // call block\r\n      text.call(this, this)\r\n    } else {\r\n      // store text and make sure text is not blank\r\n      text = (text + '').split('\\n')\r\n\r\n      // build new lines\r\n      for (let j = 0, jl = text.length; j < jl; j++) {\r\n        this.newLine(text[j])\r\n      }\r\n    }\r\n\r\n    // disable build mode and rebuild lines\r\n    return this.build(false).rebuild()\r\n  }\r\n\r\n}\r\n\r\nextend(Text, textable)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create text element\r\n    text: wrapWithAttrCheck(function (text = '') {\r\n      return this.put(new Text()).text(text)\r\n    }),\r\n\r\n    // Create plain text element\r\n    plain: wrapWithAttrCheck(function (text = '') {\r\n      return this.put(new Text()).plain(text)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Text, 'Text')\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport Text from './Text.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Tspan extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('tspan', node), attrs)\r\n    this._build = false // disable build mode for adding multiple lines\r\n  }\r\n\r\n  // Shortcut dx\n  dx (dx) {\r\n    return this.attr('dx', dx)\r\n  }\n\n  // Shortcut dy\n  dy (dy) {\r\n    return this.attr('dy', dy)\r\n  }\n\n  // Create new line\n  newLine () {\r\n    // mark new line\r\n    this.dom.newLined = true\r\n\r\n    // fetch parent\r\n    const text = this.parent()\r\n\r\n    // early return in case we are not in a text element\r\n    if (!(text instanceof Text)) {\r\n      return this\r\n    }\r\n\r\n    const i = text.index(this)\r\n\r\n    const fontSize = globals.window.getComputedStyle(this.node)\r\n      .getPropertyValue('font-size')\r\n    const dy = text.dom.leading * new SVGNumber(fontSize)\r\n\r\n    // apply new position\r\n    return this.dy(i ? dy : 0).attr('x', text.x())\r\n  }\n\n  // Set text content\r\n  text (text) {\r\n    if (text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n    if (typeof text === 'function') {\r\n      this.clear().build(true)\r\n      text.call(this, this)\r\n      this.build(false)\r\n    } else {\r\n      this.plain(text)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nextend(Tspan, textable)\r\n\r\nregisterMethods({\r\n  Tspan: {\r\n    tspan: wrapWithAttrCheck(function (text = '') {\r\n      const tspan = new Tspan()\r\n\r\n      // clear if build mode is disabled\r\n      if (!this._build) {\r\n        this.clear()\r\n      }\r\n\r\n      // add new tspan\r\n      return this.put(tspan).text(text)\r\n    })\r\n  },\r\n  Text: {\r\n    newLine: function (text = '') {\r\n      return this.tspan(text).newLine()\r\n    }\r\n  }\r\n})\r\n\r\nregister(Tspan, 'Tspan')\r\n", "import { cx, cy, height, width, x, y } from '../modules/core/circled.js'\r\nimport {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Circle extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('circle', node), attrs)\r\n  }\r\n\r\n  radius (r) {\r\n    return this.attr('r', r)\r\n  }\r\n\r\n  // Radius x value\r\n  rx (rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n\r\n  // Alias radius x value\r\n  ry (ry) {\r\n    return this.rx(ry)\r\n  }\r\n\r\n  size (size) {\r\n    return this.radius(new SVGNumber(size).divide(2))\r\n  }\r\n}\r\n\r\nextend(Circle, { x, y, cx, cy, width, height })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create circle element\r\n    circle: wrapWithAttrCheck(function (size = 0) {\r\n      return this.put(new Circle())\r\n        .size(size)\r\n        .move(0, 0)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Circle, 'Circle')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class ClipPath extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('clipPath', node), attrs)\r\n  }\r\n\r\n  // Unclip all clipped elements and remove itself\r\n  remove () {\r\n    // unclip all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unclip()\r\n    })\r\n\r\n    // remove clipPath from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [clip-path*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create clipping element\r\n    clip: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new ClipPath())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute clipPath to svg element\r\n    clipper () {\r\n      return this.reference('clip-path')\r\n    },\r\n\r\n    clipWith (element) {\r\n      // use given clip or create a new one\r\n      const clipper = element instanceof ClipPath\r\n        ? element\r\n        : this.parent().clip().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('clip-path', 'url(\"#' + clipper.id() + '\")')\r\n    },\r\n\r\n    // Unclip element\r\n    unclip () {\r\n      return this.attr('clip-path', null)\r\n    }\r\n  }\r\n})\r\n\r\nregister(ClipPath, 'ClipPath')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class ForeignObject extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('foreignObject', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    foreignObject: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new ForeignObject()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(ForeignObject, 'ForeignObject')\r\n", "import Matrix from '../../types/Matrix.js'\nimport Point from '../../types/Point.js'\nimport { proportionalSize } from '../../utils/utils.js'\n\nexport function dmove (dx, dy) {\n  this.children().forEach((child, i) => {\n\n    let bbox\n\n    // We have to wrap this for elements that dont have a bbox\n    // e.g. title and other descriptive elements\n    try {\n      // Get the childs bbox\n      bbox = child.bbox()\n    } catch (e) {\n      return\n    }\n\n    // Get childs matrix\n    const m = new Matrix(child)\n    // Translate childs matrix by amount and\n    // transform it back into parents space\n    const matrix = m.translate(dx, dy).transform(m.inverse())\n    // Calculate new x and y from old box\n    const p = new Point(bbox.x, bbox.y).transform(matrix)\n    // Move element\n    child.move(p.x, p.y)\n  })\n\n  return this\n}\n\nexport function dx (dx) {\n  return this.dmove(dx, 0)\n}\n\nexport function dy (dy) {\n  return this.dmove(0, dy)\n}\n\nexport function height (height, box = this.bbox()) {\n  if (height == null) return box.height\n  return this.size(box.width, height, box)\n}\n\nexport function move (x = 0, y = 0, box = this.bbox()) {\n  const dx = x - box.x\n  const dy = y - box.y\n\n  return this.dmove(dx, dy)\n}\n\nexport function size (width, height, box = this.bbox()) {\n  const p = proportionalSize(this, width, height, box)\n  const scaleX = p.width / box.width\n  const scaleY = p.height / box.height\n\n  this.children().forEach((child, i) => {\n    const o = new Point(box).transform(new Matrix(child).inverse())\n    child.scale(scaleX, scaleY, o.x, o.y)\n  })\n\n  return this\n}\n\nexport function width (width, box = this.bbox()) {\n  if (width == null) return box.width\n  return this.size(width, box.height, box)\n}\n\nexport function x (x, box = this.bbox()) {\n  if (x == null) return box.x\n  return this.move(x, box.y, box)\n}\n\nexport function y (y, box = this.bbox()) {\n  if (y == null) return box.y\n  return this.move(box.x, y, box)\n}\n", "import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\r\n\r\nexport default class G extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('g', node), attrs)\r\n  }\r\n}\r\n\r\nextend(G, containerGeometry)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a group element\r\n    group: wrapWithAttrCheck(function () {\r\n      return this.put(new G())\r\n    })\r\n  }\r\n})\r\n\r\nregister(G, 'G')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Container from './Container.js'\r\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\r\n\r\nexport default class A extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('a', node), attrs)\r\n  }\r\n\r\n  // Link target attribute\r\n  target (target) {\r\n    return this.attr('target', target)\r\n  }\r\n\r\n  // Link url\r\n  to (url) {\r\n    return this.attr('href', url, xlink)\r\n  }\r\n\r\n}\r\n\r\nextend(A, containerGeometry)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a hyperlink element\r\n    link: wrapWithAttrCheck(function (url) {\r\n      return this.put(new A()).to(url)\r\n    })\r\n  },\r\n  Element: {\r\n    unlink () {\r\n      const link = this.linker()\r\n\r\n      if (!link) return this\r\n\r\n      const parent = link.parent()\r\n\r\n      if (!parent) {\r\n        return this.remove()\r\n      }\r\n\r\n      const index = parent.index(link)\r\n      parent.add(this, index)\r\n\r\n      link.remove()\r\n      return this\r\n    },\r\n    linkTo (url) {\r\n      // reuse old link if possible\r\n      let link = this.linker()\r\n\r\n      if (!link) {\r\n        link = new A()\r\n        this.wrap(link)\r\n      }\r\n\r\n      if (typeof url === 'function') {\r\n        url.call(link, link)\r\n      } else {\r\n        link.to(url)\r\n      }\r\n\r\n      return this\r\n    },\r\n    linker () {\r\n      const link = this.parent()\r\n      if (link && link.node.nodeName.toLowerCase() === 'a') {\r\n        return link\r\n      }\r\n\r\n      return null\r\n    }\r\n  }\r\n})\r\n\r\nregister(A, 'A')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Mask extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('mask', node), attrs)\r\n  }\r\n\r\n  // Unmask all masked elements and remove itself\r\n  remove () {\r\n    // unmask all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unmask()\r\n    })\r\n\r\n    // remove mask from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [mask*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    mask: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new Mask())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute mask to svg element\r\n    masker () {\r\n      return this.reference('mask')\r\n    },\r\n\r\n    maskWith (element) {\r\n      // use given mask or create a new one\r\n      const masker = element instanceof Mask\r\n        ? element\r\n        : this.parent().mask().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('mask', 'url(\"#' + masker.id() + '\")')\r\n    },\r\n\r\n    // Unmask element\r\n    unmask () {\r\n      return this.attr('mask', null)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Mask, 'Mask')\r\n", "import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\n\r\nexport default class Stop extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('stop', node), attrs)\r\n  }\r\n\r\n  // add color stops\r\n  update (o) {\r\n    if (typeof o === 'number' || o instanceof SVGNumber) {\r\n      o = {\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      }\r\n    }\r\n\r\n    // set attributes\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', new SVGNumber(o.offset))\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Gradient: {\r\n    // Add a color stop\r\n    stop: function (offset, color, opacity) {\r\n      return this.put(new Stop()).update(offset, color, opacity)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Stop, 'Stop')\r\n", "import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { unCamelCase } from '../utils/utils.js'\r\nimport Element from './Element.js'\r\n\r\nfunction cssRule (selector, rule) {\r\n  if (!selector) return ''\r\n  if (!rule) return selector\r\n\r\n  let ret = selector + '{'\r\n\r\n  for (const i in rule) {\r\n    ret += unCamelCase(i) + ':' + rule[i] + ';'\r\n  }\r\n\r\n  ret += '}'\r\n\r\n  return ret\r\n}\r\n\r\nexport default class Style extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('style', node), attrs)\r\n  }\r\n\r\n  addText (w = '') {\r\n    this.node.textContent += w\r\n    return this\r\n  }\r\n\r\n  font (name, src, params = {}) {\r\n    return this.rule('@font-face', {\r\n      fontFamily: name,\r\n      src: src,\r\n      ...params\r\n    })\r\n  }\r\n\r\n  rule (selector, obj) {\r\n    return this.addText(cssRule(selector, obj))\r\n  }\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  style (selector, obj) {\r\n    return this.put(new Style()).rule(selector, obj)\r\n  },\r\n  fontface  (name, src, params) {\r\n    return this.put(new Style()).font(name, src, params)\r\n  }\r\n})\r\n\r\nregister(Style, 'Style')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Path from './Path.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Text from './Text.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class TextPath extends Text {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('textPath', node), attrs)\r\n  }\r\n\r\n  // return the array of the path track element\r\n  array () {\r\n    const track = this.track()\r\n\r\n    return track ? track.array() : null\r\n  }\r\n\r\n  // Plot path if any\r\n  plot (d) {\r\n    const track = this.track()\r\n    let pathArray = null\r\n\r\n    if (track) {\r\n      pathArray = track.plot(d)\r\n    }\r\n\r\n    return (d == null) ? pathArray : this\r\n  }\r\n\r\n  // Get the path element\r\n  track () {\r\n    return this.reference('href')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    textPath: wrapWithAttrCheck(function (text, path) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = this.text(text)\r\n      }\r\n\r\n      return text.path(path)\r\n    })\r\n  },\r\n  Text: {\r\n    // Create path for text to run on\r\n    path: wrapWithAttrCheck(function (track, importNodes = true) {\r\n      const textPath = new TextPath()\r\n\r\n      // if track is a path, reuse it\r\n      if (!(track instanceof Path)) {\r\n        // create path element\r\n        track = this.defs().path(track)\r\n      }\r\n\r\n      // link textPath to path and add content\r\n      textPath.attr('href', '#' + track, xlink)\r\n\r\n      // Transplant all nodes from text to textPath\r\n      let node\r\n      if (importNodes) {\r\n        while ((node = this.node.firstChild)) {\r\n          textPath.node.appendChild(node)\r\n        }\r\n      }\r\n\r\n      // add textPath element as child node and return textPath\r\n      return this.put(textPath)\r\n    }),\r\n\r\n    // Get the textPath children\r\n    textPath () {\r\n      return this.findOne('textPath')\r\n    }\r\n  },\r\n  Path: {\r\n    // creates a textPath from this path\r\n    text: wrapWithAttrCheck(function (text) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = new Text().addTo(this.parent()).text(text)\r\n      }\r\n\r\n      // Create textPath from text and path and return\r\n      return text.path(this)\r\n    }),\r\n\r\n    targets () {\r\n      return baseFind('svg textPath').filter((node) => {\r\n        return (node.attr('href') || '').includes(this.id())\r\n      })\r\n\r\n      // Does not work in IE11. Use when IE support is dropped\r\n      // return baseFind('svg textPath[*|href*=\"' + this.id() + '\"]')\r\n    }\r\n  }\r\n})\r\n\r\nTextPath.prototype.MorphArray = PathArray\r\nregister(TextPath, 'TextPath')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Use extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('use', node), attrs)\r\n  }\r\n\r\n  // Use element as a reference\r\n  use (element, file) {\r\n    // Set lined element\r\n    return this.attr('href', (file || '') + '#' + element, xlink)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a use element\r\n    use: wrapWithAttrCheck(function (element, file) {\r\n      return this.put(new Use()).use(element, file)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Use, 'Use')\r\n", "/* Optional Modules */\r\nimport './modules/optional/arrange.js'\r\nimport './modules/optional/class.js'\r\nimport './modules/optional/css.js'\r\nimport './modules/optional/data.js'\r\nimport './modules/optional/memory.js'\r\nimport './modules/optional/sugar.js'\r\nimport './modules/optional/transform.js'\r\n\r\nimport { extend, makeInstance } from './utils/adopter.js'\r\nimport { getMethodNames, getMethodsFor } from './utils/methods.js'\r\nimport Box from './types/Box.js'\r\nimport Color from './types/Color.js'\r\nimport Container from './elements/Container.js'\r\nimport Defs from './elements/Defs.js'\r\nimport Dom from './elements/Dom.js'\r\nimport Element from './elements/Element.js'\r\nimport Ellipse from './elements/Ellipse.js'\r\nimport EventTarget from './types/EventTarget.js'\r\nimport Fragment from './elements/Fragment.js'\r\nimport Gradient from './elements/Gradient.js'\r\nimport Image from './elements/Image.js'\r\nimport Line from './elements/Line.js'\r\nimport List from './types/List.js'\r\nimport Marker from './elements/Marker.js'\r\nimport Matrix from './types/Matrix.js'\r\nimport Morphable, {\r\n  NonMorphable,\r\n  ObjectBag,\r\n  TransformBag,\r\n  makeMorphable,\r\n  registerMorphableType\r\n} from './animation/Morphable.js'\r\nimport Path from './elements/Path.js'\r\nimport PathArray from './types/PathArray.js'\r\nimport Pattern from './elements/Pattern.js'\r\nimport PointArray from './types/PointArray.js'\r\nimport Point from './types/Point.js'\r\nimport Polygon from './elements/Polygon.js'\r\nimport Polyline from './elements/Polyline.js'\r\nimport Rect from './elements/Rect.js'\r\nimport Runner from './animation/Runner.js'\r\nimport SVGArray from './types/SVGArray.js'\r\nimport SVGNumber from './types/SVGNumber.js'\r\nimport Shape from './elements/Shape.js'\r\nimport Svg from './elements/Svg.js'\r\nimport Symbol from './elements/Symbol.js'\r\nimport Text from './elements/Text.js'\r\nimport Tspan from './elements/Tspan.js'\r\nimport * as defaults from './modules/core/defaults.js'\r\nimport * as utils from './utils/utils.js'\r\nimport * as namespaces from './modules/core/namespaces.js'\r\nimport * as regex from './modules/core/regex.js'\r\n\r\nexport {\r\n  Morphable,\r\n  registerMorphableType,\r\n  makeMorphable,\r\n  TransformBag,\r\n  ObjectBag,\r\n  NonMorphable\r\n}\r\n\r\nexport { defaults, utils, namespaces, regex }\r\nexport const SVG = makeInstance\r\nexport { default as parser } from './modules/core/parser.js'\r\nexport { default as find } from './modules/core/selector.js'\r\nexport * from './modules/core/event.js'\r\nexport * from './utils/adopter.js'\r\nexport {\r\n  getWindow,\r\n  registerWindow,\r\n  restoreWindow,\r\n  saveWindow,\r\n  withWindow\r\n} from './utils/window.js'\r\n\r\n/* Animation Modules */\r\nexport { default as Animator } from './animation/Animator.js'\r\nexport { Controller, Ease, PID, Spring, easing } from './animation/Controller.js'\r\nexport { default as Queue } from './animation/Queue.js'\r\nexport { default as Runner } from './animation/Runner.js'\r\nexport { default as Timeline } from './animation/Timeline.js'\r\n\r\n/* Types */\r\nexport { default as Array } from './types/SVGArray.js'\r\nexport { default as Box } from './types/Box.js'\r\nexport { default as Color } from './types/Color.js'\r\nexport { default as EventTarget } from './types/EventTarget.js'\r\nexport { default as Matrix } from './types/Matrix.js'\r\nexport { default as Number } from './types/SVGNumber.js'\r\nexport { default as PathArray } from './types/PathArray.js'\r\nexport { default as Point } from './types/Point.js'\r\nexport { default as PointArray } from './types/PointArray.js'\r\nexport { default as List } from './types/List.js'\r\n\r\n/* Elements */\r\nexport { default as Circle } from './elements/Circle.js'\r\nexport { default as ClipPath } from './elements/ClipPath.js'\r\nexport { default as Container } from './elements/Container.js'\r\nexport { default as Defs } from './elements/Defs.js'\r\nexport { default as Dom } from './elements/Dom.js'\r\nexport { default as Element } from './elements/Element.js'\r\nexport { default as Ellipse } from './elements/Ellipse.js'\r\nexport { default as ForeignObject } from './elements/ForeignObject.js'\r\nexport { default as Fragment } from './elements/Fragment.js'\r\nexport { default as Gradient } from './elements/Gradient.js'\r\nexport { default as G } from './elements/G.js'\r\nexport { default as A } from './elements/A.js'\r\nexport { default as Image } from './elements/Image.js'\r\nexport { default as Line } from './elements/Line.js'\r\nexport { default as Marker } from './elements/Marker.js'\r\nexport { default as Mask } from './elements/Mask.js'\r\nexport { default as Path } from './elements/Path.js'\r\nexport { default as Pattern } from './elements/Pattern.js'\r\nexport { default as Polygon } from './elements/Polygon.js'\r\nexport { default as Polyline } from './elements/Polyline.js'\r\nexport { default as Rect } from './elements/Rect.js'\r\nexport { default as Shape } from './elements/Shape.js'\r\nexport { default as Stop } from './elements/Stop.js'\r\nexport { default as Style } from './elements/Style.js'\r\nexport { default as Svg } from './elements/Svg.js'\r\nexport { default as Symbol } from './elements/Symbol.js'\r\nexport { default as Text } from './elements/Text.js'\r\nexport { default as TextPath } from './elements/TextPath.js'\r\nexport { default as Tspan } from './elements/Tspan.js'\r\nexport { default as Use } from './elements/Use.js'\r\n\r\nextend([\r\n  Svg,\r\n  Symbol,\r\n  Image,\r\n  Pattern,\r\n  Marker\r\n], getMethodsFor('viewbox'))\r\n\r\nextend([\r\n  Line,\r\n  Polyline,\r\n  Polygon,\r\n  Path\r\n], getMethodsFor('marker'))\r\n\r\nextend(Text, getMethodsFor('Text'))\r\nextend(Path, getMethodsFor('Path'))\r\n\r\nextend(Defs, getMethodsFor('Defs'))\r\n\r\nextend([\r\n  Text,\r\n  Tspan\r\n], getMethodsFor('Tspan'))\r\n\r\nextend([\r\n  Rect,\r\n  Ellipse,\r\n  Gradient,\r\n  Runner\r\n], getMethodsFor('radius'))\r\n\r\nextend(EventTarget, getMethodsFor('EventTarget'))\r\nextend(Dom, getMethodsFor('Dom'))\r\nextend(Element, getMethodsFor('Element'))\r\nextend(Shape, getMethodsFor('Shape'))\r\nextend([ Container, Fragment ], getMethodsFor('Container'))\r\nextend(Gradient, getMethodsFor('Gradient'))\r\n\r\nextend(Runner, getMethodsFor('Runner'))\r\n\r\nList.extend(getMethodNames())\r\n\r\nregisterMorphableType([\r\n  SVGNumber,\r\n  Color,\r\n  Box,\r\n  Matrix,\r\n  SVGArray,\r\n  PointArray,\r\n  PathArray,\r\n  Point\r\n])\r\n\r\nmakeMorphable()\r\n", "import { SVG, Text } from \"@svgdotjs/svg.js\";\n\ndeclare var lorem: string;\n\nconst mainDoc = SVG(\"#mainDoc\");\nconst text1 = SVG(\"#text0\") as Text;\ntext1.text(lorem);"],
  "mappings": "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",
  "names": []
}
